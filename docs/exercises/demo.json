[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Demo of the exercise environment",
    "stars": 0
  },
  {
    "id": "demo",
    "prelude": "(* Some code is loaded in the toplevel before your code. *)\nlet greetings = \"Hello world!\"\n",
    "template": "\nlet plus x y = x + y ;;\nlet plus_tests = [\n  ((1, 1), 2);\n  ((1, 0), 1)\n];;\n\nlet minus x y = y - x ;;\nlet minus_tests = [\n  ((1, 2), 1)\n];;\n\nlet times x y = x *\n",
    "descr": [
      [
        "",
        "<p>\n  This exercise is just a demo for the exercise environment.\n</p>\n\n<h2>The task</h2>\n\n<p>\n  In this test-bed exercise you are asked to (re)implement the basic\n  integer-arithmetic functions.\n</p>\n\n<p>\n  You are also asked to write test suites for these functions. A test\n  suite is specified as a list of input/expected output pairs. These\n  tests will be run against some buggy programs to test their coverage.\n</p>\n\n<ol>\n  <li>\n    Write a function <code>plus</code> of type <code>int -> int -> int</code>.\n    <ul>\n      <li>\n        Write some test cases for this function in the variable\n        <code>plus_tests</code>. Your test cases should be pairs of type\n        <code>(int * int) * int</code>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Write a function <code>minus</code> of type <code>int -> int -> int</code>.\n    <ul>\n      <li>\n        Write some test cases for this function in the variable\n        <code>minus_tests</code>. Your test cases should be pairs of type\n        <code>(int * int) * int</code>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Write a function <code>times</code> of type <code>int -> int -> int</code>.\n    <ul>\n      <li>\n        Write some test cases for this function in the variable\n        <code>times_tests</code>. Your test cases should be pairs of type\n        <code>(int * int) * int</code>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Write a function <code>divide</code> of type <code>int -> int -> int</code>.\n    <ul>\n      <li>\n        Write some test cases for this function in the variable\n        <code>divide_tests</code>. Your test cases should be pairs of type\n        <code>(int * int) * int</code>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Write a function <code>sum3</code> of type <code>int -> int -> int -> int</code>.\n</ol>\n\n<p>\n  The preloaded template contains a minor syntax error and is only a\n  partially valid answer. These errors were introduced in order to let\n  you experiment with the error reporting mechanism and the grading\n  report. Try the <code>Check</code> button, for instance.\n  <br/>\n  Feel free to introduce more errors and to stress the system,\n  the resulting grade for this exercise will not be taken into account\n  in the global grade and you might submit as many solutions as you\n  wish.\n  <br/>\n  If you end up writing an infinite computation, the system will\n  detect it after a while and ask you to stop the script. It will\n  slow your browser down until that point, since everything is done\n  on your side, via your JavaScript engine.\n  So don't worry, you can try and break the system as much as you\n  want, it should not break anything on our servers.\n</p>\n"
      ]
    ],
    "prepare": "",
    "test": "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",
    "solution": "KNsglMXCPxK2VMLnjO212nYVTRo2TEwzPVVCQUOgc16At99tWWDKVychqfXAl1/t5WCUKnxauaG6Qs9Zx7GXsj6fRpV7RMcGmK1Ar1FTMKFoUgUln0sDtDoHHcRC6Sqg+uGWrIRPWaW3YW8TU8FAbqjI8WmNT9GwfQQCiJ8oxH5inyeQ7IhQjZVYmquCgixe1l5pZ8sVXEkwVF6DW4jsnC+fSTk+YNJkPmiguPznsWzA13tuJ7Gbd+FCjWvvIhWnQ7QLXWIB8i+8i8OxlAAiwmo2/QeBdVHaPE5WzUK+ItZA9Nvbb5==",
    "max-score": 48
  },
  null
]