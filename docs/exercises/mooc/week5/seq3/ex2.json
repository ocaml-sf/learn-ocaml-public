[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Producing Fine ASCII Art",
    "stars": 2,
    "backward_exercises": [
      "mooc/week5/seq3/ex1"
    ]
  },
  {
    "id": "ex2",
    "prelude_ml": "type image = int -> int -> bool ;;\n\nlet all_white = fun x y -> false ;;\n\nlet all_black = fun x y -> true ;;\n\nlet checkers = fun x y -> y/2 mod 2 = x/2 mod 2 ;;\n\nlet square cx cy s = fun x y ->\n  let minx = cx - s / 2 in\n  let maxx = cx + s / 2 in\n  let miny = cy - s / 2 in\n  let maxy = cy + s / 2 in\n  x >= minx && x <= maxx && y >= miny && y <= maxy\n;;\n\nlet disk cx cy r = fun x y ->\n  let x' = x - cx in\n  let y' = y - cy in\n  (x' * x' + y' * y') <= r * r\n;;\n\ntype blend =\n  | Image of image\n  | And of blend * blend\n  | Or of blend * blend\n  | Rem of blend * blend\n;;\n",
    "template": "let display_image width height f_image =\n  \"Replace this string with your implementation.\" ;;\n\nlet rec render blend x y =\n  \"Replace this string with your implementation.\" ;;\n\nlet display_blend width height blend =\n  \"Replace this string with your implementation.\" ;;\n",
    "descr": [
      [
        "",
        "<p>\n  In this exercise, we will display black and white images as text,\n  where a black dot is printed as a <code>'#'</code> and a white dot\n  as a <code>' '</code>.\n</p>\n\n<p>\n  Instead of using imperative constructs for storing our images,\n  images will simply be functions that take an <code>x</code> and\n  a <code>y</code> and return a boolean that indicates if the function\n  is black or white at this point.\n\n  <br/>\n\n  This is materialized by the <code>image</code> type alias given in\n  the prelude.\n\n  <br/>\n\n  We will only use imperative features to display them.\n</p>\n\n<ol>\n  <li>\n    Define a higher order function <code>display_image: int -> int ->\n    image -> unit</code> that takes an integer <code>width</code>,\n    another one <code>height</code>, a function which takes\n    an <code>x</code> and a <code>y</code>, and renders (prints) the\n    boolean function as a series of lines, using two\n    nested <code>for</code> loops.\n\n    <br/>\n\n    Each line corresponds to a <code>y</code>, the first line printed\n    being for <code>y = 0</code>, the last one for <code>y =\n      height</code>.\n\n    <br/>\n\n    In each line, the first character printed must be for <code>x =\n      0</code>, the last one for <code>x = width</code>. When the\n    function result is <code>true</code>, a sharp (<code>'#'</code>)\n    must be displayed, and a space otherwise.\n\n    <br/>\n\n  To try your function, the prelude defines sample images and image\n  builders.\n\n  <br/>\n\n  For instance, the image <code>disk 5 5 5</code> would be displayed\n  as the following ASCII art, when rendered between\n  coordinates <code>0 &lt;= x &lt;= 10</code> and <code>0 &lt;= y\n  &lt;= 10</code>.\n<pre>\n     #\n  #######\n #########\n #########\n #########\n###########\n #########\n #########\n #########\n  #######\n     #\n</pre>\n\n  </li>\n  <li>\n    Now, we want to blend images to compose complex images from simple\n    ones. For this, we will use the <code>blend</code> type given the\n    prelude.\n\n    <br/>\n\n    If we take two functions <code>f</code> and <code>g</code>, we\n    have that:\n    <ul>\n      <li>\n        <code>Image f</code> <br/>is the blended image looking exactly\n        like <code>f</code>.\n      </li>\n      <li>\n        <code>And (Image f, Image g)</code> <br/> is the blended image\n        that is black only where both <code>f</code>\n        and <code>g</code> are both black.\n      </li>\n      <li>\n        <code>Or (Image f, Image g)</code> <br/> is the blended image that is\n        black wherever either <code>f</code> or <code>g</code> or both\n        are black.\n      </li>\n      <li>\n        <code>Rem (Image f, Image g)</code> <br/> is the blended image\n        that is black wherever <code>f</code> is black and\n        <code>g</code> is not.\n      </li>\n    </ul>\n\n    Write a recursive <code>render : blend -> int -> int ->\n    bool</code> function, that tells, for a given <code>x</code>\n    and <code>y</code> the boolean color of the point, considering the\n    given blended image.\n  </li>\n  <li>\n    Define a function <code>display_blend: int -> int -> blend ->\n      unit</code> that takes a <code>width</code>, another\n      one <code>height</code>, a blended image, and displays it by\n      combining the two previous functions.\n\n    <br/>\n    As an example, the blend <code>display_blend 10 10 (Rem\n      (Image all_black, Image (disk 5 5 5)))</code> would be displayed as\n    the following ASCII art.\n<pre>\n##### #####\n##       ##\n#         #\n#         #\n#         #\n\n#         #\n#         #\n#         #\n##       ##\n##### #####\n</pre>\n  </li>\n</ol>\n\n<p>\n  <strong>Bonus question:</strong> Did you see that the type\n  of <code>render</code> is actually equivalent to <code>blend ->\n  image</code>?\n</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAABNEAAAEAAAAD8QAAA96gJ1ByZWx1ZGWgwaAlaW1hZ2UAdwgAADgAQEBAQZDAwUDAs5CjI2ludEFAkEACBfXhAEAAzsDBQMCzkAQIQJBAAgX14QBAAM/As5CjJGJvb2xFQJBAAgX14QBAANBAAgX14QBAANFAAgX14QBAANJAQEBAsMAJPS4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9tb29jL3dlZWs1L3NlcTMvZXgyL3ByZWx1ZGUubWxBQEDABAJBQF9AQECgQEChBCFAQUCgsKApYWxsX3doaXRlAHjQwMFAwJBAAgX14QBAANPAwUDABAQCBfXhAEAA1MCzkAQYQJBAAgX14QBAANVAAgX14QBAANZAAgX14QBAANdAsMAEFkNkaMAEF0NkcUBAoQQ1QUCgsKApYWxsX2JsYWNrAHnQwMFAwAQUAgX14QBAANjAwUDABBcCBfXhAEAA2cCzBBNAkEACBfXhAEAA2kACBfXhAEAA20ACBfXhAEAA3ECwwAQoRQBJAE3ABClFAEkAVkBAoQRHRECgsKAoY2hlY2tlcnMAetDAwUDAs5CjI2ludEFAkEACBfXhAEAA3cDBQMCzBAhAkEACBfXhAEAA3sCzkKMkYm9vbEVAkEACBfXhAEAA30ACBfXhAEAA4EACBfXhAEAA4UCwwARERwBtAHHABEVHAG0AeUBAoQRjR0CgsKAmc3F1YXJlAHvQwMFAwLOQBBxAkEACBfXhAEAA4sDBQMCzBAZAkEACBfXhAEAA48DBQMCzBCdAkEACBfXhAEAA5MDBQMCzkAQsQJBAAgX14QBAAOXAwUDAswQGQJBAAgX14QBAAObAs5AEKkCQQAIF9eEAQADnQAIF9eEAQADoQAIF9eEAQADpQAIF9eEAQADqQAIF9eEAQADrQAIF9eEAQADsQLDABGxJAQChAQClwARtSQEAoQEAq0BAoQSLSkCgsKAkZGlzawB80MDBQMCzkAREQJBAAgX14QBAAO3AwUDAswQGQJBAAgX14QBAAO7AwUDAs5AET0CQQAIF9eEAQADvwMFAwLOQBFVAkEACBfXhAEAA8MDBQMCzBAZAkEACBfXhAEAA8cCzkARTQJBAAgX14QBAAPJAAgX14QBAAPNAAgX14QBAAPRAAgX14QBAAPVAAgX14QBAAPZAAgX14QBAAPdAsMAElVEBAWQBAWjABJZRAQFkAQFsQEChBLRUQKDBoCVibGVuZAB9CAAAOABAQJGg4KAlSW1hZ2UAc5CgwLOQBMBAkEACBfXhAEAA/kBAsMAEqVgBAdwBAd7ABKpYAQHcAQHuQEChBMhdoOCgI0FuZAB0kKDAs5AEG0CQQAIF9eEAQAD9oMCzBAVAkEACBfXhAEAA/EBAsMAEu1kBAe8BAfHABLxZAQHvAQIHQEChBNpeoOCgIk9yAHWQoMCzBBJAkEACBfXhAEAA+6DAswQWQJBAAgX14QBAAPpAQLDABMxaAQIIAQIKwATNWgECCAECH0BAoQTrX6DgoCNSZW0AdpCgwLMEI0CQQAIF9eEAQAD5oMCzBCdAkEACBfXhAEAA+EBAsMAE3VsBAiABAiLABN5bAQIgAQI4QEChBPxgQEFAQEBAQLDABOFXAQHPAQHPBARAQEAE36EE/1xBQECElaa+AAAAugAAABkAAABiAAAATqCgJ1ByZWx1ZGWQMPKwghI752MwUnX9RjK1UJegoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAw8rCCEjvnYzBSdf1GMrVQl6CgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAlAAAAB1AAAByAAAAbagKFNvbHV0aW9uoLCgLWRpc3BsYXlfaW1hZ2UAatDAwUDAs5CjI2ludEFAkEACBfXhAEAA5sDBQMCzBAhAkEACBfXhAEAA58DBQMDBQMCzBA9AkEACBfXhAEAA6MDBQMCzBBRAkEACBfXhAEAA6cCzkKMkYm9vbEVAkEACBfXhAEAA6pCQQQIF9eEAQADrkJBBAgX14QBAAOzAs5CjJHVuaXRGQJBAAgX14QBAAO1AAgX14QBAAO5AAgX14QBAAO9AAgX14QBAAPBAsMAJPi4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9tb29jL3dlZWs1L3NlcTMvZXgyL3NvbHV0aW9uLm1sQUBEwAQCQUBRQEChBDRAQKCwoCZyZW5kZXIAa9DAwUDAs6GQkidQcmVsdWRlJWJsZW5kQJBAAgX14QBAAPHAwUDAs5CjI2ludEFAkEACBfXhAEAA8sDBQMCzkAQIQJBAAgX14QBAAPPAswQyQJBAAgX14QBAAPRAAgX14QBAAPVAAgX14QBAAPZAAgX14QBAAPdAsMAEJUoBALgBAMDABCZKAQC4AQDGQEChBFhGQKCwoC1kaXNwbGF5X2JsZW5kAGzQwMFAwLMEV0CQQAIF9eEAQAD4wMFAwLMEXECQQAIF9eEAQAD5wMFAwLOhBC4EK0CQQAIF9eEAQAD6wLMERECQQAIF9eEAQAD7QAIF9eEAQAD8QAIF9eEAQAD9QAIF9eEAQAD+QLDABEFRAQGZAQGdwARCUQEBmQEBqkBAoQR0UUBAhJWmvgAAAPMAAAAjAAAAhQAAAGugoChTb2x1dGlvbpAwE8YiL6Cjg+uS0lKN9v5zhKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDDysIISO+djMFJ1/UYytVCXoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAE4FQAAABiAAAAKQAAACoAAAAEAAAAAAAAAA4AAABvAAAADAAAABAAAABvAAAADgAAAA8AAABwAAAACwAAAAwAAABwAAAADQAAAA4AAABwAAAAbgAAAHwAAAAoAAAABwAAACkAAAAqAAAABAAAAGUAAAANAAAAcQAAAAsAAABvAAAAagAAAA4AAABxAAAADAAAAG4AAABqAAAADwAAAHEAAAAOAAAAbwAAAGoAAAAQAAAAcQAAAA8AAABuAAAADQAAABIAAAAIAAAAfgAAAFYAAAARAAAAAgAAABIAAAAIAAAAfAAAAFYAAAALAAAAAQAAABIAAAAJAAAAfgAAAFYAAAAFAAAAAAAAABIAAAAJAAAAfAAAACgAAAAJAAAAKQAAACoAAAABAAAAZQAAAGoAAAAMAAAAcQAAAHIAAABqAAAAagAAAA4AAABxAAAAcgAAAHkAAAAoAAAAAgAAACkAAAAqAAAAAQAAAGQAAAAoAAAAAgAAACkAAAAqAAAAAQAAAGMAAAAoAAAAAgAAACsAAAAAAAAA+f///wkAAAArAAAAAAAAAO////8JAAAAKwAAAAAAAADb////CQAAACsAAAAAAAAAqP///wkAAAArAAAAAAAAAI7///8KAAAADAAAAA4AAAAQAAAAEgAAAAgAAAA+AAAABQAAAAAAAAATAAAABQAAADkAAAAAAAAAOgAAADkAAAAAAAAAVAAAAJcAAAApAAAAKgAAAAIAAAAAAAAAVwAAAAAABAAEAAAACgAAABsAAAAsAAAAAgAAAAwAAAAMAAAAQwAAACYAAAAFAAAAAgAAAAwAAAAMAAAAQwAAADIAAAAjAAAAVgAAAAgAAAACAAAADAAAAAwAAABEAAAAMgAAACcAAAAGAAAAKAAAAAMAAAACAAAADAAAAAwAAABDAAAAMgAAACMAAABVAAAACAAAAAIAAAAMAAAADAAAAEQAAAAyAAAAJwAAAAYAAAAoAAAAAwAAAAIAAAAMAAAADAAAAEQAAAAyAAAAIwAAAFYAAAAEAAAAYwAAACgAAAADAAAAAgAAAAwAAAAMAAAAQwAAADIAAAAnAAAABgAAACkAAAAqAAAAAgAAAAIAAAAcAAAAIQAAAAwAAAAMAAAAGwAAACcAAAAGAAAAKQAAACoAAAACAAAAYwAAAAwAAAAJAAAADAAAAH0AAABVAAAAOwAAAFwAAABjAAAADQAAAAkAAAAMAAAAfQAAAFUAAAAhAAAAXAAAAAMAAAAMAAAAEgAAAAgAAAAiAAAAVgAAAAkAAABnAAAAIwAAADgAAAAAAAAAKAAAACEAAABUAAAABwAAAGcAAAAgAAAAOAAAAAAAAAAoAAAAIQAAAAEAAAAJAAAAfwAAAAEAAAAUAAAAAgAAAAEAAAB6AAAAVQAAAOH///9jAAAAEwAAAAIAAABjAAAAOAAAAAAAAAAuAAAAIQAAAAEAAAAJAAAAfwAAAAEAAAAUAAAAAgAAAAEAAAB6AAAAVQAAAMf///9jAAAAKAAAAAUAAAArAAAAAAAAALj///8JAAAALAAAAAEAAAAAAAAAZP///wAAAAAMAAAAKwAAAAIAAACj////CgAAAAwAAAAOAAAAQQAAAAAAAAATAAAAAwAAADkAAAAAAAAAhJWmvgAAAvsAAAB5AAAByAAAAYLQoAgAACgAJ1ByZWx1ZGVQAQIMoKCSkgQFAQIIQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBAyQMPKwghI752MwUnX9RjK1UJegoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQEBAQEBAoAgAACgAJ1ByZXBhcmUBAhxMoKCSkgQFSECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAw8rCCEjvnYzBSdf1GMrVQl6CgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQECgCAAAKAAoU29sdXRpb24BAigBArigoJGSJlN0ZGxpYgEBuKCgkQQFAQHYoKCRBAgBAiCgoJKSBBABArRAoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAEF5AwE8YiL6Cjg+uS0lKN9v5zhKCgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDDysIISO+djMFJ1/UYytVCXoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCgBC9AQEBAQEBAQEBA",
        "js": "function\ndynload(m){\"use strict\";var\nn={},a=m.jsoo_runtime,d=a.caml_mul,e=a.caml_register_global;function\nf(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\nh(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}var\nc=a.caml_get_global_data().Stdlib;function\ni(b,a){return 0}function\nj(b,a){return 1}function\nk(b,a){return((a/2|0)%2|0)===((b/2|0)%2|0)?1:0}function\nl(f,e,a,d,c){var\ng=(f-(a/2|0)|0)<=d?1:0,j=f+(a/2|0)|0,k=e-(a/2|0)|0,l=e+(a/2|0)|0;if(g){var\nh=d<=j?1:0;if(h)var\ni=k<=c?1:0,b=i?c<=l?1:0:i;else\nvar\nb=h}else\nvar\nb=g;return b}e(0,[0,i,j,k,l,function(h,g,a,f,e){var\nb=f-h|0,c=e-g|0;return(d(b,b)+d(c,c)|0)<=d(a,a)?1:0}],\"Prelude\");e(1,[0],\"Prepare\");function\ng(e,d,g){var\ni=0;if(!(d<0)){var\na=i;for(;;){var\nj=0;if(!(e<0)){var\nb=j;for(;;){if(h(g,b,a))f(c[41],35);else\nf(c[41],32);var\nl=b+1|0;if(e!==b){var\nb=l;continue}break}}f(c[47],0);var\nk=a+1|0;if(d!==a){var\na=k;continue}break}}return 0}function\nb(g,d,c){var\na=g;for(;;)switch(a[0]){case\n0:return h(a[1],d,c);case\n1:var\ne=b(a[1],d,c);if(e){var\na=a[2];continue}return e;case\n2:var\nf=b(a[1],d,c);if(f)return f;var\na=a[2];continue;default:if(b(a[2],d,c))return 0;var\na=a[1];continue}}e(3,[0,g,b,function(d,c,a){return g(d,c,function(c,d){return b(a,c,d)})}],\"Solution\");return n}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(bJ){\"use strict\";var\nbK={},L=\"all_black\",x=\"blend\",m=\"Test\",h=109,w=\"image\",K=\"unit\",J=\"(square 5 5 5)\",N=\"render\",O=\"(square 3 7 3)\",G=\"(disk 5 5 5)\",H=\"(disk 3 7 3)\",I=\"(square 7 3 3)\",M=\"checkers\",F=\"display_blend\",j=\"int\",v=\"display_image\",i=bJ.jsoo_runtime,a=i.caml_string_of_jsbytes,bI=i.caml_wrap_exception;function\ng(a,b){return a.length==1?a(b):i.caml_call_gen(a,[b])}function\nd(a,b,c){return a.length==2?a(b,c):i.caml_call_gen(a,[b,c])}function\nf(a,b,c,d){return a.length==3?a(b,c,d):i.caml_call_gen(a,[b,c,d])}function\nl(a,b,c,d,e){return a.length==4?a(b,c,d,e):i.caml_call_gen(a,[b,c,d,e])}function\nu(a,b,c,d,e,f,g,h,j,k,l,m){return a.length==11?a(b,c,d,e,f,g,h,j,k,l,m):i.caml_call_gen(a,[b,c,d,e,f,g,h,j,k,l,m])}var\nk=i.caml_get_global_data(),s=k.Stdlib__random,c=k.Ast_helper,q=k.Ty,b=k.Test_lib,p=k.Stdlib,y=k.Ast_mapper,e=k.Prelude,bA=[0,1],bB=[0,0],bC=[0,[0,10,0]],aK=[0,1],aL=[0,0],aM=[0,[0,10,0]],aF=a(v),aG=[0,a(K)],aH=[0,a(w)],aI=[0,a(j)],aJ=[0,a(j)],aN=[0,[2,[0,[0,a(\"You used a two nested loops, bravo!!\")],0],[0,5]],[0,[2,[0,[0,a(\"Now I will check that it behaves correctly\")],0],3],0]],aO=[0,[2,[0,[0,a(\"I can't find the inner for loop!\")],0],0],0],aP=[0,[2,[0,[0,a(\"I can't find any for loop!\")],0],0],0],P=a(j),Q=a(\"learnocaml_autoregister_int_42BB52\"),R=a(m),T=a(I),W=a(I),Z=a(O),aa=a(O),ad=a(J),ag=a(\"(disk 5 5 3)\"),aj=a(\"(disk 7 3 3)\"),am=a(H),ap=a(H),as=a(G),au=a(\"all_white\"),aw=a(L),ay=a(M),aA=a(w),aB=a(\"learnocaml_autoregister_image_CCABEA\"),aC=a(m),aD=a(\"Grading exercise 1.\"),aQ=a(v),aR=[0,[0,a(\"Exercise 1: \")],[0,[1,a(v)],0]],aT=a(J),aW=a(G),aY=a(L),a0=a(M),a2=a(w),a3=a(\"learnocaml_autoregister_image_DD682E\"),a4=a(m),a6=a(x),a7=a(\"learnocaml_autoregister_blend_4BCC67\"),a8=a(m),a9=a(j),a_=a(\"learnocaml_autoregister_int_4438D8\"),a$=a(m),ba=a(\"Grading exercise 2.\"),bb=a(N),bc=[0,a(\"bool\")],bd=[0,a(j)],be=[0,a(j)],bf=[0,a(x)],bh=[0,20],bi=[0,[0,a(\"Exercise 2: \")],[0,[1,a(N)],0]],bj=a(j),bk=a(\"learnocaml_autoregister_int_5A61C5\"),bl=a(m),bm=a(\"Grading exercise 3.\"),bo=a(F),bp=[0,a(K)],bq=[0,a(x)],br=[0,a(j)],bs=[0,a(j)],bE=[0,20],bF=[0,[0,a(\"Exercise 3: \")],[0,[1,a(F)],0]],a5=k.Solution;function\no(e){var\nb=[0,0];try{var\nf=function(e,c){var\na=c[1];if(typeof\na!==\"number\"&&18===a[0]){b[1]=[0,a[5]];throw p[3]}return d(y[1][17],e,c)},a=y[1],c=[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],f,a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],a[26],a[27],a[28],a[29],a[30],a[31],a[32],a[33],a[34],a[35],a[36],a[37],a[38],a[39],a[40],a[41],a[42],a[43],a[44],a[45]];d(c[17],c,e);var\ng=b[1];return g}catch(a){a=bI(a);if(a===p[3])return b[1];throw a}}function\nz(a){return 10}l(b[h][1][13],R,Q,P,z);var\nS=f(e[4],7,3,3),U=[0,d(b[54],T,S),0],V=f(e[4],7,3,3),X=[0,d(b[54],W,V),U],Y=f(e[4],3,7,3),_=[0,d(b[54],Z,Y),X],$=f(e[4],3,7,3),ab=[0,d(b[54],aa,$),_],ac=f(e[4],5,5,5),ae=[0,d(b[54],ad,ac),ab],af=f(e[5],7,3,3),ah=[0,d(b[54],ag,af),ae],ai=f(e[5],7,3,3),ak=[0,d(b[54],aj,ai),ah],al=f(e[5],3,7,3),an=[0,d(b[54],am,al),ak],ao=f(e[5],3,7,3),aq=[0,d(b[54],ap,ao),an],ar=f(e[5],5,5,5),at=[0,d(b[54],as,ar),aq],av=[0,d(b[54],au,e[1]),at],ax=[0,d(b[54],aw,e[2]),av],az=[0,d(b[54],ay,e[3]),ax],A=g(b[52],az);l(b[h][1][13],aC,aB,aA,A);g(b[h][4],aD);function\naE(e){var\na=o(e);if(a){if(o(a[1])){var\nh=g(q[2],[0,[1,0,[0,[3,[0,aJ,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,aI,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,aH,c[1][1]],0],c[1][1],0,0],[0,[3,[0,aG,c[1][1]],0],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]),f=0,i=0,j=0,k=0,m=0,n=0,r=b[39],s=[0,function(a){return d(l(r,aM,aL,0,aK),0,a)}],t=u(b[74],0,[0,b[28]],s,n,m,k,j,i,h,aF,f);return d(p[37],aN,t)}return aO}return aP}var\nB=[0,aR,f(b[17],b[h][2],aQ,aE)],aS=f(e[4],5,5,5),aU=[0,d(b[54],aT,aS),0],aV=f(e[5],5,5,5),aX=[0,d(b[54],aW,aV),aU],aZ=[0,d(b[54],aY,e[2]),aX],a1=[0,d(b[54],a0,e[3]),aZ],n=g(b[52],a1);l(b[h][1][13],a4,a3,a2,n);function\nr(p){a:for(;;){var\na=function(b){if(0===g(s[5],b))return[0,g(n,0)];var\nc=g(s[5],3);if(0===c){var\nd=a(b-1|0);return[1,a(b-1|0),d]}if(1===c){var\ne=a(b-1|0);return[2,a(b-1|0),e]}var\nf=a(b-1|0);return[3,a(b-1|0),f]},h=a(4),b=0,j=1,i=1;b:for(;;){var\nc=0,l=j,k=i;for(;;){if(f(a5[2],h,c,b))var\ne=l,d=0;else\nvar\ne=0,d=k;var\no=c+1|0;if(10!==c){var\nc=o,l=e,k=d;continue}var\nm=b+1|0;if(10!==b){var\nb=m,j=e,i=d;continue b}if(!d&&!e)return h;continue a}}}}l(b[h][1][13],a8,a7,a6,r);function\nC(a){return g(s[5],2)+6|0}l(b[h][1][13],a$,a_,a9,C);g(b[h][4],ba);var\nbg=g(q[2],[0,[1,0,[0,[3,[0,bf,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,be,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,bd,c[1][1]],0],c[1][1],0,0],[0,[3,[0,bc,c[1][1]],0],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]),D=[0,bi,u(b[74],bh,0,0,0,0,0,0,0,bg,bb,0)];function\nt(a){return 10}l(b[h][1][13],bl,bk,bj,t);g(b[h][4],bm);var\nbt=g(q[2],[0,[1,0,[0,[3,[0,bs,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,br,c[1][1]],0],c[1][1],0,0],[0,[1,0,[0,[3,[0,bq,c[1][1]],0],c[1][1],0,0],[0,[3,[0,bp,c[1][1]],0],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]],c[1][1],0,0]),bn=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=b[39],bD=[0,function(a){return d(l(bz,bC,bB,0,bA),0,a)}],E=[0,bF,u(b[74],bE,[0,b[28]],bD,by,bx,bw,bv,bu,bt,bo,bn)];function\nbG(a){return[0,B,[0,D,[0,E,0]]]}var\nbH=f(b[26],0,b[h][2],bG);g(b[1],bH);i.caml_register_global(76,[0,o,z,A,B,n,n,r,r,C,D,t,t,E],m);return bK}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 175
  },
  null
]