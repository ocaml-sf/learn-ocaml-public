[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Time on Planet Shadokus",
    "stars": 2,
    "focus": [
      "Record manipulation",
      "recursive functions"
    ],
    "backward_exercises": [
      "hferee/4.2_coordinates"
    ]
  },
  {
    "id": "ex1",
    "prelude": "type date =\n  { year : int; month : int; day : int;\n    hour : int; minute : int }\n\nlet the_origin_of_time =\n  { year = 1; month = 1; day = 1;\n    hour = 0; minute = 0 }\n",
    "template": "let wellformed date =\n  \"Replace this string with your implementation.\" ;;\n\nlet next date =\n  \"Replace this string with your implementation.\" ;;\n\nlet of_int minutes =\n  \"Replace this string with your implementation.\" ;;\n",
    "descr": [
      [
        "",
        "<p>\n  On planet Shadokus, a year has 5 months, each month has 4 days, each\n  day has 3 hours and each hour has 2 minutes. A calendar date is\n  therefore defined as the record type <code>date</code> of the given\n  prelude.\n</p>\n\n<ol>\n  <li>\n    A date is well-formed if its year index is <code>&gt;= 1</code>,\n    its month index is <code>&gt;= 1</code> and <code>&lt;= 5</code>,\n    its day index is <code>&gt;= 1</code> and <code>&lt;= 4</code>,\n    its hour index is <code>&gt;= 0</code> and <code>&lt;= 2</code>,\n    and its minute index is <code>&gt;= 0</code> and <code>&lt;=\n      1</code>.\n\n    <br/>\n\n    The start of year <code>12</code> would be:\n    <pre>{ year = 12; month = 1; day = 1; hour = 0; minute = 0 }</pre>\n\n    The end of year <code>12</code> would be:\n    <pre>{ year = 12; month = 5; day = 4; hour = 2; minute = 1 }</pre>\n\n    <br/>\n\n    Write a function <code>wellformed : date -> bool</code> which\n    checks that the input date is well formed.\n  </li>\n  <li>\n    On planet Shadokus, the origin of time is the discovery of the\n    Big-Lambda-Machine, a magical computer that evaluates the infinite\n    lambda-term of time. It is defined by\n    value <code>the_origin_of_time</code> of the given prelude.\n    <br/>\n    Write a function <code>next : date -> date</code> which computes\n    the date which comes one minute after the input date.\n  </li>\n  <li>\n    In this computer, the time is represented by an integer that\n    counts the number of minutes since <code>1/1/1 0:0</code> (the\n    origin of time).\n    <br/>\n    Write a function <code>of_int : int -> date</code> that converts\n    such an integer into a <code>date</code>.\n  </li>\n</ol>\n"
      ]
    ],
    "prepare": "",
    "test": "2cTf0sCouNY4O8M2Sn9VGWMkCBcFZ/VQKmxeWVXsfJsfcoFoEBb4H71cu+SlbahKoDTP4mxivaC6Qs/8hjXTdQdhSodjEJ1074/aahQ0TqJoTwUC8qlFcDoIFvxDij0LDZWTthRPA0mLH8qTTmEMrfzIzU0mS/qsfpBCpIX+cCthygU5lMPwm6dcNT1Z3SIWLQUCARcQVlkwBREYEK8xloGfQTkVLZIRJ7mxuKDe9WGK1Ntn0Tr9cvFLjRn7Ow48+BoOFDYQpkPMw8n9klU0hiFTqlaBpBTa+BoZ/9KZWYQlixKwlEkmgJVz3Jx12E8ufxvEXYFxWri6TUe38tKh3i4WdzWUp3yeXEJyNpRgUF28QUkMEUk1S8kqVlB3bunB2PQbLCx6yBhfNqehpv7t0JF5iTAsWOv7xVaZE+Iu/egCN5IvZlT4EYzpPuyBAGyt1Qm+AIiOU0guEFvUBNgpnQX4jN4QTo+dlDQelldoSPupdhQ25VJQfPZNUYy+/4Rp2duu+ND3fZ2L+CNjXX/NViJ+TQR3TEtZ2BABD6DlxYZre5QcSGDLXnghsx+cbbM5oDSU4jNnfvK6Xc/KxyLSaoAjHkFmAJY09qQnxtwULPJtTxRUp41QgToIFt/Z9WuLF1y+hNB3D0n24XWGGiRIgaCY6BrBEDbwwEkM71rOcDlh6Ld5lMOn659sJzUEZFBG3EEAAkcNUR/lEAAOEPjw9TryQSoOYJMQJ7vst0ivbCCJ42xvNm4vqfFSnBHaKhnUQ8YCUWIQ65rJcHas6AB9vXEXlAfTtlndMUQNjAa30NAIzd4cpVQWbJFsOdgPIFPfrM4RFIEWF07aTQHA62r53D7ZqmHQyryeWUJN3lEsUAQ7DBlAVGZ2WDkVERlZr4X7Oex+PQp/z5kmZ+i3aLWy0h9fiTEi1qrnxVTZAKIpq0gCN5I1LVeSQhyw4gaFT7CcPED1AZWmRLpiVQ4YW0t76EC0yunJTprdxyVk/pBdRuObiIRS5QAVrKRWZxyL8qRk2cHsIMiDzd13LC6fC8A3AjNSTV1eGR9Z+VkYWlXsu15zr8NdGnSUEyloha7cf3Nce6eYO82nr3PtDgVUiWLZf9IbCkFaEPRKoeApxIwJKvZoXIV4fg92bW6VHsFC8A7EQM74v+d2UbbF3GaTLkF7bqDJkoLbWFTyeR9Vcx8GtXgm6Poq/I+WopMdZk293RYCLUFFRREUBmNwEGxVV3Gszy8mEy5v12sEWX7suLjIwzOQ42toYivRxsU+5UW7K4LzBjRBGDFV66zTcyaj6GMus8RO/pGEfpWbPC5+d9KRIxRAzcuclEdWqNB54xA0T5fqqtqQDdgF+u80DAqI5tCy+U4XdGnF/fDJH9JyNpRgUF28QUkMER9ZGW/uFEFJxb7M3rhEPV6bjotnLO8Rq4zsZZo5//V81rv7xVaZE+Iu/egCN5IvY67MCd76KfKERnGd1US1TenfU+1WVR0YQrJyooTS/0PQRjjdwHF86ldmL+Kkjt1Pl9hVrugPTJLLe0sg4YSc0g+dxM5E+z2KCFNQVjNBTUpRGR9Z+RARQVXvqL2cepcbASzUEQowlrifrvwr/jDuLCpbqa0xEJ1ex7rXq9IjA/F7EIYL74Ra/xFUP36oBct0p0gPqH5UQwla9SDLBrSTthRNPLmQNDqTTmFIbqCI6E+BCjfwuE2MnJe+rmkap4E5jtuwbk/xG6l=",
    "solution": "qnLkumO13qA4nSOWSH8BJjMYCAkDA6/UJ/gFXQrguI/7xUFkG8WJRHMkgOLxufY5zTSJVWNnwr4kXgs3cjXTq5MjQFFaEMB3oaQyeY93ZLNoUx6Pz0NXr8pNFtR49WCEC2Xpa2AWUajCNCXOTnBIaP+Io5yURVGwsUkZ7Y0BrzzeZf3wZJsgfR4C11xNKMEhI66NS61ZWkYdX/UVALyfnHPkFGcVZsk4MT4hhqyednDVNN9jLS3bghsk/VTjKcyeGzICWT9QileIwzTsnUdvw8/V/QrAf9vd2BwD7/zR0dlOmxfhlBIWaYMl4gI02EHfe+KERtBYRrmjGUnByMrh10UxdbI6yT0hGNIll6YWpXpvBllBWF2MTSpQDRUBr0nA4qRuPVV5jpRmPOmhbPrl+ZBd/DIvPLajgFaEE3c7j3tW1pJ+Y5GGVvPl4f8IUnHnOA7VBhezAep5VQTYFs/ynzv0jqiQFB0h9WBblo6hHLLppMtTlptIv3pCG2qL64QtfG4tg7vMYq/ZziHLDWHu4GMEARcUGVB4+VRQTBC/fNpee5/hGlu0XiNhcvmgru2/oGP2KnsnurPhXdQRgzuOq99jElw7WM/3jaR7eZQ0ZLdhAMA06LNMqCoVSaJC9W4IEce+sJZPWaO3YHPTUmF2bvTApQ7uCoWwwBZMmYu+tTj9LqXyZJRgd5iO11YN1YhnNp/NRoEIA69sUU5VD0yglmqnDz5HYMZ4YjOsh4SksySBNI/a1iKi7KF4yFio0ujbQ8YCCzJJplu0cGLsiUU/xHFF/Ve+tomm15F3jFbRMgcAigr9lFIWu1tl1gp+Yl8ydJ74RtoCWampCEnUngelYN/Ne3xpjXyfJtda8pkipWFJQUlAVElZSnoTEVRFh37M3rhEPRg5oyVm3KjtcLi8+dQw/Gc8JvLyekb2UPZr/atOZU2RIlX3ChGfOuXQACCmJQr1Tdy8Aa/hVViRQs6tu9C0zf7ITlLl/Usl5QZjA0SPodIgkUJYeKQGZ5==",
    "max-score": 30
  },
  null
]