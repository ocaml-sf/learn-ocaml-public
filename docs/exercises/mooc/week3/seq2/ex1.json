[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Symbolic Manipulation of Arithmetic Expressions",
    "stars": 2,
    "focus": [
      "DSL use-case",
      "Variant"
    ],
    "backward_exercises": [
      "smelodesousa/F5/5-randomness-is-hard"
    ]
  },
  {
    "id": "ex1",
    "prelude_ml": "type exp =\n  | EInt of int\n  | EAdd of exp * exp\n  | EMul of exp * exp\n\nlet example =\n  EAdd (EInt 1, EMul (EInt 2, EInt 3))\n",
    "template": "let my_example =\n  \"Replace this string with your example.\" ;;\n\nlet eval e =\n  \"Replace this string with your implementation.\" ;;\n\nlet factorize e =\n  \"Replace this string with your implementation.\" ;;\n\nlet expand e =\n  \"Replace this string with your implementation.\" ;;\n\nlet simplify e =\n  \"Replace this string with your implementation.\" ;;\n",
    "descr": [
      [
        "",
        "<p>\n  Abstract syntax trees are a convenient way to represent a syntactic\n  expression in a structured way.\n\n  <br/>\n\n  Let us consider arithmetic expressions formed by the\n  following rules:\n  <ol type=\"a\">\n    <li>\n      an integer is an arithmetic expression ;\n    </li>\n    <li>\n      if <code>lhs</code> and <code>rhs</code> are arithmetic\n      expressions then <code>lhs + rhs</code> is an arithmetic\n      expression;\n    </li>\n    <li>\n      if <code>lhs</code> and <code>rhs</code> are arithmetic\n      expressions then <code>lhs * rhs</code> is an arithmetic\n      expression.\n    </li>\n  </ol>\n  Such an expression can be represented by a value of\n  type <code>exp</code> as defined in the given prelude (as well as\n  the definition of <code>1 + 2 * 3</code> as an example).\n</p>\n\n<ol>\n  <li>\n    Write the expression <code>2 * 2 + 3 * 3</code> in a\n    variable <code>my_example</code>.\n  </li>\n  <li>\n    Write a function <code>eval : exp -> int</code> that computes the\n    value of an arithmetic expression. The evaluation rules are:\n    <ol type=\"a\">\n      <li>\n\u0009If the expression is an integer <code>x</code>, the evaluation\n\u0009is <code>x</code>.\n      </li>\n      <li>\n\u0009If the expression is <code>lhs + rhs</code>\n\u0009and <code>lhs</code> evaluates to <code>x</code> and\n\u0009<code>rhs</code> evaluates to <code>y</code>, then the\n\u0009evaluation is <code>x + y</code>.\n      </li>\n      <li>\n\u0009If the expression is <code>lhs * rhs</code>\n\u0009and <code>lhs</code> evaluates to <code>x</code> and\n\u0009<code>rhs</code> evaluates to <code>y</code>, then the\n\u0009evaluation is <code>x * y</code>.\n      </li>\n    </ol>\n  </li>\n  <li>\n    If an expression is of the form <code>a * b + a * c</code>\n    then <code>a * (b + c)</code> is a factorized equivalent\n    expression.\n\n    <br/>\n\n    Write a function <code>factorize : exp -> exp</code> that\n    implements this transformation on its input exp if it has the\n    shape <code>a * b + a * c</code> or does nothing otherwise.\n  </li>\n  <li>\n    Write the reverse transformation of <code>factorize</code>,\n    <code>expand : exp -> exp</code>, which turns an expression of the\n    shape <code>a * (b + c)</code> into <code>a * b + a *\n    c</code>.\n  </li>\n  <li>\n    Implement a function <code>simplify: exp -> exp</code> which takes\n    an expression <code>e</code> and:\n    <ol type=\"a\">\n      <li>\n\u0009If <code>e</code> is of the shape <code>e * 0</code>\n\u0009or <code>0 * e</code>, returns the expression <code>0</code>.\n      </li>\n      <li>\n\u0009If <code>e</code> is of the shape <code>e * 1</code>\n\u0009or <code>1 * e</code>, returns the expression <code>e</code>.\n      </li>\n      <li>\n\u0009If <code>e</code> is of the shape <code>e + 0</code>\n\u0009or <code>0 + e</code>, returns the expression <code>e</code>.\n      </li>\n    </ol>\n   and does nothing otherwise.\n  </li>\n</ol>\n\n<p>\n  <strong>Remarks:</strong>\n  <ol>\n    <li>\n      The symbols (<code>a</code>, <code>b</code>, <code>c</code>\n      and <code>e</code>) can match any expressions, not just\n      integers.\n    </li>\n    <li>\n      these are a syntactical rewritings, so two expressions are\n      considered equal if and only if they are exactly the same\n      expressions (simply use the <code>=</code> operator to check\n      that).\n    </li>\n    <li>\n      The rewritings have to be done on the first level of the\n      expression only, not recursively and not deeper in the\n      expression. If the toplevel expression does not match the\n      expected pattern, simply return the expression untouched.\n    </li>\n  </ol>\n</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAWEAAABMAAABKwAAAR6gJ1ByZWx1ZGWgwaAjZXhwAFYIAAA4AEBAkaDgoCRFSW50AFKQoMCzkKMjaW50QUCQQAIF9eEAQAD9QECwwAk9Li9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL21vb2Mvd2VlazMvc2VxMi9leDEvcHJlbHVkZS5tbEJLTcAEAkJLWkBAoQQYQaDgoCRFQWRkAFOQoMCzkAQeQJBAAgX14QBAAPygwLMEBUCQQAIF9eEAQAD7QECwwAQTQ1tdwAQUQ1twQEChBCpCoOCgJEVNdWwAVJCgwLMEEkCQQAIF9eEAQAD6oMCzBBZAkEACBfXhAEAA+UBAsMAEJERxc8AEJURxAEZAQKEEO0NAQUBAQEBAsMAEKEFAQAQEQEBAoEBAoQQ/QEFAoLCgJ2V4YW1wbGUAV9DAswQmQJBAAgX14QBAAP5AsMAENEYASABMwAQ1RgBIAFNAQKEES0RAQISVpr4AAAC6AAAAGQAAAGIAAABOoKAnUHJlbHVkZZAwfdmPBXS7F+l1SrebS/o2GKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwfdmPBXS7F+l1SrebS/o2GKCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAcQAAABWAAABWAAAAUmgKFNvbHV0aW9uoLCgKm15X2V4YW1wbGUAcNDAs6GQkidQcmVsdWRlI2V4cECQQAIF9eEAQAD1QLDACT4uL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvbW9vYy93ZWVrMy9zZXEyL2V4MS9zb2x1dGlvbi5tbEFARMAEAkFATkBAoQQTQECgsKAkZXZhbABx0MDBQMCzoQQUBBFAkEACBfXhAEAA9sCzkKMjaW50QUCQQAIF9eEAQAD3QAIF9eEAQAD4QLDABBZDAEYATsAEF0MARgBSQEChBChBQKCwoClmYWN0b3JpemUActDAwUDAs6EEKQQmQJBAAgX14QBAAPkEBEACBfXhAEAA+kCwwAQlSAEAxQEAycAEJkgBAMUBANJAQKEEN0dAoLCgJmV4cGFuZABz0MDBQMCzoQQ4BDVAkEACBfXhAEAA+wQEQAIF9eEAQAD8QLDABDROAQE8AQFAwAQ1TgEBPAEBRkBAoQRGTUCgsKAoc2ltcGxpZnkAdNDAwUDAs6EERwREQJBAAgX14QBAAP0EBEACBfXhAEAA/kCwwARDVAEBowEBp8AERFQBAaMBAa9AQKEEVVJAQISVpr4AAADzAAAAIwAAAIUAAABroKAoU29sdXRpb26QMDbAxqSzt78B4yuT0g38MUKgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwfdmPBXS7F+l1SrebS/o2GKCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAE6DUAAAAAAAAACgAAAD8AAAAAAAAAEwAAAAEAAAA5AAAAAAAAADoAAAA5AAAAAAAAAFQAAAAKAQAAAAAAAFcAAAAAAAMAAwAAAAcAAAASAAAAAAAAAEMAAAAoAAAAAQAAAAAAAABEAAAAMgAAACEAAAALAAAAQwAAADIAAAAhAAAAbgAAACgAAAABAAAAAAAAAEQAAAAyAAAAIQAAAAsAAABDAAAAMgAAACEAAABwAAAAKAAAAAEAAAAAAAAAVwAAAAAAAwCBAAAAAwAAADAAAAAAAAAAQwAAAAoAAABXAAAAAAADAAMAAAAOAAAADgAAAAAAAABDAAAAhAAAAAAAAAAHAAAAAQAAAEQAAAATAAAAAQAAAFQAAABzAAAAAQAAAEQAAAAKAAAAVwAAAAAAAwADAAAAEQAAABEAAAAAAAAAQwAAAIMAAAAAAAAABQAAABMAAAACAAAAVAAAAFsAAAABAAAAEwAAAAIAAABUAAAAXQAAABMAAAACAAAAVAAAAFIAAAAAAAAAQwAAAAoAAABXAAAAAAADAAMAAAAMAAAADAAAAAAAAABDAAAAhAAAAAAAAAAFAAAAEwAAAAEAAABUAAAARAAAAAEAAABEAAAACgAAAFcAAAAAAAMAAwAAABAAAAAQAAAAAAAAAEMAAACDAAAAAAAAAAUAAAATAAAAAQAAAFQAAAAHAAAAEwAAAAIAAABUAAAALwAAABMAAAABAAAAAAAAAFcAAAAAAAMAAwAAAA4AAAAOAAAAAAAAAEMAAACEAAAAAQAAAAcAAAABAAAARAAAABMAAAABAAAAVAAAACAAAAABAAAARAAAAAoAAABXAAAAAAADAAMAAAARAAAAEQAAAAAAAABDAAAAgwAAAAEAAAAFAAAAEwAAAAIAAABUAAAACAAAAAEAAAATAAAAAgAAAFQAAAAKAAAAEwAAAAIAAAAAAAAAKAAAAAEAAAA1AAAAAAAAACgAAAABAAAAKAAAAAEAAAAAAAAAVwAAAAAAAwAfAAAAHwAAAAMAAAAAAAAARAAAAAsAAABDAAAACwAAAFcAAAAAAAMAAwAAAAcAAAADAAAAEwAAAAIAAABUAAAADwAAAAEAAABEAAAACwAAAEAAAAACAAAADAAAAEMAAAAMAAAAQAAAAAIAAABAAAAAAQAAACgAAAADAAAAAAAAACgAAAABAAAAAAAAAFcAAAAAAAMAMQAAAAMAAAAxAAAAAAAAAEMAAAAKAAAAVwAAAAAAAwADAAAAAwAAAAcAAAATAAAAAQAAAFQAAAAjAAAAAQAAAEQAAAALAAAAQwAAAAsAAABXAAAAAAADAAMAAAADAAAABwAAABMAAAADAAAAVAAAABUAAAABAAAAQwAAAAsAAABeAAAAAAAAAFYAAAAMAAAAAQAAAEQAAAANAAAARAAAAEAAAAABAAAACwAAAEAAAAACAAAAKAAAAAQAAAATAAAAAwAAAAAAAAAoAAAAAQAAADUAAAAAAAAACQAAACwAAAABAAAAAAAAAPH+//8rAAAAAAAAAMD///8JAAAAKwAAAAAAAACX////CQAAACsAAAAAAAAABv///woAAAAMAAAADgAAABAAAAASAAAACAAAAD4AAAAFAAAAAAAAABMAAAAFAAAAOQAAAAAAAACElaa+AAADRQAAAKkAAAJJAAACA9CgCAAAKAAnUHJlbHVkZVBkoKCQoUGgoUCgkJBBQKChQqChQKCQkEJAoKFAoJCQQ0BAQESgoJKSBBpgQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBCGQMH3ZjwV0uxfpdUq3m0v6NhigoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQEBAQEBAoAgAACgAJ1ByZXBhcmV0TKCgkpIEBUhAoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAEDJAwk9hskzkHeCbV71uvzoh7WaCgJ1ByZWx1ZGWQMH3ZjwV0uxfpdUq3m0v6NhigoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQEBAQEBAoAgAACgAKFNvbHV0aW9uAEABBKigoJChQKCQkEBAAQKooKCTKmNhbWxfZXF1YWwBA+CgoJChQaChQqChQKCQkEJAoKFAoJCQQkBAoKFCoKFAoJCQQ0CgoUCgkJBDQEBAAQQwoKCSkgQsAQSkQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBDOQMDbAxqSzt78B4yuT0g38MUKgoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwfdmPBXS7F+l1SrebS/o2GKCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQEBAQEBAQA==",
        "js": "function\ndynload(g){\"use strict\";var\nh={},d=g.jsoo_runtime,a=d.caml_register_global;a(3,[0,[1,[0,1],[2,[0,2],[0,3]]]],\"Prelude\");a(4,[0],\"Prepare\");var\nn=[0,0],c=[1,[2,[0,2],[0,2]],[2,[0,3],[0,3]]];function\nb(a){switch(a[0]){case\n0:return a[1];case\n1:var\nc=b(a[2]);return b(a[1])+c|0;default:var\ne=b(a[2]);return d.caml_mul(b(a[1]),e)}}function\ne(a){if(1===a[0]){var\nb=a[1];if(2===b[0]){var\nc=a[2],e=b[1];if(2===c[0]&&d.caml_equal(e,c[1]))return[2,e,[1,b[2],c[2]]]}}return a}function\nf(a){if(2===a[0]){var\nb=a[2],c=a[1];if(1===b[0])return[1,[2,c,b[1]],[2,c,b[2]]]}return a}a(5,[0,c,b,e,f,function(a){var\nc=0;switch(a[0]){case\n1:var\nf=a[1],j=0;if(0===f[0]&&0===f[1]){var\nd=a[2];c=1;j=1}if(!j){var\ng=a[2];if(0===g[0]&&0===g[1]){var\nd=f;c=1}}break;case\n2:var\nb=a[1],k=0;if(0===b[0]&&0===b[1])k=1;var\ne=0;if(!k){var\nh=a[2],l=0;if(0===h[0]&&0===h[1])l=1;if(!l){var\nm=0;if(0===b[0]&&1===b[1]){var\nd=a[2];c=1;e=1;m=1}if(!m){var\ni=a[2];if(0===i[0]&&1===i[1]){var\nd=b;c=1;e=1}else\ne=1}}}if(!e)return n;break}return c?d:a}],\"Solution\");return h}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(au){\"use strict\";var\nav={},w=\"eval\",v=\"expand\",u=\"my_example\",f=\"exp\",t=\"factorize\",m=109,n=\"Test\",s=\"simplify\",g=au.jsoo_runtime,a=g.caml_string_of_jsbytes;function\ne(a,b){return a.length==1?a(b):g.caml_call_gen(a,[b])}function\nr(a,b,c,d){return a.length==3?a(b,c,d):g.caml_call_gen(a,[b,c,d])}function\no(a,b,c,d,e){return a.length==4?a(b,c,d,e):g.caml_call_gen(a,[b,c,d,e])}function\np(a,b,c,d,e,f,h,i,j,k,l,m){return a.length==11?a(b,c,d,e,f,h,i,j,k,l,m):g.caml_call_gen(a,[b,c,d,e,f,h,i,j,k,l,m])}var\nl=g.caml_get_global_data(),b=l.Ast_helper,k=l.Ty,d=l.Test_lib,q=l.Stdlib__random,ap=[0,[2,[0,[0,a(\"Almost correct expression found\")],0],[0,2]],[0,[2,[0,[0,a(\"Operands in wrong order\")],0],0],0]],ao=[0,[2,[0,[0,a(\"Correct expression found\")],0],[0,4]],0],am=[0,[2,[0,[0,a(\"Expression with the same result found\")],0],[0,1]],[0,[2,[0,[0,a(\"You need to write the exact expression asked, not just one with the same result.\")],0],0],0]],an=[0,[2,[0,[0,a(\"Wrong expression\")],0],0],0],X=a(s),Y=[0,a(f)],Z=[0,a(f)],_=[0,[0,a(\"Exercise 5: \")],[0,[1,a(s)],0]],$=a(v),aa=[0,a(f)],ab=[0,a(f)],ac=[0,[0,a(\"Exercise 4: \")],[0,[1,a(v)],0]],ad=a(t),ae=[0,a(f)],af=[0,a(f)],ag=[0,[0,a(\"Exercise 3: \")],[0,[1,a(t)],0]],ah=a(w),ai=[0,a(\"int\")],aj=[0,a(f)],ak=[0,[0,a(\"Exercise 2: \")],[0,[1,a(w)],0]],aq=a(u),ar=[0,a(f)],as=[0,[0,a(\"Exercise 1: \")],[0,[1,a(u)],0]],R=[0,0],P=[0,0],N=[0,0],L=[0,0],J=[0,1],H=[0,1],x=a(f),y=a(\"learnocaml_autoregister_exp_DD682E\"),z=a(n),A=a(\"factorizable\"),B=a(\"learnocaml_autoregister_factorizable_4BCC67\"),C=a(n),D=a(\"expandable\"),E=a(\"learnocaml_autoregister_expandable_4438D8\"),F=a(n),T=a(\"simplifiable\"),U=a(\"learnocaml_autoregister_simplifiable_5A61C5\"),V=a(n),al=l.Solution;function\nc(b){function\na(b){if(0===e(q[5],b))return[0,e(q[5],20)-10|0];if(e(q[10],0)){var\nc=a(b-1|0);return[1,a(b-1|0),c]}var\nd=a(b-1|0);return[2,a(b-1|0),d]}return a(5)}o(d[m][1][13],z,y,x,c);function\nh(d){var\na=c(0),b=c(0);return[1,[2,a,b],[2,a,c(0)]]}o(d[m][1][13],C,B,A,h);function\ni(d){var\na=c(0),b=c(0);return[2,a,[1,b,c(0)]]}o(d[m][1][13],F,E,D,i);var\nG=0,I=[0,function(a){return[2,c(0),H]},G],K=[0,function(a){return[2,J,c(0)]},I],M=[0,function(a){return[1,c(0),L]},K],O=[0,function(a){return[1,N,c(0)]},M],Q=[0,function(a){return[2,c(0),P]},O],S=[0,function(a){return[2,R,c(0)]},Q],j=e(d[51],S);o(d[m][1][13],V,U,T,j);function\nW(x){var\na=e(k[2],[0,[1,0,[0,[3,[0,Z,b[1][1]],0],b[1][1],0,0],[0,[3,[0,Y,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),f=[0,e(d[51],[0,j,[0,j,[0,c,0]]])],g=[0,[0,_,p(d[66],0,0,0,0,0,0,0,f,a,X,0)],0],l=e(k[2],[0,[1,0,[0,[3,[0,ab,b[1][1]],0],b[1][1],0,0],[0,[3,[0,aa,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),m=[0,e(d[51],[0,i,[0,i,[0,c,0]]])],n=[0,[0,ac,p(d[66],0,0,0,0,0,0,0,m,l,$,0)],g],o=e(k[2],[0,[1,0,[0,[3,[0,af,b[1][1]],0],b[1][1],0,0],[0,[3,[0,ae,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),q=[0,e(d[51],[0,h,[0,h,[0,c,0]]])],s=[0,[0,ag,p(d[66],0,0,0,0,0,0,0,q,o,ad,0)],n],t=e(k[2],[0,[1,0,[0,[3,[0,aj,b[1][1]],0],b[1][1],0,0],[0,[3,[0,ai,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),u=[0,[0,ak,p(d[66],0,0,0,0,0,0,0,0,t,ah,0)],s];function\nv(a){if(1===a[0]){var\nb=a[1];if(2===b[0]){var\nf=b[1];if(0===f[0]){var\ng=f[1];if(2===g){var\nh=b[2];if(0===h[0]&&2===h[1]){var\nc=a[2];if(2===c[0]){var\ni=c[1];if(0===i[0]&&3===i[1]){var\nj=c[2];if(0===j[0]&&3===j[1])return ao}}}}else\nif(3===g){var\nk=b[2];if(0===k[0]&&3===k[1]){var\nd=a[2];if(2===d[0]){var\nl=d[1];if(0===l[0]&&2===l[1]){var\nm=d[2];if(0===m[0]&&2===m[1])return ap}}}}}}}return 13===e(al[2],a)?am:an}var\nw=e(k[2],[0,[3,[0,ar,b[1][1]],0],b[1][1],0,0]);return[0,[0,as,r(d[62],w,aq,v)],u]}var\nat=r(d[26],0,d[m][2],W);e(d[1],at);g.caml_register_global(46,[0,c,c,h,h,i,i,j,j],n);return av}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 44
  },
  null
]