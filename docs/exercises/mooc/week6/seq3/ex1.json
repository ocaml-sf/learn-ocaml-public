[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Char Indexed Hashtables",
    "stars": 2,
    "backward_exercises": [
      "mooc/week6/seq2/ex1"
    ]
  },
  {
    "id": "ex1",
    "prelude": "module type GenericTrie = sig\n  type 'a char_table\n  type 'a trie = Trie of 'a option * 'a trie char_table\n  val empty : unit -> 'a trie\n  val insert : 'a trie -> string -> 'a -> 'a trie\n  val lookup : 'a trie -> string -> 'a option\nend\n",
    "template": "module CharHashedType =\nstruct (* replace this structure with your implementation *) end\n\nmodule CharHashtbl =\nstruct (* replace this structure with your implementation *) end\n\nmodule Trie : GenericTrie\n  with type 'a char_table = 'a CharHashtbl.t =\nstruct\n  type 'a char_table = 'a CharHashtbl.t\n  type 'a trie = Trie of 'a option * 'a trie char_table\n\n  let empty () =\n    \"Replace this string with your implementation.\" ;;\n\n  let lookup trie w =\n    \"Replace this string with your implementation.\" ;;\n\n  let insert trie w v =\n    \"Replace this string with your implementation.\" ;;\n\nend\n",
    "descr": [
      [
        "",
        "<p>\n  Have a look at the documentation of\n  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html\">module <code>Hashtbl</code></a>.\n</p>\n\n<ol>\n  <li>\n   Implement a module <code>CharHashedType</code>, compatible with\n   the <code>HashedType</code> signature, where <code>type t =\n   char</code>.\n  </li>\n  <li>\n   Use the module defined in the previous question to instantiate the\n   <code>Hashtbl.Make</code> functor as a module <code>CharHashtbl</code>.\n  </li>\n  <li>\n   Reimplement the data structure of <code>trie</code> from a previous\n   exercise, so that a hash table is used to represent the association\n   between characters and children. To do so, complete the definition\n   of module <code>Trie</code>, so that it is compatible with the\n   given signature <code>GenericTrie</code>, whose <code>'a\n   table</code> type is instanciated to <code>char</code> indexed hash tables.\n   <br/>\n   <strong>Be careful,</strong> a hash table is not a purely\n   functional data structure. Therefore, it must be copied when\n   necessary!\n   <br/>\n   <strong>Note:</strong> you must neither change the signature nor\n   the types of module <code>Trie</code> or the tests will fail.\n  </li>\n</ol>\n"
      ]
    ],
    "prepare": "",
    "test": "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",
    "solution": "q78/b771NsdRonOmTGbJOS1kFBoUGQMZAVFCXUTewMZTboJkECSqB7Mcu4qluft59GiEOzMzfub6HJFQdCrKq6F7UAQ6RKpL7+Azq1EAMPJtTsYH5OFeqDpZUhoCjWPXCJrZa1kP24SRZ8WQAHUNbuO76E0NT9GwhRpZnI3OsnmmJLOq329bal7G0NsOLt6WJ5dJZ8sUV/ldXFQV1aGwz/PeEyUBIw240y8Fe3fmsjKIOq9bKD4vvtIXzEPK+tTjBiJjCDJV8nG8rTCwlUp6d5U1iAuBvVH03RsT75qSVsYJiqDclB64fJ5l0hx42E8ctY8HDtBZ+qi/DpDMngPlOuJypr1/7kecCth/zUEn/Xob+ohYQlo+TUMQEUFJf+iIPPsB46l67SAyO3a5bPqbIMNk/BpuMe8KhAnRR3Byz3wxN5IFOlDDChfk4eyWSSHn0Ee6HY8jU4NfVRGZQsgnlAyU/Pi+ToHclGBwz5xoCeKojqtSpE/ZeIgyTIzHnfActCaxhnCL1aIzpCOUQEOCNCITTQc1WE9ZK6AMPoCgfM6qfB5cJ7bWGyNpmrTdvYs6/imAPScduOqqGc/SejuHq5EaA5YuRMhLgetu9tJPM0pkTw6Rp2l3dy/aPN6CiW4QQMfKrZE0UdOT4HK4CjMNsPDLnQ4RCk+wdEkRxdrOcDjaIqWqJgRieFz0106F4ZMUI6IFGFNVFkxzQE5VUaSwzDqmDo2VYNs4EDDtasWftG7Q2s6oMT3ferA1yBH6Zs0rQyUCBX9f65rJcDn5oVBOjHFOjQvVtoamQoZ39QeVIxoJzd4ctp2Xeu6k+Jt01pTltcuBBcVOF07OZlnJ6dr5P0Yvd4tcjTfkWZsoukck6HouLpICVBUZVnZqU/kZc+mIMeNIFic5joMjLKi5duSx2ZQlpClvNbukxULmE+Iu/aIHY5IDJkOGSsnt4fSECBC5OArVRhinEa/pWR+0DcBn8Uz0oc4QTo+dlDRn/UchSO4pbcAUnEVSwb5IAtf4oqRvdmPwf7uZ3ql0pmi0SHCSOU/xAAkFW/EZK/6YWVTuuYZEaBNnGBbYFmIvu3apruM59muqN6gnq3qkFaMhx7qLq7ogTBR7HZ5LgetovKhwZPIsTrYA8PZRfDoYCN5DoHvESNL+csB3HenEH8qTTmEBsNvI6E+BS9DowFkMiZyHtR4ZZfH8IYljcR4VNI/ZPJUrK5RNGoFPGQRDEBEVEPWsyDqxBHgVIYhH1mGswMzwvzXEPN5bIT3zuvE1/FDnIwfbXopCUWIQ65qAtyb96Bk95SU1iAGGqRig16JC9ELGIsAIiwTcwBk4b2AdSJpC2E7taI8HCdB0HKy6ARaMh+3g4K19f+dy9XapH2Ql/XJf9mMrP5hEUEtZW7RRQRVHsgOBRuxW2AExdXYq3MP8dee8L2x3/Hc81rv7xVaZE+IuhbpL1pJZL/HETtXh4e8URCWzNDHWBh8aF3ggGo+0DcBn6B3Vx0SsToec6WpejpYoQau65YROcV/1eKRFIt+Fna5cqS83eCnQ3q6Z8y8SBDXIV9x2TTc3VFpZPRA1CmvQfM5er8VqHCX0VmdgebyocbNk/HDVKnYNv3uxEgkDgjWXaQciU/EkHqkCcPRiuNFYZPxhTwgPlLwRfDV1PN6C9SLNDuH+a2BPVbzINCqTGjMBqcuNn5Ku",
    "max-score": 40
  },
  null
]