[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Fixing a module signature",
    "stars": 2
  },
  {
    "id": "ex1",
    "prelude": "module type DictSig = sig\n  type ('key, 'value) t\n  val empty : ('key, 'value) t\n  val add : ('key, 'value) t -> 'key -> 'value -> ('key, 'value) t\n  exception NotFound\n  val lookup : ('key, 'value) t -> 'key -> 'value\n  val remove : ('key, 'value) t -> 'key -> ('key, 'value) t\nend ;;\n",
    "template": "module Dict : DictSig = struct\n  type ('key, 'value) t =\n    | Empty\n    | Node of ('key, 'value) t * 'key * 'value * ('key, 'value) t\n\n  let empty = Empty\n\n  let rec add d k v =\n    match d with\n    | Empty -> Node (Empty, k, v, Empty)\n    | Node (l, k', v', r) ->\n        if k = k' then Node (l, k, v, r)\n        else if k < k' then Node (add l k v, k', v', r)\n        else Node (l, k', v', add r k v)\n\n  exception NotFound\n\n  let rec lookup d k =\n    match d with\n    | Empty ->\n\u0009raise NotFound\n    | Node (l, k', v', r) ->\n\u0009if k = k' then v'\n\u0009else if k < k' then lookup l k\n\u0009else lookup r k\n\nend ;;\n",
    "descr": [
      [
        "",
        "<p>\n  The following code is the program explained during the video\n  sequence except that we have modified the\n  interface <code>DictSig</code> a little bit. Now, it is possible to\n  <code>remove</code> a key from a dictionary.\n</p>\n\n<ol>\n  <li>Update the code to have it accepted by the type-checker.</li>\n</ol>\n"
      ]
    ],
    "prepare": "",
    "test": "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",
    "solution": "q78/b771Ns5QoSX0Fmn/NSAVP5VWGQQZO9RDQFPspt5ee66sEGDTWD5ccKCcaLV67GHR2zMzfubLXc9Rxy3XjpczV56IEIYL7+6a5dsEI4IbCJVHoq5UgTBVEYhDiX4BSZrOa2wPE43V0TqZTmY3rem2pU+LCojrep5V61rJxynaMrSzZIl1//zGPZgZPIQoMoUUTApZ4FQgRE5aOuyx6HerQWdQIct3NmnsfLjphi0EK0gaYiLvebALz/z70g4wCjJK3jIQ65qVcBv5kFQcdyoQ/SGOcoSdNDB07B0ILxQL/cvuiEcmdYB5Ysw/MU8fdNSEKMgPUKztAUCJ5IyhP+V5u+djlD+oRfoojpldpXo8QQQKEVIZBG/0F6VEd+jGOcQO3RB5loNa3O+5q+iqIJYcqyc81rv7xVaZVOghluhL1AI+Y5nGQIelKfXBTzS1P5uQTdynF45dGR+TQt1r6Ar1kqjGSBvd58lRlldoSPup7IQDmV6Qv1xCCMmL6u5odnnzxjSPM0BZomW4DWeBNjMXRGYeGR/1MVNURUTpwhYekAgwMnbOET2S6fncsfZloG0RPGMbw3ivCx9Rg7q1q/d1A/F7EMsKi01ie1AAMet/BucPp0NRhDppWh5WnCKJXuHmugEGR4yQWySHKXh2sLS76E+BClzwn5IImMrGrDHmLK+8ZIdotFyU3NtAIrsVK52NBoEEGVJrEEV2V44xy8nQ+H5ZMgg4O8fsgeiyhjqDNMAiJ8mverhQ99TnKcrbCRpuFCgDppqFrmCzlVB9xHEFqjXBtoig+FVEyQGR1MENkInhlAtWccAwE2NPMU7it2mHDxFPF4esGQS8nhelP+cyoOIl8WbdVJ6oq9Bt/SVJQUkMEUUZ2nZUVBUYc3TI1LkNPQNykkd61+j6xcH8IMQl/Hc81vP9xRTZDKJ59LhW4914SBCGChyl4bjEAGSaMBuWBdHaX0orVUGRFs9I6EC0jqiQTo+dlG5es5J6HKPd7MwGiQs0w+QxA2z4kaQpeW4q6WTZNuoZ6yH0DTn24CcNTRhRFA1m+RARFRCgfM5er9EcVWCXG72habybbfg6yDSJ4nUywOHkFwZ47CrXq9IjA/F7EIYL74RaeYR1ZJ1dHtEWp0gPqHlGRZlQoSLCA23JrPwPFumQNDqTTmFIbqCI6E+BVoXHfp9J71PobDjh+fHg+N/TdQySKNINM2cd+pwBTE1QMo/wEBEVELyxnDrfQTkVYNtD1o07fP8efkaINOsmYpizxrcWjRndKcuaG8ZMUSs3uArJcHas6AB9dyFO/UaBaoTxPB62kEL12IR2zg3d7Ec+qJ/fE2NPMU8fdI7ERxELF+z9IpPN8xed0eYveq96jXvdFMkcjlBimXprFlFMQoAmGW9QERUQr37N2b9EPRpzjoRmZKiyrqri+IFf/BEtNvb7vQj1XOkcluhON9/2Y/rBBhz73OGEUziY1UfVTdGmU0ogGUW2QqcspAW0luH1TkjeiDRskEMoGubcocID5V9VhvkyZtnFnqQzfEl=",
    "max-score": 20,
    "depend": null,
    "dependencies": []
  },
  null
]