[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Type or error",
    "stars": 1,
    "identifier": "1.2",
    "authors": [
      [
        "Rui Barata",
        "rui.barata@ubi.pt"
      ],
      [
        "Sim√£o Sousa",
        "desousa@di.ubi.pt"
      ]
    ],
    "focus": [
      "Type inference"
    ],
    "backward_exercises": [
      "smelodesousa/F1/1-type"
    ]
  },
  {
    "id": "1-type-error",
    "prelude_ml": "",
    "template": "let q1 = Unanswered\nlet q2 = Unanswered\nlet q3 = Unanswered\nlet q4 = Unanswered\nlet q5 = Unanswered\nlet q6 = Unanswered\nlet q7 = Unanswered",
    "descr": [
      [
        "",
        "<p>For each of the following items, assign which option is the correct one:</p>\n<p><strong>Note:</strong> If you believe that the correct option is <code>A</code> then you should answer as follows: <code>let answer = A</code>.</p>\n<ol><li><p><code>let f1 x g z = if x then g x else g z</code></p>\n<p>A) bool -&gt; (bool -&gt; &#39;a) -&gt; bool -&gt; &#39;a<br />\nB) bool -&gt; (bool -&gt; &#39;a) -&gt; bool -&gt; (bool * bool)<br />\nC) int -&gt; (string -&gt; unit) -&gt; int -&gt; unit<br />\nD) syntax error<br />\nE) This expression has type bool but an expression was expected of type unit<br />\nF) Unbound value g<br /><br /></p>\n</li><li><p><code>let f2 f g x = if f x then g x</code></p>\n<p>A) (&#39;a -&gt; int) -&gt; (&#39;a -&gt; unit) -&gt; &#39;a -&gt; int<br />\nB) (&#39;a -&gt; bool) -&gt; (&#39;a -&gt; unit) -&gt; &#39;a -&gt; unit<br />\nC) int -&gt; (int -&gt; bool) -&gt; float -&gt; unit<br />\nD) This expression has type int but an expression was expected of type unit because it is in the result of a conditional with no else branch<br />\nE) syntax error<br />\nF) Unbound value f2<br /><br /></p>\n</li><li><p><code>let f3 g x y = if g x then g y</code></p>\n<p>A) (&#39;a -&gt; bool) -&gt; &#39;a -&gt; &#39;a -&gt; bool<br />\nB) bool -&gt; int -&gt; int -&gt; bool<br />\nC) (int -&gt; bool) -&gt; int -&gt; float -&gt; bool<br />\nD) This expression has type bool but an expression was expected of type unit because it is in the result of a conditional with no else branch<br />\nE) Stack overflow during evaluation<br />\nF) Segmentation fault<br /><br /></p>\n</li><li><p><code>let rec f4 x y = f4 y ([]::x)</code></p>\n<p>A) &#39;a list list -&gt; &#39;a list list -&gt; &#39;b<br />\nB) &#39;a array array -&gt; &#39;a array array -&gt; &#39;b<br />\nC) &#39;a list -&gt; &#39;a list -&gt; &#39;b<br />\nD) Stack overflow during evaluation<br />\nE) Exception: Invalid_argument<br />\nF) Exception: Not_Found<br /><br /></p>\n</li><li><p><code>let f5 g f x = if x&lt;0 then f (g x) else g (f x)</code></p>\n<p>A) (&#39;a -&gt; &#39;a) -&gt; (&#39;a -&gt; &#39;a) -&gt; &#39;a -&gt; &#39;a<br />\nB) (float -&gt; int) -&gt; (float -&gt; int) -&gt; float -&gt; int<br />\nC) (int -&gt; int) -&gt; (int -&gt; int) -&gt; int -&gt; int<br />\nD) This expression has type bool but an expression was expected of type unit<br />\nE) This expression has type int but an expression was expected of type unit because it is in the result of a conditional with no else branch<br />\nF) Unbound value x<br /><br /></p>\n</li><li><p><code>let f6 g f x y1 = if x&lt;y then  f (g x) else g (f y)</code></p>\n<p>A) (&#39;a -&gt; &#39;a) -&gt; (&#39;a -&gt; &#39;a) -&gt; &#39;a -&gt; &#39;a -&gt; &#39;a<br />\nB) (int -&gt; int) -&gt; (int -&gt; int) -&gt; int -&gt; int -&gt; int<br />\nC) float -&gt; float -&gt; bool -&gt; bool -&gt; float<br />\nD) This expression has type float but an expression was expected of type int<br />\nE) It is applied to too many arguments; maybe you forgot a <code>;</code><br />\nF) Unbound value y<br /><br /></p>\n</li><li><p><code>let f7 x y = if x &gt; 0 || y &lt; 0. then x else y</code></p>\n<p>A) int -&gt; int -&gt; int<br />\nB) float -&gt; float -&gt; float<br />\nC) int -&gt; float -&gt; float<br />\nD) This expression has type float but an expression was expected of type int<br />\nE) This expression has type int but an expression was expected of type float<br />\nF) Stack overflow during evaluation<br /><br /></p>\n</li></ol>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAVgAAABNAAABPAAAATCgJ1ByZXBhcmWgwaAmY2hvaWNlAFkIAAA4AEBAkaDgoCFBAFKQQECwwAlGLi9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL3NtZWxvZGVzb3VzYS9GMS8xLXR5cGUtZXJyb3IvcHJlcGFyZS5tbEFATsAEAkFAT0BAoQQRQaDgoCFCAFOQQECwwAQKQUBQwAQLQUBTQEChBBpCoOCgIUMAVJBAQLDABBNBQFTABBRBQFdAQKEEI0Og4KAhRABVkEBAsMAEHEFAWMAEHUFAW0BAoQQsRKDgoCFFAFaQQECwwAQlQUBcwAQmQUBfQEChBDVFoOCgIUYAV5BAQLDABC5BQGDABC9BQGNAQKEEPkag4KAqVW5hbnN3ZXJlZABYkEBAsMAEN0FAZMAEOEFAcEBAoQRHR0BBQEBAQECwwAQ7QUBAwAQ8QUBwQEBBoEBAoQRMQEFAQISVpr4AAADWAAAAHgAAAHMAAABcoKAnUHJlcGFyZZAwR0oFMRemLgiNrLwH8L8x+qCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAbMAAABiAAABewAAAW+gKFNvbHV0aW9uoLCgInExAFnQwLOhkJInUHJlcGFyZSZjaG9pY2VAkEACBfXhAEAA+ECwwAlHLi9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL3NtZWxvZGVzb3VzYS9GMS8xLXR5cGUtZXJyb3Ivc29sdXRpb24ubWxBQETABAJBQEZAQKEEE0BAoLCgInEyAFrQwLOhBBIED0CQQAIF9eEAQAD5QLDABA5CS0/ABA9CS1FAQKEEIEFAoLCgInEzAFvQwLOhBB8EHECQQAIF9eEAQAD6QLDABBtDVlrABBxDVlxAQKEELUJAoLCgInE0AFzQwLOhBCwEKUCQQAIF9eEAQAD7QLDABChEYWXABClEYWdAQKEEOkNAoLCgInE1AF3QwLOhBDkENkCQQAIF9eEAQAD8QLDABDVFbHDABDZFbHJAQKEER0RAoLCgInE2AF7QwLOhBEYEQ0CQQAIF9eEAQAD9QLDABEJGd3vABENGd31AQKEEVEVAoLCgInE3AF/QwLOhBFMEUECQQAIF9eEAQAD+QLDABE9HAEIARsAEUEcAQgBIQEChBGFGQECElaa+AAAA8wAAACMAAACFAAAAa6CgKFNvbHV0aW9ukDAL4CF6eWmWNHd8wQyXyEoToKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlcGFyZZAwR0oFMRemLgiNrLwH8L8x+qCgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAAjDoAAAA5AAAAAAAAADoAAAA5AAAAAAAAAGMAAABpAAAAawAAAGgAAABqAAAAbAAAAAUAAABrAAAACgAAAAwAAAAOAAAAEAAAABIAAAAIAAAAEgAAAAoAAAASAAAADAAAAD4AAAAHAAAAAAAAABMAAAAHAAAAOQAAAAAAAACElaa+AAAC0AAAAG0AAAGoAAABY9CgCAAAKAAnUHJlbHVkZVBMoKCSkgQFSECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoACdQcmVwYXJlXEygoJKSBAVIQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBAyQMEdKBTEXpi4Ijay8B/C/MfqgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoAChTb2x1dGlvbmgAZKCgkpIEBQBgQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBAyQMAvgIXp5aZY0d3zBDJfIShOgoCdQcmVwYXJlkDBHSgUxF6YuCI2svAfwvzH6oKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQEBAQEBAQA==",
        "js": "function\ndynload(c){\"use strict\";var\nd={},b=c.jsoo_runtime,a=b.caml_register_global;a(0,[0],\"Prelude\");a(1,[0],\"Prepare\");a(2,[0,0,1,3,0,2,5,3],\"Solution\");return d}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAFtFQAAAAeAAAAYwAAAB4AAAAIAAAAQAAAAAAAAAAeAAAABwAAAEAAAAAAAAAAHgAAAAYAAABAAAAAAAAAAB4AAAAFAAAAQAAAAAAAAAAeAAAABAAAAEAAAAAAAAAAHAAAAEAAAAAAAAAAGwAAAEAAAAAAAAAAKAAAAAEAAAA1AAAAAAAAADgAAAAAAAAAbAAAAEYAAAAhAAAANQAAAAAAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAOAAAAAAAAAAAAAAAQwAAADYAAAAAAAAAQAAAAAAAAABAAAAAAwAAAD4AAAAEAAAAAAAAADgAAAAAAAAAAQAAACEAAAA4AAAAAAAAAD4AAAAiAAAANgAAAAAAAABAAAAAAAAAADYAAAAAAAAAOAAAAAAAAABsAAAARgAAACEAAAA1AAAAAAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAOAAAAAAAAAABAAAAIQAAADgAAAAAAAAAPgAAACIAAAA2AAAAAAAAAEAAAAAAAAAANgAAAAAAAAA4AAAAAAAAAGwAAABGAAAAIQAAADUAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAABAAAAAAAAAA4AAAAAAAAAAEAAAAhAAAAOAAAAAAAAAA+AAAAIgAAADYAAAAAAAAAQAAAAAAAAAA2AAAAAAAAADgAAAAAAAAAbAAAAEYAAAAhAAAANQAAAAAAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAOAAAAAAAAAAAAAAAQwAAADYAAAAAAAAAQAAAAAAAAABAAAAAAwAAAD4AAAAEAAAAAAAAADgAAAAAAAAAAQAAACEAAAA4AAAAAAAAAD4AAAAiAAAANgAAAAAAAABAAAAAAAAAADYAAAAAAAAAOAAAAAAAAABsAAAARgAAACEAAAA1AAAAAAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAA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",
        "js": "function\ndynload(C){\"use strict\";var\nD={},e=109,i=\"choice\",h=\"solution\",j=C.jsoo_runtime,a=j.caml_string_of_jsbytes;function\nc(a,b){return a.length==1?a(b):j.caml_call_gen(a,[b])}function\ng(a,b,c){return a.length==2?a(b,c):j.caml_call_gen(a,[b,c])}function\nB(a,b,c,d){return a.length==3?a(b,c,d):j.caml_call_gen(a,[b,c,d])}var\nk=j.caml_get_global_data(),b=k.Test_lib,d=k.Ast_helper,f=k.Ty;c(b[e][4],a(\"Grading exercise 1\"));var\ns=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),l=[0,[0,[0,a(\"Exercise 1: \")],[0,[1,a(h)],0]],g(b[63],s,a(\"q1\"))];c(b[e][4],a(\"Grading exercise 2\"));var\nt=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),m=[0,[0,[0,a(\"Exercise 2: \")],[0,[1,a(h)],0]],g(b[63],t,a(\"q2\"))];c(b[e][4],a(\"Grading exercise 3\"));var\nu=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),n=[0,[0,[0,a(\"Exercise 3: \")],[0,[1,a(h)],0]],g(b[63],u,a(\"q3\"))];c(b[e][4],a(\"Grading exercise 4\"));var\nv=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),o=[0,[0,[0,a(\"Exercise 4: \")],[0,[1,a(h)],0]],g(b[63],v,a(\"q4\"))];c(b[e][4],a(\"Grading exercise 5\"));var\nw=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),p=[0,[0,[0,a(\"Exercise 5: \")],[0,[1,a(h)],0]],g(b[63],w,a(\"q5\"))];c(b[e][4],a(\"Grading exercise 6\"));var\nx=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),q=[0,[0,[0,a(\"Exercise 6: \")],[0,[1,a(h)],0]],g(b[63],x,a(\"q6\"))];c(b[e][4],a(\"Grading exercise 7\"));var\ny=c(f[2],[0,[3,[0,[0,a(i)],d[1][1]],0],d[1][1],0,0]),r=[0,[0,[0,a(\"Exercise 7: \")],[0,[1,a(h)],0]],g(b[63],y,a(\"q7\"))];function\nz(a){return[0,l,[0,m,[0,n,[0,o,[0,p,[0,q,[0,r,0]]]]]]]}var\nA=B(b[26],0,b[e][2],z);c(b[1],A);j.caml_register_global(31,[0,l,m,n,o,p,q,r],\"Test\");return D}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 7
  },
  null
]