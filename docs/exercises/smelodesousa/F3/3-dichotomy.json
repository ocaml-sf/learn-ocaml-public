[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Dichotomy",
    "stars": 2,
    "identifier": "3.14",
    "authors": [
      [
        "Dário Santos",
        "dariovfsantos@gmail.com"
      ],
      [
        "Gonçalo Domingos",
        "goncalogdomingos@gmail.com"
      ],
      [
        "Simão Sousa",
        "desousa@di.ubi.pt"
      ]
    ],
    "focus": [
      "Array manipulation"
    ],
    "backward_exercises": [
      "smelodesousa/F3/3-how-many-mountains"
    ]
  },
  {
    "id": "3-dichotomy",
    "prelude_ml": "",
    "template": "let rec binsearch_aux x v low high = failwith \"Unanswered\"\nlet binsearch x v = failwith \"Unanswered\"",
    "descr": [
      [
        "",
        "<script>\nMathJax = {\n  loader: {load: ['input/asciimath', 'output/chtml']},\n  asciimath: {\n    delimiters: [['$','$'], ['`','`']]\n  }\n}\n</script>\n\n<script src='https://polyfill.io/v3/polyfill.min.js?features=es6'></script>\n<script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js' async='' id='MathJax-script' type='text/javascript'></script>\n\n<h1 id=\"Introduction\">Introduction</h1>\n\n<p>Let <code>v</code> be an <em>ascending-ordered</em> vector of integers of size <code>n</code>, and <code>x</code> an integer.</p>\n<p>We will define an <em>efficient</em> search function that takes advantage of vector sorting.</p>\n<p>Consider two indices <code>i</code>, <code>j</code> of vector <code>v</code> such that $i\\leq j$. We will look for x in the vector <code>v</code> between the indices i and j, (notation $v[i \\ldots j]$)</p>\n<ul><li><p>If $i=j$ then $x\\in v[i\\ldots j]$ if and only if $x = v[i]$.\nOtherwise:</p>\n</li><li><p>If $v[i] &gt; x$ then we know that $x$ is not in the $[i,j]$ segment of the vector $v$. In the best case, it is somewhere in the $[0,i[$ segment of the $v$ vector.</p>\n</li><li><p>If $x &lt; v[j]$ then we know that $x$ is not in the $[i,j]$ segment of the vector $v$. In the best case, it is somewhere in the $]j,n[$ segment of the $v$ vector.</p>\n</li><li><p>If $v[i] \\leq x \\leq v[j]$ then we know that $x$ is possibly in the segment $[i,j]$ of the vector $v$. What we know for sure is that x is neither in $v[0 \\ldots i-1]$ nor $v[j \\ldots n]$. Consequently, the search must be focused on the segment $[i,j]$.</p>\n</li></ul>\n\n<p> We have $i&lt;j$, so let $m$ be the index &quot;in the middle&quot;, in other words, the largest integer that is less than or equal to the mean of i and j.</p>\n<ul><li>If $x = v[m]$, we find $x$.</li><li>If $x &gt; v[m]$, then the segment $v[i\\ldots m]$ of the vector $v$ does not contain x. Possibly it will be in $v[m+1\\ldots j]$.</li><li>If $x &lt; v[m]$, then the segment $v[m \\ldots j]$ of the vector $v$ does not contain x. Possibly it will be in $v[i\\ldots m-1]$.</li></ul>\n\n<p> This method is called <em>binary search</em> or <em>dichotomous search</em>.</p>\n<h1 id=\"Objectives\">Objectives</h1>\n\n<ol><li><p>Define a recursive binary search function <code>binsearch_aux : &#39;a -&gt; &#39;a array -&gt; int -&gt; int -&gt; int</code> . <code>binsearch_aux x v low high</code> search for the value <code>x</code> in the ordered vector <code>v</code> between indexes <code>low</code> and <code>high</code>. This function returns the index where the <code>x</code> value lies in <code>v</code> (in the <code>low..high</code> range), or else the exception <code>Not_found</code> is thrown in any other situation.</p>\n<p>For instance, <code>binsearch_aux 12 [|1;2;5;7;12;16;23;33;78|] 2 6</code> returns <code>4</code>.</p>\n</li><li><p>Define a <code>binsearch function: &#39;a -&gt; &#39;a array -&gt; int</code> that searches for the value <code>x</code> in the entire sorted array <code>v</code>. This function returns the index where the value <code>x</code> is in <code>v</code> or the exception <code>Not_found</code> is thrown. It is recommended to use the function from the previous exercise.</p>\n<p>Note that this search divides the search space by two each time the search is refined. This feature greatly improves response times. The worst case is when the element to be searched is not present in the vector. Nevertheless, the number of comparisons performed by the algorithm never exceeds the order of $log_2(n)$ where $n$ is the size of the vector.</p>\n</li></ol>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAYEAAABFAAABFwAAAQmgKFNvbHV0aW9uoLCgLWJpbnNlYXJjaF9hdXgBAIzQwMFAwLOQoyNpbnRBQJBAAgX14QBAAPHAwUDAs5CjJWFycmF5SKDAswQOQJBAAgX14QBAAPJAkEACBfXhAEAA88DBQMCzkKMjaW50QUCQQAIF9eEAQAD0wMFABAgECEACBfXhAEAA9UACBfXhAEAA9kACBfXhAEAA90ACBfXhAEAA+ECwwAlGLi9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL3NtZWxvZGVzb3VzYS9GMy8zLWRpY2hvdG9teS9zb2x1dGlvbi5tbEJIUMAEAkJIXUBAoQQpQECgsKApYmluc2VhcmNoAQCN0MDBQMCzBChAkEACBfXhAEAA+cDBQMCzkAQloMCzBDFAkEACBfXhAEAA+kCQQAIF9eEAQAD7wLMEIUCQQAIF9eEAQAD8QAIF9eEAQAD9QAIF9eEAQAD+QLDABBxIAQCqAQCuwAQdSAEAqgEAt0BAoQRERUBAhJWmvgAAATUAAAAtAAAAqgAAAImgoChTb2x1dGlvbpAwyV52dGh0bg0TZvUh1z5wi6CgK1N0ZGxpYl9fc2VxkDAYUHWqmbBZrUyuFctBH8wMoKAtU3RkbGliX19hcnJheZAwTjLnHPCF6nGU9DYi/ciVCKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAABLDoAAAA5AAAAAAAAADoAAAA5AAAAAAAAAFQAAAAwAAAAKQAAACoAAAADAAAAAwAAAA0AAAB9AAAAVgAAAAUAAAA3AAAAAAAAAAcAAABbAAAAAAAAAA0AAAANAAAAXgAAAAAAAAB5AAAAVgAAAAQAAAACAAAAKAAAAAQAAAADAAAADQAAAH8AAAABAAAADQAAAA0AAAAyAAAAJAAAAAQAAAAIAAAAKQAAACoAAAABAAAAAQAAAE8AAAB/AAAA/////2gAAAANAAAADQAAABsAAAAkAAAABAAAAAYAAAAsAAAAAQAAAAAAAADP////AAAAACsAAAABAAAA7P///woAAAAMAAAAQAAAAAAAAAATAAAAAgAAADkAAAAAAAAAhJWmvgAAAzwAAACBAAAB6wAAAZzQoAgAACgAJ1ByZWx1ZGVQTKCgkpIEBUhAoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAEDJAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQECgCAAAKAAnUHJlcGFyZVxMoKCSkgQFSECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQECgCAAAKAAoU29sdXRpb25oAQEEoKCRkiZTdGRsaWJsoKCTM2NhbWxfYXJyYXlfZ2V0X2FkZHIASKCgkpIEDgEBAECgoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLVN0ZGxpYl9fYXJyYXmQME4y5xzwhepxlPQ2Iv3IlQigoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQfkDDJXnZ0aHRuDRNm9SHXPnCLoKAnUHJlcGFyZZAwk9hskzkHeCbV71uvzoh7WaCgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQKAEN0BAQEBAQEBAQEA=",
        "js": "function\ndynload(d){\"use strict\";var\ne={},b=d.jsoo_runtime,a=b.caml_register_global,g=b.caml_get_global_data().Stdlib;a(0,[0],\"Prelude\");a(1,[0],\"Prepare\");function\nc(f,e,d,c){var\na=d;for(;;){if(c<a)throw g[8];if(b.caml_check_bound(e,a)[1+a]===f)return a;var\na=a+1|0;continue}}a(3,[0,c,function(b,a){return c(b,a,0,a.length-1-1|0)}],\"Solution\");return e}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(aa){\"use strict\";var\nab={},w=\"array\",i=109,l=\"binsearch_aux\",v=900,g=\"int\",u=\"binsearch\",d=aa.jsoo_runtime,k=d.caml_check_bound,b=d.caml_string_of_jsbytes,$=d.caml_wrap_exception;function\nc(a,b){return a.length==1?a(b):d.caml_call_gen(a,[b])}function\ns(a,b,c,e){return a.length==3?a(b,c,e):d.caml_call_gen(a,[b,c,e])}function\n_(a,b,c,e,f,g,h,i,j,k,l){return a.length==10?a(b,c,e,f,g,h,i,j,k,l):d.caml_call_gen(a,[b,c,e,f,g,h,i,j,k,l])}function\nt(a,b,c,e,f,g,h,i,j,k,l,m){return a.length==11?a(b,c,e,f,g,h,i,j,k,l,m):d.caml_call_gen(a,[b,c,e,f,g,h,i,j,k,l,m])}var\nh=d.caml_get_global_data(),a=h.Ast_helper,p=h.Ty,e=h.Test_lib,f=h.Stdlib__random,C=[0,1,2,5,7,12,16,23,33,78],D=b(l),E=[0,b(g)],F=[0,b(g)],G=[0,b(g)],H=[0,b(g)],I=[0,b(w)],J=[0,b(g)],K=[0,10],z=[0,[0,b(\"does not contain a recursive call\")],0],A=[0,b(\"The function\")],x=b(\"RecursionCall\"),B=b(\"Grading exercise 1\"),L=b(l),M=[0,[0,b(\"Exercise 1: \")],[0,[1,b(l)],0]],N=b(\"Grading exercise 2\"),O=[0,1,2,5,7,12,16,23,33,78],Q=b(u),R=[0,b(g)],S=[0,b(g)],T=[0,b(w)],U=[0,b(g)],W=[0,10],X=[0,[0,b(\"Exercise 2: \")],[0,[1,b(u)],0]],y=h.Longident;function\nm(a,b){var\nf=[248,x,d.caml_fresh_oo_id(0)];function\ng(g){function\nh(h){var\nb=h[1],i=0;if(typeof\nb!==\"number\"&&5===b[0]){var\ne=b[1][1];if(typeof\ne!==\"number\"&&0===e[0]){var\ng=d.caml_string_equal(c(y[3],e[1][1]),a);if(g)throw f;return g}i=1}return 0}try{_(e[15],[0,h],0,0,0,0,0,0,0,0,g);var\ni=[0,[2,[0,A,[0,[1,a],z]],0],0];return i}catch(a){a=$(a);if(a===f)return c(b,0);throw a}}return s(e[17],e[i][2],a,g)}function\nj(l){c(f[3],0);var\nb=c(f[5],3)+14|0,e=d.caml_make_vect(b,0),g=b-1|0,h=0;if(!(g<0)){var\na=h;for(;;){var\ni=c(f[5],4)+(d.caml_mul(2*a|0,a)+a|0)|0;k(e,a)[1+a]=i;var\nj=a+1|0;if(g!==a){var\na=j;continue}break}}return e}function\nn(d){c(f[3],0);var\na=j(0);if(3<=c(f[5],10)){var\nb=6+c(f[5],a.length-1-8|0)|0;return[0,k(a,b)[1+b],a,6,(a.length-1-1|0)-2|0]}return[0,v,a,0,a.length-1]}function\no(d){c(f[3],0);var\na=j(0);if(3<=c(f[5],10)){var\nb=c(f[5],a.length-1-1|0);return[0,k(a,b)[1+b],a]}return[0,v,a]}c(e[i][4],B);var\nq=[0,M,m(L,function(f){var\nb=[0,[0,12,C.slice(),2,6],[0,[0,1,[0,1],1,1],0]],d=c(p[2],[0,[1,0,[0,[3,[0,J,a[1][1]],0],a[1][1],0,0],[0,[1,0,[0,[3,[0,I,a[1][1]],[0,[0,[3,[0,H,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],[0,[1,0,[0,[3,[0,G,a[1][1]],0],a[1][1],0,0],[0,[1,0,[0,[3,[0,F,a[1][1]],0],a[1][1],0,0],[0,[3,[0,E,a[1][1]],0],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]);return t(e[78],K,0,0,0,0,0,0,[0,n],d,D,b)})];c(e[i][4],N);var\nP=[0,[0,12,O.slice()],[0,[0,1,[0,1]],0]],V=c(p[2],[0,[1,0,[0,[3,[0,U,a[1][1]],0],a[1][1],0,0],[0,[1,0,[0,[3,[0,T,a[1][1]],[0,[0,[3,[0,S,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],[0,[3,[0,R,a[1][1]],0],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]),r=[0,X,t(e[70],W,0,0,0,0,0,0,[0,o],V,Q,P)];function\nY(a){return[0,q,[0,r,0]]}var\nZ=s(e[26],0,e[i][2],Y);c(e[1],Z);d.caml_register_global(29,[0,m,j,n,o,q,r],\"Test\");return ab}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 24
  },
  null
]