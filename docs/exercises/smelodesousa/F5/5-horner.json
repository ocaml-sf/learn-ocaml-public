[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Operations on single variable Polynomials - Horner's method and derivation",
    "stars": 2,
    "identifier": "5.6",
    "authors": [
      [
        "Gon√ßalo Domingos",
        "goncalogdomingos@gmail.com"
      ]
    ],
    "focus": [
      "List manipulation"
    ],
    "backward_exercises": [
      "smelodesousa/F5/5-half"
    ]
  },
  {
    "id": "5-horner",
    "prelude_ml": "",
    "template": "let answer = Unanswered\nlet horner x p = failwith \"Unanswered\"\nlet derivative p = failwith \"Unanswered\"\nlet rec derivative_tr p acc = failwith \"Unanswered\"",
    "descr": [
      [
        "",
        "<script>\nMathJax = {\n  loader: {load: ['input/asciimath', 'output/chtml']},\n  asciimath: {\n    delimiters: [['$','$'], ['`','`']]\n  }\n}\n</script>\n\n<script src='https://polyfill.io/v3/polyfill.min.js?features=es6'></script>\n<script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js' async='' id='MathJax-script' type='text/javascript'></script>\n\n<h1 id=\"Introduction\">Introduction</h1><p>We can represent a polynomial $P$ of degree $n$ with a list $p$ of real numbers, where its $i$th element represents the coefficient associated with the exponent of degree $i$.</p>\n<p>Thus, the polynomial $3x^4+5x^2+1$, for example, is represented by the list <code>[3;0;5;0;1]</code> (or <code>[1;0;5;0;3]</code>, if we prefer to list the polynomial from the smallest degree to the highest). In this exercise, we will assume that the highest degree is always at the left.</p>\n<h1 id=\"Objectives\">Objectives</h1>\n\n<ol><li><p>Choose the option that best defines the type <code>polynomial</code> as a pair of an integer number that represents the highest degree of the polynomial and a list of real numbers. Using the example from above, its value of type <code>polynomial</code> would be <code>(4, [3.; 0.; 5.; 0.; 1.])</code>. Note that the integer representing the highest degree is a non-negative integer. In other words, the list cannot be empty, otherwise, a polynomial wouldn&#39;t exist.</p>\n<p>A) <code>type polynomial = { degree : int; polynomial : float list }</code> <br />\nB) <code>type polynomial = (int * (float list))</code><br />\nC) <code>type polynomial = ((float list) * int)</code><br />\nD) <code>type polynomial = { polynomial : float list; degree : int }</code><br />\nE) <code>type polynomial = (float * (int list))</code><br />\nF) <code>type polynomial = { polynomial : int list; degree : float }</code><br /><br /></p>\n<p>(Note: If you believe the correct option is <code>A</code>, then you should answer as follows: <code>let answer = A</code>)</p>\n</li><li><p>Implement a function <code>horner : float -&gt; polynomial -&gt; float</code> that, given a real number $x$, determines $P(x)$ by using Horner&#39;s method, i.e.</p>\n<center>\n$P_n(x)=(\\cdots((a_n x + a_{n-1})x + a_{n-2})x + \\cdots + a_1)x + a_0$\n</center>\n\n<p>Thus, <code>horner 3.0 (4,[3.; 0.; 5.; 0.; 1.])</code> returns <code>289.0</code>. In case of an invalid argument, the exception <code>Invalid_argument &quot;horner&quot;</code> may be thrown.</p>\n</li><li><p>Implement a function <code>derivative : polynomial -&gt; polynomial</code> that, given a polynomial $P(x)$ in the form of a list, determines its respective derivative, which is also a polynomial. In case of an invalid argument, the exception <code>Invalid_argument &quot;horner&quot;</code> may be thrown.</p>\n<p>For example, <code>derivative (4,[3.; 0.; 5.; 0.; 1.])</code> returns <code>(3,[12.; 0.; 10.; 0.])</code>.</p>\n</li><li><p>Create a tail recursive version <code>derivative_tr : polynomial -&gt; polynomial -&gt; polynomial</code> of the previous function <code>derivative</code>. Note: the function will be tested in the following manner: <code>derivative_tr p (-1, [])</code>.</p>\n<p>For example, <code>derivative_tr (4,[3.; 0.; 5.; 0.; 1.]) (-1, [])</code> returns <code>(3,[12.; 0.; 10.; 0.])</code>.</p>\n</li></ol>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAeEAAABuAAABtAAAAaagJ1ByZXBhcmWgwaAqcG9seW5vbWlhbABaCAAAOABAQEBBkMCSoMCzkKMjaW50QUCQQAIF9eEAQAD9oMCzkKMkbGlzdEmgwLOQoyVmbG9hdERAkEACBfXhAEAA+0CQQAIF9eEAQAD8QAIF9eEAQAD+QEBAQLDACUIuL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvc21lbG9kZXNvdXNhL0Y1LzUtaG9ybmVyL3ByZXBhcmUubWxBQEDABAJBQGRAQECgQEChBCRAQUCgwaAmY2hvaWNlAFsIAAA4AEBAkaDgoCFBAFOQQECwwAQRRHV3wAQSRHV6QEChBDNCoOCgIUIAVJBAQLDABBpEdXvABBtEdX5AQKEEPEOg4KAhQwBVkEBAsMAEI0R1f8AEJER1AEJAQKEERUSg4KAhRABWkEBAsMAELER1AEPABC1EdQBGQEChBE5FoOCgIUUAV5BAQLDABDVEdQBHwAQ2RHUASkBAoQRXRqDgoCFGAFiQQECwwAQ+RHUAS8AEP0R1AE5AQKEEYEeg4KAqVW5hbnN3ZXJlZABZkEBAsMAER0R1AE/ABEhEdQBbQEChBGlIQEFAQEBAQLDABEtDZmbABExEdQBbQEBBBEqhBG1BQUBAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDDoGp0gKMhLPBlKQ8b0UNmboKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAs8AAACgAAACRQAAAjKgKFNvbHV0aW9uoLCgJmFuc3dlcgEAttDAs6GQkidQcmVwYXJlJmNob2ljZUCQQAIF9eEAQADiQLDACUMuL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvc21lbG9kZXNvdXNhL0Y1LzUtaG9ybmVyL3NvbHV0aW9uLm1sQ2drwAQCQ2dxQEChBBNAQKCwoCZob3JuZXIBALfQwMFAwLOQoyVmbG9hdERAkEACBfXhAEAA48DBQMCSoMCzkKMjaW50QUCQQAIF9eEAQADloMCzkKMkbGlzdEmgwLOQBBhAkEACBfXhAEAA50CQQAIF9eEAQADkQAIF9eEAQADmBAVAAgX14QBAAOhAAgX14QBAAOlAsMAEKUZ/AEPABCpGfwBJQEChBDtBQKCwoCpkZXJpdmF0aXZlAQC40MDBQMCSoMCzkKMjaW50QUCQQAIF9eEAQADsoMCzBCCgwLOQBDVAkEACBfXhAEAA6kCQQAIF9eEAQADrQAIF9eEAQADtwJKgwLOQBBJAkEACBfXhAEAA8KDAs5CjJGxpc3RJoMCzkARIQJBAAgX14QBAAO5AkEACBfXhAEAA70ACBfXhAEAA8UACBfXhAEAA8kCwwARZUAEBIwEBJ8AEWlABASMBATFAQKEEa0xAoLCgLWRlcml2YXRpdmVfdHIBALnQwMFAwJKgwLMEMECQQAIF9eEAQAD1oMCzkAQdoMCzBGNAkEACBfXhAEAA80CQQAIF9eEAQAD0QAIF9eEAQAD2wMFAwJKgwLOQBEFAkEACBfXhAEAA+6DAs5AEX6DAswQtQJBAAgX14QBAAPlAkEACBfXhAEAA90ACBfXhAEAA+MCSoAQQoMCzBDugBAtAkEACBfXhAEAA+kACBfXhAEAA/EACBfXhAEAA/UACBfXhAEAA/kCwwASNWwECaQECccAEjlsBAmkBAn5AQKEEn1VAQISVpr4AAAFXAAAAMgAAAL0AAACYoKAoU29sdXRpb26QMLuCD4k94bBXx4v6EpCQ7jygoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLFN0ZGxpYl9fbGlzdJAwiGCe86MGbc8WrXRW9TEi0qCgLlN0ZGxpYl9fZWl0aGVykDAlVb8JsCC4iHpNimRbDtNHoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlcGFyZZAw6BqdICjISzwZSkPG9FDZm6CgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "test_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAABFUAAADwAAADbQAAA0igJFRlc3SgwqApU2Vlbkxvb3BzAQGHCAAAIACQoyNleG5HQJBAQEGwwCZfbm9uZV9AQAD/BAJBQKEEDkBCQKCwoC5wb2x5bm9taWFsX2dlbgEBiNDAwUDAs5CjJHVuaXRGQJBAAgX14QBAAOHAkqDAs5CjI2ludEFAkEACBfXhAEAA5KDAs5CjJGxpc3RJoMCzkKMlZmxvYXREQJBAAgX14QBAAOJAkEACBfXhAEAA40ACBfXhAEAA5UACBfXhAEAA5kCwwAk/Li9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL3NtZWxvZGVzb3VzYS9GNS81LWhvcm5lci90ZXN0Lm1sSABGAErABAJIAEYAWEBAoQQ3QUCgsKAxcG9seW5vbWlhbF90cl9nZW4BAYnQwMFAwLMEKUCQQAIF9eEAQADnwJKgwJKgwLMEKUCQQAIF9eEAQADuoMCzBCagwLMEI0CQQAIF9eEAQADsQJBAAgX14QBAAO1AAgX14QBAAO+gwJKgwLOQoyNpbnRBQJBAAgX14QBAAOqgwLOhoZCSJlN0ZGxpYiRMaXN0IXSgwJBAAgX14QBAAOhAkEACBfXhAEAA6UACBfXhAEAA60ACBfXhAEAA8EACBfXhAEAA8UCwwAQ4UwEBGwEBH8AEOVMBARsBATBAQKEEbkRAoLCgJ2hvcm5lclIBAYrQwLOhoaGQkihUZXN0X2xpYidPcGVuX21lJlJlcG9ydCRpdGVtQJBAAgX14QBAAPJAsMAETVUBAVUBAVnABE5VAQFVAQFgQEChBINFQKCwoCtkZXJpdmF0aXZlQQEBi9DAs6GhoQQVBBIEEQQQQJBAAgX14QBAAPNAsMAEXGMBAu0BAvHABF1jAQLtAQL8QEChBJJGQKCwoChmYWlsV2l0aAEBjNDAwUDAs5CjJnN0cmluZ09AkEACBfXhAEAA9MCzoaEEQgQ/BD6gwLOhoaEEMQQuBC0ELECQQAIF9eEAQAD1QJBAAgX14QBAAPZAAgX14QBAAPdAsMAEeWsBBBsBBB/ABHprAQQbAQQnQEChBK9HQKCwoC1jaGVja0Zvckxvb3BzAQGN0MDBQMDBQMCzBKNAkEACBfXhAEAA+MCzoZCSMUxlYXJub2NhbWxfcmVwb3J0IXRAkEACBfXhAEAA+ZCQQQIF9eEAQAD6wLOhkJIxTGVhcm5vY2FtbF9yZXBvcnQhdECQQAIF9eEAQAD7QAIF9eEAQAD8QLDABJttAQRTAQRXwAScbQEEUwEEZEBAoQTRSUCgsKAuZGVyaXZhdGl2ZV90clQBAY7QwLOhoaEEYwRgBF8EXkCQQAIF9eEAQAD9QLDABKp9AQYEAQYIwASrfQEGBAEGFkBAoQTgTUCgsKAnY2hvaWNlVAEBj9DAs6GhoQRyBG8EbgRtQJBAAgX14QBAAP5AsMAEuQBKAQezAQe3wAS6AEoBB7MBB75AQKEE705AQISVpr4AAAaqAAABCQAAA9EAAAMboKAkVGVzdJAw5FLhRcEtwXNWTVKKZNdviKCgKFdhcm5pbmdzkDCy1CAOEGrxJS1qEFKnyWyfoKAjVXJpkDCoR8FAhbXbkGBtBd+0ROlioKAlVHlwZXOQMADXZjhxs31Q80u8mPFcZUqgoC5UeXBlX2ltbWVkaWFjeZAw1XlsRrQzscMcQ4ZmFnK0zKCgIlR5kDAFJqTQXhml6I+Hq58InCfLoKAoVGVzdF9saWKQMMZ0IqmaWYf4kUYvzwMgjk6goC1TdGRsaWJfX3VjaGFykDCC2tzZCN3mIbiELJa6ZE3GoKArU3RkbGliX19zZXSQMNR/rV1RUbRSdmFiAL7CWHegoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLlN0ZGxpYl9fcmFuZG9tkDDeRujxGiDMq51UoJr7g5S4oKArU3RkbGliX19vYmqQMCtUDcVEOM8GOIP26FxKo3qgoDFTdGRsaWJfX25hdGl2ZWludJAwKLhCztD+3UHFW53TTw/nnKCgK1N0ZGxpYl9fbWFwkDBxf+AaZ6+GhyRm0Ex2Y9FvoKAsU3RkbGliX19saXN0kDCIYJ7zowZtzxatdFb1MSLSoKAuU3RkbGliX19sZXhpbmeQMPdWmTe0GdCAZRB6KInSzyigoCxTdGRsaWJfX2xhenmQMF1i+FfQ965RSeu20de/H5WgoC1TdGRsaWJfX2ludDY0kDBs9/CV6n/Vm61E/yLQhMTuoKAtU3RkbGliX19pbnQzMpAwTAdJ5R2PzldSvLAP5CpN3KCgL1N0ZGxpYl9faGFzaHRibJAww+wQuTuzWGhtAvqcX0rba6CgLlN0ZGxpYl9fZm9ybWF0kDDoaWAQ/GbUzpo7w/MR9uogoKAuU3RkbGliX19laXRoZXKQMCVVvwmwILiIek2KZFsO00egoC9TdGRsaWJfX2NvbXBsZXiQMIE2eqob4cyvFmEKlsPSvBOgoC5TdGRsaWJfX2J1ZmZlcpAwnq8rHNcOM2AcFS0c4buL6aCgMFN0ZGxpYl9fYmlnYXJyYXmQMHOHHmHjeF2PDYIhlNrrheygoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoClQcmltaXRpdmWQMBixQrcv6rJqx3+mNMUDUqmgoCdQcmVwYXJlkDDoGp0gKMhLPBlKQ8b0UNmboKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgKFByZV90ZXN0kDDR4cpr3OOS95/89b7d6LIAoKAkUGF0aJAwsSLT0HANPvNsnZnCVuDNsKCgKVBhcnNldHJlZZAwksTmcdJDrQzMT4wT2ZU/faCgK091dGNvbWV0cmVlkDAOker09Xf5a5AhxLLm9RvpoKApTG9uZ2lkZW50kDATs+snCwR1KtsPu4wpz0xYoKAoTG9jYXRpb26QMMhz9ETt3dEUJSWASnsSEsygoDFMZWFybm9jYW1sX3JlcG9ydJAwb+mvfRnAFPvwUiyfI4gh9aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoCtKc29uX3NjaGVtYZAwYhBdwAH7hIxu7foYSsWIh6CgKUpzb25fcmVwcpAwxkc1HhhGw+aSGkor2PSi+aCgKkpzb25fcXVlcnmQMNG7Mw6QEbcDUnAMOFMhGxigoC1Kc29uX2VuY29kaW5nkDB6AKPHBCGjI5tRsKt6/pg0oKAySW50cm9zcGVjdGlvbl9pbnRmkDBUmQFxa+3jvIKaw+SK95cLoKAsSWRlbnRpZmlhYmxlkDCk1m+80z/8oYdayFRYnmKMoKAlSWRlbnSQMNAEH+9wmQvB0yUgfPJON1ugoCZGdW5fdHmQMBUQ32qTnEZql1iz5zm2vAugoCpEb2NzdHJpbmdzkDDEeaEJSu21W0v5RRF4y2SeoKAwQ2FtbGludGVybmFsTGF6eZAwD/3UVjroyrAgtiRzR8ne96CgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYaCgKEFzdHR5cGVzkDC66oyeNZ5ZUumkaeNzYlC/oKAqQXN0X2hlbHBlcpAwC0U/El9Yb2i9L3ytal1CGaCgKkFuZ3N0cm9tX1+QMONh0oWvIEbwZ1MpN9e7SQWgoChBbmdzdHJvbZAwhf5PugABsDd0Te6VtUB3VECElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "exercise_lib": {
        "cma": "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",
        "js": "function\ndynload(q){\"use strict\";var\nr={},e=\"horner\",f=q.jsoo_runtime,g=f.caml_register_global,c=f.caml_string_of_jsbytes;function\nd(a,b){return a.length==1?a(b):f.caml_call_gen(a,[b])}var\nh=f.caml_get_global_data(),a=h.Stdlib__list,b=h.Stdlib;g(6,[0],\"Prelude\");g(7,[0],\"Prepare\");var\no=c(e),p=c(e),m=c(e),n=c(e),k=c(e),i=1;function\nj(i,g){var\nf=g[2];if(f){var\nh=f[2],j=d(a[1],h);if(g[1]===j){var\ne=f[1],c=h;for(;;){if(c){var\ne=e*i+c[1],c=c[2];continue}return e}}}throw[0,b[6],k]}function\nl(g){var\ni=g[2],f=g[1];if(f===(d(a[1],i)-1|0)){var\nh=f,e=0,c=i;for(;;){if(c){if(c[2]){var\nj=[0,c[1]*h,e];h-=1.;var\ne=j,c=c[2];continue}return[0,f-1|0,d(a[9],e)]}throw[0,b[6],m]}}throw[0,b[6],n]}g(10,[0,i,j,l,function(k,j){var\nf=k,e=j;for(;;){var\nc=f[2],g=f[1],h=e[2],i=e[1];if(g!==(d(a[1],c)-1|0))throw[0,b[6],o];if(c){if(c[2]){var\nf=[0,g-1|0,c[2]],e=[0,i+1|0,[0,g*c[1],h]];continue}return[0,i,d(a[9],h)]}throw[0,b[6],p]}}],\"Solution\");return r}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(aA){\"use strict\";var\naB={},B=\"derivative\",A=10.,h=\"list\",z=\"horner\",y=109,p=\"Testing function\",g=\"int\",o=\"derivative_tr\",f=\"float\",d=aA.jsoo_runtime,b=d.caml_string_of_jsbytes,ay=d.caml_wrap_exception;function\ne(a,b){return a.length==1?a(b):d.caml_call_gen(a,[b])}function\naz(a,b,c){return a.length==2?a(b,c):d.caml_call_gen(a,[b,c])}function\nx(a,b,c,e){return a.length==3?a(b,c,e):d.caml_call_gen(a,[b,c,e])}function\naw(a,b,c,e,f,g,h){return a.length==6?a(b,c,e,f,g,h):d.caml_call_gen(a,[b,c,e,f,g,h])}function\nax(a,b,c,e,f,g,h,i,j,k,l){return a.length==10?a(b,c,e,f,g,h,i,j,k,l):d.caml_call_gen(a,[b,c,e,f,g,h,i,j,k,l])}function\nn(a,b,c,e,f,g,h,i,j,k,l,m){return a.length==11?a(b,c,e,f,g,h,i,j,k,l,m):d.caml_call_gen(a,[b,c,e,f,g,h,i,j,k,l,m])}var\ni=d.caml_get_global_data(),c=i.Test_lib,m=i.Stdlib__random,a=i.Ast_helper,k=i.Ty,l=[248,b(\"Test.SeenLoops\"),d.caml_fresh_oo_id(0)],aa=b(\"Loops are not allowed on this exercise! Implement a recursive version.\"),ab=b(o),F=[0,-1,0],C=[0,10],D=[0,3],G=[0,[0,3.,[0,4,[0,3.,[0,0.,[0,5.,[0,0.,[0,1.,0]]]]]]],[0,[0,3.,[0,-1,[0,1.,0]]],[0,[0,3.,[0,0,0]],[0,[0,3.,[0,-1,0]],0]]]],H=b(z),I=[0,b(f)],J=[0,b(f)],K=[0,b(h)],L=[0,b(g)],M=[0,b(f)],P=[0,10],Q=[0,[0,b(p)],[0,[1,b(z)],0]],R=[0,[0,4,[0,3.,[0,0.,[0,5.,[0,0.,[0,1.,0]]]]]],[0,[0,-1,[0,1.,0]],[0,[0,0,0],[0,[0,-1,0],0]]]],S=b(B),T=[0,b(f)],U=[0,b(h)],V=[0,b(g)],W=[0,b(f)],X=[0,b(h)],Y=[0,b(g)],_=[0,10],$=[0,[0,b(p)],[0,[1,b(B)],0]],ac=[0,[0,[0,4,[0,3.,[0,0.,[0,5.,[0,0.,[0,1.,0]]]]]],[0,-1,0]],[0,[0,[0,-1,[0,1.,0]],[0,-1,0]],[0,[0,[0,0,0],[0,-1,0]],[0,[0,[0,-1,0],[0,-1,0]],0]]]],ad=b(o),ae=[0,b(f)],af=[0,b(h)],ag=[0,b(g)],ah=[0,b(f)],ai=[0,b(h)],aj=[0,b(g)],ak=[0,b(f)],al=[0,b(h)],am=[0,b(g)],ao=[0,10],ap=[0,[0,b(p)],[0,[1,b(o)],0]],aq=b(\"answer\"),ar=[0,b(\"choice\")],at=[0,[0,b(\"Testing variable answer\")],0],E=i.Stdlib__list;function\nj(f){var\nb=0;function\nd(a){e(m[3],0);return e(m[9],A)}var\na=aw(c[48],D,C,0,0,d,b);return[0,e(E[1],a)-1|0,a]}function\nq(a){return[0,j(0),F]}var\nN=e(k[2],[0,[1,0,[0,[3,[0,M,a[1][1]],0],a[1][1],0,0],[0,[1,0,[0,[2,[0,[0,[3,[0,L,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,K,a[1][1]],[0,[0,[3,[0,J,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0],[0,[3,[0,I,a[1][1]],0],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]),O=[0,function(b){var\na=j(0);return[0,e(m[9],A),a]}],r=[0,Q,n(c[70],P,0,0,0,0,0,0,O,N,H,G)],Z=e(k[2],[0,[1,0,[0,[2,[0,[0,[3,[0,Y,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,X,a[1][1]],[0,[0,[3,[0,W,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0],[0,[2,[0,[0,[3,[0,V,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,U,a[1][1]],[0,[0,[3,[0,T,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0]],a[1][1],0,0]),s=[0,$,n(c[66],_,0,0,0,0,0,0,[0,j],Z,S,R)];function\nt(a){return[0,[2,[0,[0,a],0],0],0]}function\nu(a){function\nb(b){function\nd(b){var\na=b[1];if(typeof\na!==\"number\")switch(a[0]){case\n17:case\n18:throw l}return 0}try{ax(c[15],[0,d],0,0,0,0,0,0,0,0,b);var\nf=e(a,0);return f}catch(a){a=ay(a);if(a===l)return t(aa);throw a}}return x(c[17],c[y][2],ab,b)}var\nan=e(k[2],[0,[1,0,[0,[2,[0,[0,[3,[0,am,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,al,a[1][1]],[0,[0,[3,[0,ak,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0],[0,[1,0,[0,[2,[0,[0,[3,[0,aj,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,ai,a[1][1]],[0,[0,[3,[0,ah,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0],[0,[2,[0,[0,[3,[0,ag,a[1][1]],0],a[1][1],0,0],[0,[0,[3,[0,af,a[1][1]],[0,[0,[3,[0,ae,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],0]]],a[1][1],0,0]],a[1][1],0,0]],a[1][1],0,0]),v=[0,ap,n(c[70],ao,0,0,0,0,0,0,[0,q],an,ad,ac)],as=e(k[2],[0,[3,[0,ar,a[1][1]],0],a[1][1],0,0]),w=[0,at,az(c[63],as,aq)];function\nau(a){return u(function(a){return[0,r,[0,s,[0,v,[0,w,0]]]]})}var\nav=x(c[26],0,c[y][2],au);e(c[1],av);d.caml_register_global(48,[0,l,j,q,r,s,t,u,v,w],\"Test\");return aB}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 43
  },
  null
]