[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Randomness is hard",
    "stars": 2,
    "identifier": "5.10",
    "authors": [
      [
        "DÃ¡rio Santos",
        "dariovfsantos@gmail.com"
      ]
    ],
    "focus": [
      "Array manipulation"
    ],
    "backward_exercises": [
      "smelodesousa/F5/5-lists-sublists-4"
    ]
  },
  {
    "id": "5-randomness-is-hard",
    "prelude_ml": "",
    "template": "let knuth_shuffle v = failwith \"Unanswered\"",
    "descr": [
      [
        "",
        "<script>\nMathJax = {\n  loader: {load: ['input/asciimath', 'output/chtml']},\n  asciimath: {\n    delimiters: [['$','$'], ['`','`']]\n  }\n}\n</script>\n\n<script src='https://polyfill.io/v3/polyfill.min.js?features=es6'></script>\n<script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js' async='' id='MathJax-script' type='text/javascript'></script>\n\n<h1 id=\"Introduction\">Introduction</h1>\n\n<p>Our next problem revolves around the following question:</p>\n<p>Given an array <code>v</code> of size <code>n</code> already initialized, how do we rearrange its elements in a simple way (i.e., not <em>very</em> inefficiently) so that we end up with a shuffled version of the initial array?</p>\n<p>In other words, how do we find a permutation of its elements that seems random?</p>\n<p>The problem raised by this question seems simple, but in reality, it is not. Determining a permutation with good random properties in a simple way is not a straightforward problem to solve.</p>\n<p>In 1938, Ronald Fisher and Frank Yates, in the book <em>Statistical tables for biological, agricultural and medical research</em>, described a method that was later studied and brought to light by Donald Knuth himself...</p>\n<p>This method became known as <em>Knuth shuffle</em> or <em>Fisher-Yates-Knuth shuffle</em>.</p>\n<pre class='ocaml'><code class='ocaml'>(* To shuffle an array v with n elements (indexes 0...n-1), do the following: *)\n  for i = n - 1 downto 1 do\n       let j = random int where 0 &lt;= j &lt;= i\n       swap v[j] and v[i]</code></pre>\n\n<p>The essential property of this method is that every possible permutation has the same probability of being returned by the algorithm, including the original permutation.</p>\n<h1 id=\"Objective\">Objective</h1>\n\n<p>Implement the function <code>knuth_shuffle: &#39;a array -&gt; &#39;a array</code> that incorporates the algorithm presented above. Note that the received argument is the array we want to shuffle. The function <code>Random.int</code> from the OCaml module <code>Random</code> might be handy for this exercise (ref. https://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html).</p>\n<blockquote><p>Random.int : int -&gt; int</p>\n<p>Random.int <code>bound</code> returns a random integer between $0$ (inclusive) \n and <code>bound</code> (exclusive). <code>bound</code> must be greater than $0$ and less than $2^30$.</p>\n</blockquote>\n\n<p>Note that it is <em>not expected</em> that you use functions such as <code>Random.init</code> or <code>Random.self_init</code>.</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAALQAAAAXAAAAaQAAAFugKFNvbHV0aW9uoLCgLWtudXRoX3NodWZmbGUBAKLQwMFAwLOQoyVhcnJheUigwJBAAgX14QBAAPxAkEACBfXhAEAA/QQJQAIF9eEAQAD+QLDACU8uL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvc21lbG9kZXNvdXNhL0Y1LzUtcmFuZG9tbmVzcy1pcy1oYXJkL3NvbHV0aW9uLm1sQ01RwAQCQ01eQEChBBZAQECElaa+AAABwgAAAEEAAAD3AAAAxqCgKFNvbHV0aW9ukDAq6nhVgiIXq30UA6Z7qZGUoKArU3RkbGliX19zZXGQMBhQdaqZsFmtTK4Vy0EfzAygoC5TdGRsaWJfX3JhbmRvbZAw3kbo8RogzKudVKCa+4OUuKCgMVN0ZGxpYl9fbmF0aXZlaW50kDAouELO0P7dQcVbndNPD+ecoKAtU3RkbGliX19pbnQ2NJAwbPfwlep/1ZutRP8i0ITE7qCgLVN0ZGxpYl9faW50MzKQMEwHSeUdj85XUrywD+QqTdygoC1TdGRsaWJfX2FycmF5kDBOMucc8IXqcZT0NiL9yJUIoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlcGFyZZAwk9hskzkHeCbV71uvzoh7WaCgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "test_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAARoAAAAzAAAAwgAAAK2gJFRlc3SgsKAscmFuZG9tX3N0YXRlAQE+0MCzoZCSJlN0ZGxpYiNyZWagwLOhoaEECiZSYW5kb20lU3RhdGUhdECQQAIF9eEAQAD8QJBAAgX14QBAAP1AsMAJSy4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9zbWVsb2Rlc291c2EvRjUvNS1yYW5kb21uZXNzLWlzLWhhcmQvdGVzdC5tbERbX8AEAkRba0BAoQQdQECgsKAydGVzdF93aXRoX3NvbHV0aW9uAQE/0MCzoaGhkJIoVGVzdF9saWInT3Blbl9tZSZSZXBvcnQkaXRlbUCQQAIF9eEAQAD+QLDABBZGAEkATcAEF0YASQBfQEChBDJBQECElaa+AAAGZgAAAP8AAAOrAAAC/aCgJFRlc3SQMBp/5OxDEp6bofGb1bIiSeagoChXYXJuaW5nc5AwstQgDhBq8SUtahBSp8lsn6CgI1VyaZAwqEfBQIW125BgbQXftETpYqCgJVR5cGVzkDAA12Y4cbN9UPNLvJjxXGVKoKAuVHlwZV9pbW1lZGlhY3mQMNV5bEa0M7HDHEOGZhZytMygoCJUeZAwBSak0F4ZpeiPh6ufCJwny6CgKFRlc3RfbGlikDDGdCKpmlmH+JFGL88DII5OoKAtU3RkbGliX191Y2hhcpAwgtrc2Qjd5iG4hCyWumRNxqCgK1N0ZGxpYl9fc2V0kDDUf61dUVG0UnZhYgC+wlh3oKArU3RkbGliX19zZXGQMBhQdaqZsFmtTK4Vy0EfzAygoC5TdGRsaWJfX3JhbmRvbZAw3kbo8RogzKudVKCa+4OUuKCgK1N0ZGxpYl9fb2JqkDArVA3FRDjPBjiD9uhcSqN6oKAxU3RkbGliX19uYXRpdmVpbnSQMCi4Qs7Q/t1BxVud008P55ygoCtTdGRsaWJfX21hcJAwcX/gGmevhockZtBMdmPRb6CgLlN0ZGxpYl9fbGV4aW5nkDD3Vpk3tBnQgGUQeiiJ0s8ooKAsU3RkbGliX19sYXp5kDBdYvhX0PeuUUnrttHXvx+VoKAtU3RkbGliX19pbnQ2NJAwbPfwlep/1ZutRP8i0ITE7qCgLVN0ZGxpYl9faW50MzKQMEwHSeUdj85XUrywD+QqTdygoC9TdGRsaWJfX2hhc2h0YmyQMMPsELk7s1hobQL6nF9K22ugoC5TdGRsaWJfX2Zvcm1hdJAw6GlgEPxm1M6aO8PzEfbqIKCgL1N0ZGxpYl9fY29tcGxleJAwgTZ6qhvhzK8WYQqWw9K8E6CgLlN0ZGxpYl9fYnVmZmVykDCerysc1w4zYBwVLRzhu4vpoKAwU3RkbGliX19iaWdhcnJheZAwc4ceYeN4XY8NgiGU2uuF7KCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgKVByaW1pdGl2ZZAwGLFCty/qsmrHf6Y0xQNSqaCgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAoUHJlX3Rlc3SQMNHhymvc45L3n/z1vt3osgCgoCRQYXRokDCxItPQcA0+82ydmcJW4M2woKApUGFyc2V0cmVlkDCSxOZx0kOtDMxPjBPZlT99oKArT3V0Y29tZXRyZWWQMA6R6vT1d/lrkCHEsub1G+mgoClMb25naWRlbnSQMBOz6ycLBHUq2w+7jCnPTFigoChMb2NhdGlvbpAwyHP0RO3d0RQlJYBKexISzKCgMUxlYXJub2NhbWxfcmVwb3J0kDBv6a99GcAU+/BSLJ8jiCH1oKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgK0pzb25fc2NoZW1hkDBiEF3AAfuEjG7t+hhKxYiHoKApSnNvbl9yZXBykDDGRzUeGEbD5pIaSivY9KL5oKAqSnNvbl9xdWVyeZAw0bszDpARtwNScAw4UyEbGKCgLUpzb25fZW5jb2RpbmeQMHoAo8cEIaMjm1Gwq3r+mDSgoDJJbnRyb3NwZWN0aW9uX2ludGaQMFSZAXFr7eO8gprD5Ir3lwugoCxJZGVudGlmaWFibGWQMKTWb7zTP/yhh1rIVFieYoygoCVJZGVudJAw0AQf73CZC8HTJSB88k43W6CgJkZ1bl90eZAwFRDfapOcRmqXWLPnOba8C6CgKkRvY3N0cmluZ3OQMMR5oQlK7bVbS/lFEXjLZJ6goDBDYW1saW50ZXJuYWxMYXp5kDAP/dRWOujKsCC2JHNHyd73oKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhoKAoQXN0dHlwZXOQMLrqjJ41nllS6aRp43NiUL+goCpBc3RfaGVscGVykDALRT8SX1hvaL0vfK1qXUIZoKAqQW5nc3Ryb21fX5Aw42HSha8gRvBnUyk317tJBaCgKEFuZ3N0cm9tkDCF/k+6AAGwN3RN7pW1QHdUQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAA7DoAAAA5AAAAAAAAADoAAAA5AAAAAAAAAFQAAAAmAAAAKQAAACoAAAABAAAAAAAAAH8AAAABAAAAOAAAAAAAAAAEAAAAIQAAAAoAAAAbAAAAXgAAAAAAAAAMAAAAGwAAAF8AAAAAAAAAAgAAAAsAAAAbAAAAXwAAAAAAAAAoAAAAAwAAAAAAAAALAAAAKwAAAAEAAADk////OAAAAAAAAAANAAAAIgAAAAAAAAAoAAAAAQAAACsAAAAAAAAA8v///woAAAA/AAAAAAAAABMAAAABAAAAOQAAAAAAAACElaa+AAAD/gAAAKIAAAJgAAAB/NCgCAAAKAAnUHJlbHVkZVBMoKCSkgQFSECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoACdQcmVwYXJlXEygoJKSBAVIQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBAyQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoAChTb2x1dGlvbmgBAMSgoJGSLlN0ZGxpYl9fcmFuZG9tZKCgky5jYW1sX2FycmF5X2dldHygoJMuY2FtbF9hcnJheV9zZXQATKCgkwQEAGCgoJGSLVN0ZGxpYl9fYXJyYXkBAISgoJKSBBoBAMBAoKArU3RkbGliX19zZXGQMBhQdaqZsFmtTK4Vy0EfzAygoC5TdGRsaWJfX3JhbmRvbZAw3kbo8RogzKudVKCa+4OUuKCgMVN0ZGxpYl9fbmF0aXZlaW50kDAouELO0P7dQcVbndNPD+ecoKAtU3RkbGliX19pbnQ2NJAwbPfwlep/1ZutRP8i0ITE7qCgLVN0ZGxpYl9faW50MzKQMEwHSeUdj85XUrywD+QqTdygoC1TdGRsaWJfX2FycmF5kDBOMucc8IXqcZT0NiL9yJUIoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAEP5AwKup4VYIiF6t9FAOme6mRlKCgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCgBEegBFhAQEBAQEBAQEBA",
        "js": "function\ndynload(i){\"use strict\";var\nj={},a=i.jsoo_runtime,d=a.caml_check_bound,b=a.caml_register_global;function\nh(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\ng(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}var\nc=a.caml_get_global_data(),f=c.Stdlib__random,e=c.Stdlib__array;b(0,[0],\"Prelude\");b(1,[0],\"Prepare\");b(4,[0,function(a){function\nb(b,e){var\nc=h(f[5],b+1|0),g=d(a,c)[1+c];d(a,b)[1+b]=g;a[1+c]=e;return 0}g(e[14],b,a);return a}],\"Solution\");return j}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAADdFQAAAAXAAAAYwAAABsAAABAAAAAAAAAACgAAAABAAAAYwAAADgAAAAAAAAACwAAACEAAAAbAAAASQAAACgAAAABAAAAFgAAAEMAAAA4AAAAAAAAAAwAAAAlAAAAAgAAAGMAAAA4AAAAAAAAAAsAAAAhAAAAPwAAAAAAAAA2AAAAAAAAADgAAAAAAAAAbAAAAEYAAAAhAAAAHwAAAJUAAABjAAAAbAAAAH0AAABsAAAAZAAAAGwAAAD7////QQAAAAAAAABAAAAAAAAAAGkAAAA/AAAAAAAAAEAAAAAAAAAACQAAADoAAABAAAAAAAAAADYAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAEEAAAABAAAAPgAAAAQAAAAAAAAAOAAAAAAAAAABAAAAIQAAAGgAAABoAAAAEgAAAAgAAAArAAAAAQAAAGn///8/AAAAAAAAABIAAAAJAAAAKwAAAAEAAABZ////PwAAAAAAAABoAAAAaAAAAGgAAAA2AAAAAAAAADgAAAAAAAAAQQAAACAAAAALAAAANgAAAAAAAABAAAAAAAAAAAoAAAArAAAAAQAAAD////84AAAAAAAAAGwAAABEAAAAaAAAADgAAAAAAAAAGQAAACMAAAA4AAAAAAAAAAAAAAAhAAAACwAAAA0AAABAAAAAAAAAABMAAAADAAAAOQAAAAAAAACElaa+AAAIYQAAAZ8AAAWUAAAE19CgCAAAKAAkVGVzdFABA2SgoJGSLlN0ZGxpYl9fcmFuZG9taKCgkQQFAFCgoJEECABooKCQkLIwR3JhZGluZyBleGVyY2lzZbDAJl9ub25lX0BAAP/ABAJAQAD/QUABAICgoJGSKFRlc3RfbGliAQCIoKCQkLIta251dGhfc2h1ZmZsZbDABA9AQAD/wAQQQEAA/0FAAQD0oKCRkipBc3RfaGVscGVyAQEEoKCRBAUBARygoJEECAEBOKCgkQQLAQFMoKCQoUCgkLIjaW50sMAEKEBAAP8EAUFAQAEBXKCgkQQYAQGIoKCQoUCgkLIlYXJyYXkEDUBAAQGYoKCRBCMBAcSgoJEEJgEB4KCgkQQpAQH0oKCQoUCgkLIjaW50BB5AQAECBKCgkQQ0AQIwoKCQoUCgkLIlYXJyYXkEKUBAAQJAoKCRkiJUeQECfKCgkKFAoJCQUUABAtigoJEEWQEC4KCgkKFAoKFAoJCyMFRlc3RpbmcgZnVuY3Rpb26wwARqQEAA/8AEa0BAAP9BQECgoUCgoUGgkLIta251dGhfc2h1ZmZsZbDABHVAQAD/wAR2QEAA/0FAQKCQkEBAQAEC9KCgkQR3AQMUoKCRBHoBAyigoJEEfQEDOKCgkpIEmgEDYECgoChXYXJuaW5nc5AwstQgDhBq8SUtahBSp8lsn6CgI1VyaZAwqEfBQIW125BgbQXftETpYqCgJVR5cGVzkDAA12Y4cbN9UPNLvJjxXGVKoKAuVHlwZV9pbW1lZGlhY3mQMNV5bEa0M7HDHEOGZhZytMygoCJUeZAwBSak0F4ZpeiPh6ufCJwny6CgKFRlc3RfbGlikDDGdCKpmlmH+JFGL88DII5OoKAEupAwGn/k7EMSnpuh8ZvVsiJJ5qCgLVN0ZGxpYl9fdWNoYXKQMILa3NkI3eYhuIQslrpkTcagoCtTdGRsaWJfX3NldJAw1H+tXVFRtFJ2YWIAvsJYd6CgK1N0ZGxpYl9fc2VxkDAYUHWqmbBZrUyuFctBH8wMoKAuU3RkbGliX19yYW5kb22QMN5G6PEaIMyrnVSgmvuDlLigoCtTdGRsaWJfX29iapAwK1QNxUQ4zwY4g/boXEqjeqCgMVN0ZGxpYl9fbmF0aXZlaW50kDAouELO0P7dQcVbndNPD+ecoKArU3RkbGliX19tYXCQMHF/4Bpnr4aHJGbQTHZj0W+goC5TdGRsaWJfX2xleGluZ5Aw91aZN7QZ0IBlEHooidLPKKCgLFN0ZGxpYl9fbGF6eZAwXWL4V9D3rlFJ67bR178flaCgLVN0ZGxpYl9faW50NjSQMGz38JXqf9WbrUT/ItCExO6goC1TdGRsaWJfX2ludDMykDBMB0nlHY/OV1K8sA/kKk3coKAvU3RkbGliX19oYXNodGJskDDD7BC5O7NYaG0C+pxfSttroKAuU3RkbGliX19mb3JtYXSQMOhpYBD8ZtTOmjvD8xH26iCgoC9TdGRsaWJfX2NvbXBsZXiQMIE2eqob4cyvFmEKlsPSvBOgoC5TdGRsaWJfX2J1ZmZlcpAwnq8rHNcOM2AcFS0c4buL6aCgMFN0ZGxpYl9fYmlnYXJyYXmQMHOHHmHjeF2PDYIhlNrrheygoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoClQcmltaXRpdmWQMBixQrcv6rJqx3+mNMUDUqmgoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgKFByZV90ZXN0kDDR4cpr3OOS95/89b7d6LIAoKAkUGF0aJAwsSLT0HANPvNsnZnCVuDNsKCgKVBhcnNldHJlZZAwksTmcdJDrQzMT4wT2ZU/faCgK091dGNvbWV0cmVlkDAOker09Xf5a5AhxLLm9RvpoKApTG9uZ2lkZW50kDATs+snCwR1KtsPu4wpz0xYoKAoTG9jYXRpb26QMMhz9ETt3dEUJSWASnsSEsygoDFMZWFybm9jYW1sX3JlcG9ydJAwb+mvfRnAFPvwUiyfI4gh9aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoCtKc29uX3NjaGVtYZAwYhBdwAH7hIxu7foYSsWIh6CgKUpzb25fcmVwcpAwxkc1HhhGw+aSGkor2PSi+aCgKkpzb25fcXVlcnmQMNG7Mw6QEbcDUnAMOFMhGxigoC1Kc29uX2VuY29kaW5nkDB6AKPHBCGjI5tRsKt6/pg0oKAySW50cm9zcGVjdGlvbl9pbnRmkDBUmQFxa+3jvIKaw+SK95cLoKAsSWRlbnRpZmlhYmxlkDCk1m+80z/8oYdayFRYnmKMoKAlSWRlbnSQMNAEH+9wmQvB0yUgfPJON1ugoCZGdW5fdHmQMBUQ32qTnEZql1iz5zm2vAugoCpEb2NzdHJpbmdzkDDEeaEJSu21W0v5RRF4y2SeoKAwQ2FtbGludGVybmFsTGF6eZAwD/3UVjroyrAgtiRzR8ne96CgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYaCgKEFzdHR5cGVzkDC66oyeNZ5ZUumkaeNzYlC/oKAqQXN0X2hlbHBlcpAwC0U/El9Yb2i9L3ytal1CGaCgKkFuZ3N0cm9tX1+QMONh0oWvIEbwZ1MpN9e7SQWgoChBbmdzdHJvbZAwhf5PugABsDd0Te6VtUB3VECgBQFyoAUBlqAFAYKgBQE2QEBAQEBAQEBAQA==",
        "js": "function\ndynload(B){\"use strict\";var\nC={},m=\"knuth_shuffle\",l=\"array\",k=109,j=\"int\",c=B.jsoo_runtime,b=c.caml_string_of_jsbytes;function\nd(a,b){return a.length==1?a(b):c.caml_call_gen(a,[b])}function\nA(a,b,d,e){return a.length==3?a(b,d,e):c.caml_call_gen(a,[b,d,e])}function\nz(a,b,d,e,f,g,h,i,j,k,l,m){return a.length==11?a(b,d,e,f,g,h,i,j,k,l,m):c.caml_call_gen(a,[b,d,e,f,g,h,i,j,k,l,m])}var\nf=c.caml_get_global_data(),g=f.Stdlib__random,e=f.Test_lib,a=f.Ast_helper,p=f.Ty,h=[0,d(g[12],0)];d(e[k][4],b(\"Grading exercise\"));var\no=b(m),v=[0,17],w=[0,[0,b(\"Testing function\")],[0,[1,b(m)],0]],n=[0,[0],[0,[0,1],[0,[0,-5,100,125],0]]],q=d(p[2],[0,[1,0,[0,[3,[0,[0,b(l)],a[1][1]],[0,[0,[3,[0,[0,b(j)],a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],[0,[3,[0,[0,b(l)],a[1][1]],[0,[0,[3,[0,[0,b(j)],a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0]],a[1][1],0,0]),r=0,s=0,t=[0,function(a){return d(g[13],h[1])}],u=[0,function(a){h[1]=d(g[12],0);return 0}],i=[0,w,z(e[66],v,0,0,0,u,t,s,r,q,o,n)];function\nx(a){return[0,i,0]}var\ny=A(e[26],0,e[k][2],x);d(e[1],y);c.caml_register_global(12,[0,h,i],\"Test\");return C}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 20
  },
  null
]