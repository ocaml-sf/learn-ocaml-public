[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "The maximum sublist problem",
    "stars": 2,
    "identifier": "5.15",
    "authors": [
      [
        "Gonçalo Domingos",
        "goncalogdomingos@gmail.com"
      ]
    ],
    "focus": [
      "List manipulation"
    ],
    "backward_exercises": [
      "smelodesousa/F5/5-gray-codes"
    ]
  },
  {
    "id": "5-max-sub-list",
    "prelude_ml": "",
    "template": "let max_kadane l = failwith \"Unanswered\"\nlet kadane l = failwith \"Unanswered\"",
    "descr": [
      [
        "",
        "<script>\nMathJax = {\n  loader: {load: ['input/asciimath', 'output/chtml']},\n  asciimath: {\n    delimiters: [['$','$'], ['`','`']]\n  }\n}\n</script>\n\n<script src='https://polyfill.io/v3/polyfill.min.js?features=es6'></script>\n<script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js' async='' id='MathJax-script' type='text/javascript'></script>\n\n<h1 id=\"Introduction\">Introduction</h1>\n\n<p>The maximum sublist problem consists of, given a list of integers, finding the contiguous sublist with the largest sum of all existing contiguous sublists.</p>\n<p>For example, looking at the list <code>[ -3; 6; -3; 4; -1; 2; 2; -5; 4 ]</code>, the sublist with the largest sum is <code>[6; -3; 4; -1; 2; 2]</code>, which sum is 10. This sublist might not be unique, however. The list <code>[ -3; 7; -11; 4; -1; 2; 2; -5; 4 ]</code> has two sublists with a sum of 7. The maximum sublist might not be unique, but the largest sum is.</p>\n<p>To efficiently solve this problem, in 1984, Jay Kadane (from Carnegie Mellon University) presented an algorithm that solves this problem by going through the list just once.</p>\n<p>The algorithm is defined recursively in the following manner:</p>\n<ul><li><p>If the list l is empty, then the sum is $0$.</p>\n</li><li><p>If the list l is $[v_1; v_2; \\ldots ; v_ {i−1}; v_i; \\ldots ; v_n]$ and $m$ is the largest possible sum for the sublist that ends in $i-1$, then the biggest sum of $[v_1; v_2; \\ldots ; v_ {i−1}; v_i]$ is $max(v_i, m+v_i)$.</p>\n<p>Note: The empty list will be considered the leftmost sublist of any list. Its sum is also 0.</p>\n</li></ul>\n\n<h1 id=\"Objectives\">Objectives</h1>\n\n<ol><li><p>Implement a function <code>max_kadane : int list -&gt; int</code> that incorporates the previously shown Kadene&#39;s algorithm and returns the largest possible sum of a contiguous sublist from the original list. If necessary, you may use an extra list to memoize the previously found largest sums.</p>\n</li><li><p>Implement a function <code>kadane : int list -&gt; int list</code> that returns the sublist which has the largest sum. In case there are multiple sublists, you may return the leftmost one.</p>\n</li></ol>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAASAAAAA0AAAAzgAAAMGgKFNvbHV0aW9uoLCgKm1heF9rYWRhbmUBAKvQwMFAwLOQoyRsaXN0SaDAs5CjI2ludEFAkEACBfXhAEAA+UCQQAIF9eEAQAD4BAdAAgX14QBAAPpAsMAJSS4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9zbWVsb2Rlc291c2EvRjUvNS1tYXgtc3ViLWxpc3Qvc29sdXRpb24ubWxCSEzABAJCSFZAQKEEGkBAoLCgJmthZGFuZQEArNDAwUDAswQZoMCzkKMjaW50QUCQQAIF9eEAQAD8QJBAAgX14QBAAPvAswQjoAQKQJBAAgX14QBAAP1AAgX14QBAAP5AsMAEGlABASsBAS/ABBtQAQErAQE1QEChBDNLQECElaa+AAABVwAAADIAAAC9AAAAmKCgKFNvbHV0aW9ukDBaUa3dPRHA7+QIpMXhJ9SboKArU3RkbGliX19zZXGQMBhQdaqZsFmtTK4Vy0EfzAygoCxTdGRsaWJfX2xpc3SQMIhgnvOjBm3PFq10VvUxItKgoC5TdGRsaWJfX2VpdGhlcpAwJVW/CbAguIh6TYpkWw7TR6CgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgJ1ByZXBhcmWQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "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",
        "js": "function\ndynload(d){\"use strict\";var\ne={},a=d.jsoo_runtime,b=a.caml_register_global;function\nl(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\nj(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}var\nc=a.caml_get_global_data(),g=c.Stdlib,k=c.Stdlib__list;b(0,[0],\"Prelude\");b(1,[0],\"Prepare\");function\nf(a){if(a){var\nh=a[1],d=h,c=h,b=a[2];for(;;){if(b){var\ne=b[1],f=j(g[17],d+e|0,e),k=b[2],d=f,c=j(g[17],f,c),b=k;continue}if(!(0<=c))return 0;var\ni=c;break}}else\nvar\ni=a;return i}b(4,[0,f,function(b){if(b){var\nh=b[1],i=f(b);if(0===i)return 0;var\nd=h,e=[0,h,0],c=b[2];for(;;){if(d!==i&&c){var\ng=c[2],a=c[1];if((d+a|0)<a){var\nd=a,e=[0,a,0],c=g;continue}var\nd=d+a|0,e=[0,a,e],c=g;continue}return l(k[9],e)}}return b}],\"Solution\");return e}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAFRFQAAAAjAAAAYwAAABwAAABAAAAAAAAAABsAAABAAAAAAAAAACgAAAABAAAAYwAAADgAAAAAAAAAAgAAACEAAABsAAAACgAAADgAAAAAAAAABAAAACEAAAB/AAAA+////ygAAAACAAAAZwAAAAoAAAA4AAAAAAAAAAQAAAAhAAAAfwAAAPv///8oAAAAAQAAAB8AAAB0AAAANQAAAAAAAAA2AAAAAAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAEEAAAABAAAAPgAAAAQAAAAAAAAAOAAAAAAAAAABAAAAIQAAAAkAAAAfAAAAEAAAACsAAAAAAAAAnf///2gAAAA2AAAAAAAAADYAAAAAAAAANgAAAAAAAAA4AAAAAAAAAC8AAAAgAAAABQAAAD8AAAAAAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAANgAAAAAAAAA4AAAAAAAAAEEAAAAgAAAACwAAADYAAAAAAAAAQAAAAAAAAAA2AAAAAAAAADgAAAAAAAAAbAAAAEYAAAAhAAAAHwAAAIoAAAA1AAAAAAAAADYAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAEEAAAABAAAAPgAAAAQAAAAAAAAAOAAAAAAAAAABAAAAIQAAAAkAAAAfAAAAEAAAACsAAAAAAAAA+P7//2gAAAA2AAAAAAAAADYAAAAAAAAANgAAAAAAAAA4AAAAAAAAAC8AAAAgAAAABQAAAD8AAAAAAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAANgAAAAAAAAA4AAAAAAAAAEEAAAAgAAAACwAAADYAAAAAAAAAQAAAAAAAAAAKAAAADAAAACsAAAACAAAAy/7//zgAAAAAAAAAbAAAAEQAAABoAAAAOAAAAAAAAAAZAAAAIwAAADgAAAAAAAAAAAAAACEAAAALAAAADQAAAEAAAAAAAAAAEwAAAAMAAAA5AAAAAAAAAISVpr4AAAv4AAADTwAACiEAAAlZ0KAIAAAoACRUZXN0UAEFNKCgkZIuU3RkbGliX19yYW5kb210oKCRBAUATKCgkQQIAHSgoJChQKChQKCQkAD9oKFAoJCQRqChQKCQkAD9oKFAoJCQRKChQKCQkAD/oKFAoJCQQqChQKCQkEKgoUCgkJAA+6ChQKCQkESgkJBAQEBAQEBAQEBAoKFAoKFAoJCQAP2goUCgkJBHoKFAoJCQAPWgoUCgkJBEoKFAoJCQAP+goUCgkJBCoKFAoJCQQqChQKCQkAD7oKFAoJCQRKCQkEBAQEBAQEBAQECgoUCgoUCgkJAA/6ChQKCQkECgkJBAQECgoUCgoUCgkJAA/qChQKCQkAD/oKFAoJCQAP2gkJBAQEBAoJCQQEBAQEABAJygoJCQsiptYXhfa2FkYW5lsMAmX25vbmVfQEAA/8AEAkBAAP9BQAEApKCgkZIqQXN0X2hlbHBlcgEAtKCgkQQFAQDMoKCRBAgBAOCgoJChQKCQsiNpbnSwwAQXQEAA/wQBQUBAAQDwoKCRBBUBARygoJEEGAEBOKCgkQQbAQFMoKCQoUCgkLIjaW50BBNAQAEBXKCgkQQmAQGIoKCQoUCgkLIkbGlzdAQeQEABAZigoJGSIlR5AQHUoKCQoUCgkJBBQAECAKCgkKFAoJCQVEABAgigoJChQKCQkEVAAQIQoKCRkihUZXN0X2xpYgECGKCgkKFAoJCQSkABAkygoJEEDAECVKCgkKFAoKFAoJCyMFRlc3RpbmcgZnVuY3Rpb26wwARoQEAA/8AEaUBAAP9BQECgoUCgoUGgkLIqbWF4X2thZGFuZbDABHNAQAD/wAR0QEAA/0FAQKCQkEBAQAECaKCgkJCyMEdyYWRpbmcgZXhlcmNpc2WwwAR/QEAA/8AEgEBAAP9BQAECeKCgkQQzAQKAoKCQoUCgoUCgkJAA/aChQKCQkEagoUCgkJAA/aChQKCQkESgoUCgkJAA/6ChQKCQkEKgoUCgkJBCoKFAoJCQAPugoUCgkJBEoJCQQEBAQEBAQEBAQKChQKChQKCQkAD9oKFAoJCQR6ChQKCQkAD1oKFAoJCQRKChQKCQkAD/oKFAoJCQQqChQKCQkEKgoUCgkJAA+6ChQKCQkESgkJBAQEBAQEBAQEBAoKFAoKFAoJCQAP+goUCgkJBAoJCQQEBAoKFAoKFAoJCQAP6goUCgkJAA/6ChQKCQkAD9oJCQQEBAQKCQkEBAQEBAAQKcoKCQkLIma2FkYW5lsMAFARdAQAD/wAUBGEBAAP9BQAECpKCgkQUBFgECtKCgkQUBGQECzKCgkQUBHAEC6KCgkQUBHwEC/KCgkKFAoJCyI2ludAUBF0BAAQMMoKCRBQEqAQM4oKCQoUCgkLIkbGlzdAUBIkBAAQNIoKCRBQE1AQN0oKCRBQE4AQOQoKCRBQE7AQOkoKCQoUCgkLIjaW50BQEzQEABA7SgoJEFAUYBA+CgoJChQKCQsiRsaXN0BQE+QEABA/CgoJEFASABBCygoJChQKCQkEFAAQRYoKCQoUCgkJBUQAEEYKCgkKFAoJCQRUABBGigoJEFAR4BBHCgoJChQKCQkEpAAQSkoKCRBQEoAQSsoKCQoUCgoUCgkLIwVGVzdGluZyBmdW5jdGlvbrDABQGEQEAA/8AFAYVAQAD/QUBAoKFAoKFBoJCyJmthZGFuZbDABQGPQEAA/8AFAZBAQAD/QUBAoJCQQEBAAQTAoKCRBQFGAQTkoKCRBQFJAQT4oKCRBQFMAQUIoKCSkgUCQAEFMECgoChXYXJuaW5nc5AwstQgDhBq8SUtahBSp8lsn6CgI1VyaZAwqEfBQIW125BgbQXftETpYqCgJVR5cGVzkDAA12Y4cbN9UPNLvJjxXGVKoKAuVHlwZV9pbW1lZGlhY3mQMNV5bEa0M7HDHEOGZhZytMygoCJUeZAwBSak0F4ZpeiPh6ufCJwny6CgKFRlc3RfbGlikDDGdCKpmlmH+JFGL88DII5OoKAFAmCQMGOWWmaHBam7N1LQ6PKNGIegoC1TdGRsaWJfX3VjaGFykDCC2tzZCN3mIbiELJa6ZE3GoKArU3RkbGliX19zZXSQMNR/rV1RUbRSdmFiAL7CWHegoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLlN0ZGxpYl9fcmFuZG9tkDDeRujxGiDMq51UoJr7g5S4oKArU3RkbGliX19vYmqQMCtUDcVEOM8GOIP26FxKo3qgoDFTdGRsaWJfX25hdGl2ZWludJAwKLhCztD+3UHFW53TTw/nnKCgK1N0ZGxpYl9fbWFwkDBxf+AaZ6+GhyRm0Ex2Y9FvoKAsU3RkbGliX19saXN0kDCIYJ7zowZtzxatdFb1MSLSoKAuU3RkbGliX19sZXhpbmeQMPdWmTe0GdCAZRB6KInSzyigoCxTdGRsaWJfX2xhenmQMF1i+FfQ965RSeu20de/H5WgoC1TdGRsaWJfX2ludDY0kDBs9/CV6n/Vm61E/yLQhMTuoKAtU3RkbGliX19pbnQzMpAwTAdJ5R2PzldSvLAP5CpN3KCgL1N0ZGxpYl9faGFzaHRibJAww+wQuTuzWGhtAvqcX0rba6CgLlN0ZGxpYl9fZm9ybWF0kDDoaWAQ/GbUzpo7w/MR9uogoKAuU3RkbGliX19laXRoZXKQMCVVvwmwILiIek2KZFsO00egoC9TdGRsaWJfX2NvbXBsZXiQMIE2eqob4cyvFmEKlsPSvBOgoC5TdGRsaWJfX2J1ZmZlcpAwnq8rHNcOM2AcFS0c4buL6aCgMFN0ZGxpYl9fYmlnYXJyYXmQMHOHHmHjeF2PDYIhlNrrheygoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoClQcmltaXRpdmWQMBixQrcv6rJqx3+mNMUDUqmgoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgKFByZV90ZXN0kDDR4cpr3OOS95/89b7d6LIAoKAkUGF0aJAwsSLT0HANPvNsnZnCVuDNsKCgKVBhcnNldHJlZZAwksTmcdJDrQzMT4wT2ZU/faCgK091dGNvbWV0cmVlkDAOker09Xf5a5AhxLLm9RvpoKApTG9uZ2lkZW50kDATs+snCwR1KtsPu4wpz0xYoKAoTG9jYXRpb26QMMhz9ETt3dEUJSWASnsSEsygoDFMZWFybm9jYW1sX3JlcG9ydJAwb+mvfRnAFPvwUiyfI4gh9aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoCtKc29uX3NjaGVtYZAwYhBdwAH7hIxu7foYSsWIh6CgKUpzb25fcmVwcpAwxkc1HhhGw+aSGkor2PSi+aCgKkpzb25fcXVlcnmQMNG7Mw6QEbcDUnAMOFMhGxigoC1Kc29uX2VuY29kaW5nkDB6AKPHBCGjI5tRsKt6/pg0oKAySW50cm9zcGVjdGlvbl9pbnRmkDBUmQFxa+3jvIKaw+SK95cLoKAsSWRlbnRpZmlhYmxlkDCk1m+80z/8oYdayFRYnmKMoKAlSWRlbnSQMNAEH+9wmQvB0yUgfPJON1ugoCZGdW5fdHmQMBUQ32qTnEZql1iz5zm2vAugoCpEb2NzdHJpbmdzkDDEeaEJSu21W0v5RRF4y2SeoKAwQ2FtbGludGVybmFsTGF6eZAwD/3UVjroyrAgtiRzR8ne96CgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYaCgKEFzdHR5cGVzkDC66oyeNZ5ZUumkaeNzYlC/oKAqQXN0X2hlbHBlcpAwC0U/El9Yb2i9L3ytal1CGaCgKkFuZ3N0cm9tX1+QMONh0oWvIEbwZ1MpN9e7SQWgoChBbmdzdHJvbZAwhf5PugABsDd0Te6VtUB3VECgBQKkoAUDRqAFAlugBQJ2QEBAQEBAQEBAQA==",
        "js": "function\ndynload(V){\"use strict\";var\nW={},i=\"list\",s=109,r=\"Testing function\",q=-11,g=\"int\",p=\"max_kadane\",o=\"kadane\",d=V.jsoo_runtime,b=d.caml_string_of_jsbytes;function\ne(a,b){return a.length==1?a(b):d.caml_call_gen(a,[b])}function\nU(a,b,c,e){return a.length==3?a(b,c,e):d.caml_call_gen(a,[b,c,e])}function\nm(a,b,c,e,f,g){return a.length==5?a(b,c,e,f,g):d.caml_call_gen(a,[b,c,e,f,g])}function\nn(a,b,c,e,f,g,h,i,j,k,l,m){return a.length==11?a(b,c,e,f,g,h,i,j,k,l,m):d.caml_call_gen(a,[b,c,e,f,g,h,i,j,k,l,m])}var\nf=d.caml_get_global_data(),h=f.Stdlib__random,a=f.Ast_helper,j=f.Ty,c=f.Test_lib,t=[0,[0,-3,[0,6,[0,-3,[0,4,[0,-1,[0,2,[0,2,[0,-5,[0,4,0]]]]]]]]],[0,[0,-3,[0,7,[0,q,[0,4,[0,-1,[0,2,[0,2,[0,-5,[0,4,0]]]]]]]]],[0,[0,-1,[0,0,0]],[0,[0,-2,[0,-1,[0,-3,0]]],0]]]],u=b(p),x=[0,1],y=[0,20],z=[0,5],B=[0,10],C=[0,[0,b(r)],[0,[1,b(p)],0]],D=b(\"Grading exercise\"),E=[0,[0,-3,[0,6,[0,-3,[0,4,[0,-1,[0,2,[0,2,[0,-5,[0,4,0]]]]]]]]],[0,[0,-3,[0,7,[0,q,[0,4,[0,-1,[0,2,[0,2,[0,-5,[0,4,0]]]]]]]]],[0,[0,-1,[0,0,0]],[0,[0,-2,[0,-1,[0,-3,0]]],0]]]],F=b(o),G=[0,b(g)],H=[0,b(i)],I=[0,b(g)],J=[0,b(i)],M=[0,1],N=[0,20],O=[0,5],Q=[0,10],R=[0,[0,b(r)],[0,[1,b(o)],0]],v=e(j[2],[0,[1,0,[0,[3,[0,[0,b(i)],a[1][1]],[0,[0,[3,[0,[0,b(g)],a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],[0,[3,[0,[0,b(g)],a[1][1]],0],a[1][1],0,0]],a[1][1],0,0]);function\nw(a){return e(h[5],10)-5|0}var\nA=[0,m(c[48],z,y,x,0,w)],k=[0,C,n(c[66],B,0,0,0,0,0,0,A,v,u,t)];e(c[s][4],D);var\nK=e(j[2],[0,[1,0,[0,[3,[0,J,a[1][1]],[0,[0,[3,[0,I,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0],[0,[3,[0,H,a[1][1]],[0,[0,[3,[0,G,a[1][1]],0],a[1][1],0,0],0]],a[1][1],0,0]],a[1][1],0,0]);function\nL(a){e(h[3],0);return e(h[5],10)-5|0}var\nP=[0,m(c[48],O,N,M,0,L)],l=[0,R,n(c[66],Q,0,0,0,0,0,0,P,K,F,E)];function\nS(a){return[0,k,[0,l,0]]}var\nT=U(c[26],0,c[s][2],S);e(c[1],T);d.caml_register_global(26,[0,k,l],\"Test\");return W}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 28
  },
  null
]