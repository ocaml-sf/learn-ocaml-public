[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Run-length encoder",
    "stars": 2,
    "identifier": "5.7",
    "authors": [
      [
        "Rui Barata",
        "rui.barata@ubi.pt"
      ],
      [
        "Leonardo Santos",
        "leomendesantos@gmail.com"
      ]
    ],
    "focus": [
      "List manipulation",
      "types"
    ],
    "backward_exercises": [
      "mooc/week3/seq1/ex2"
    ]
  },
  {
    "id": "5-rle",
    "prelude_ml": "",
    "template": "let p1 = To_Answer \"Replace with your solution\"\n\nlet rle_encode l = \n  failwith \"Replace with your solution\"\n\nlet rle_decode l =\n  failwith \"Replace with your solution\"",
    "descr": [
      [
        "",
        "<h1 id=\"Introduction\">Introduction</h1>\n\n<p>Let&#39;s implement a classic and simple lossless data compression method known as a <em>run-length encoder</em> (RLE).</p>\n<p>This method allows sequences of elements to be compressed and stored as a single data value and count.</p>\n<p>It is efficient when the considered sequences are known to have multiple repeated occurrences. It is used alongside other compression methods that create such repetitions (such as the <em>Burrows-Wheeler</em> method) to compress images, FAX messages, and more.</p>\n<p>As an example, if we have a list with repeated characters:</p>\n<p><code>aaiojanbeeebbaffssjjjjdreghsrf</code> is compressed to <code>a2iojanbe3b2af2s2j4dreghsrf</code>.</p>\n<p>The general rule applied to any sequence of characters is: character <code>x</code> of length <code>y</code> is substituted by <code>xy</code>, which means &quot;<code>x</code>, <code>y</code> times&quot;. The RLE codification is a simple application of this basic rule. Decodification, which allows for the recreation of the original string, is simply this process reversed.</p>\n<h1 id=\"Goals\">Goals</h1>\n\n<ol><li><p>Given an element <code>x</code> of an uncompressed list, we mean to define its image as per the RLE codification. If there is only one occurrence, then the codification should return <code>One x</code>, if it is the first element of a repetition of length <code>y</code>, it should return <code>Many (x, y)</code>. Which of these options correctly defines the type <code>rle_contents</code>:</p>\n<p>(a) <code>type rle_contents = int * (int*int)</code><br />\n(b) <code>type rle_contents = One of int | Many of (int*int)</code><br />\n(c) <code>type rle_contents = One | Many</code><br />\n(d) <code>type rle_contents = { One : int; Many : int*int }</code><br /><br /></p>\n</li><li><p>Define the function <code>rle_encode : int list -&gt; rle_contents list</code> that calculates the codification of the list passed as a parameter. For example <code>rle_encode [1;1;3;3,3;2;5;5]</code> returns <code>[Many (1,2); Many (3,3); One 2; Many (5,2)]</code>.</p>\n</li><li><p>Define the inverse function <code>rle_decode :  &#39;a rle_contents list -&gt; int list</code>.\nFor example <code>rle_decode [Many (1,2); Many (3,3); One 2; Many (5,2)]</code> returns <code>[1;1;3;3,3;2;5;5]</code>.</p>\n</li></ol>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAf8AAAByAAABwgAAAbOgJ1ByZXBhcmWgwaAscmxlX2NvbnRlbnRzAFoIAAA4AEBAkaDgoCNPbmUAUpCgwLOQoyNpbnRBQJBAAgX14QBAAP1AQLDACT8uL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvc21lbG9kZXNvdXNhL0Y1LzUtcmxlL3ByZXBhcmUubWxCVVfABAJCVWFAQKEEGEGg4KAkTWFueQBTkKDAkqDAs5AEFECQQAIF9eEAQAD7oMCzkAQZQJBAAgX14QBAAPpAAgX14QBAAPxAQLDABBdDY2XABBhDY3hAQKEELkJAQUBAQEBAsMAEG0FAQMAEHENjeEBAQKBAQKEEM0BBQKDBoCZjaG9pY2UAWwgAADgAQECRoOCgIUEAVZBAQLDABCtGAEgASsAELEYASABNQEChBEJEoOCgIUIAVpBAQLDABDRGAEgATsAENUYASABRQEChBEtFoOCgIUMAV5BAQLDABD1GAEgAUsAEPkYASABVQEChBFRGoOCgIUQAWJBAQLDABEZGAEgAVsAER0YASABZQEChBF1HoOCgKVRvX0Fuc3dlcgBZkKDAs5CjJnN0cmluZ09AkEACBfXhAEAA/kBAsMAEVkYASABawARXRgBIAG9AQKEEbUhAQUBAQEBAsMAEWkV6esAEW0YASABvQEBABD+hBHFDQUBAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDDgtDX+HDdPE3guMJBnIlIwoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAu4AAACXAAACSQAAAjWgKFNvbHV0aW9uoLCgInAxAG7QwLOhkJInUHJlcGFyZSZjaG9pY2VAkEACBfXhAEAA5UCwwAlALi9fbGVhcm4tb2NhbWwtYnVpbGQvZXhlcmNpc2VzL3NtZWxvZGVzb3VzYS9GNS81LXJsZS9zb2x1dGlvbi5tbEFARMAEAkFARkBAoQQTQECgsKApY291bnRPY2NyAG/QwMFAwJBAAgX14QBAAObAwUDAs5CjJGxpc3RJoAQKQJBAAgX14QBAAOfAs5CjI2ludEFAkEACBfXhAEAA6EACBfXhAEAA6UACBfXhAEAA6kCwwAQdRABEAEzABB5EAEQAVUBAoQQvQUCgsKAlc3BsaXQAcNDAwUDAs5AEEUCQQAIF9eEAQADrwMFAwLMEHqDABCUCBfXhAEAA7ECQQAIF9eEAQADtBAVAAgX14QBAAO5AAgX14QBAAO9AsMAEM0kBAKoBALLABDRJAQCqAQC3QEChBEVGQKCwoCpybGVfZW5jb2RlAHHQwMFAwLMELqDAs5CjI2ludEFAkEACBfXhAEAA8ECQQAIF9eEAQADxwLOQBDigwLOhBFQscmxlX2NvbnRlbnRzQJBAAgX14QBAAPJAkEACBfXhAEAA80ACBfXhAEAA9ECwwARSTgEBCQEBEcAEU04BAQkBARtAQKEEZEtAoLCgK2xpc3RCdWlsZGVyAHLQwMFAwARRAgX14QBAAPbAwUDAswQ4QJBAAgX14QBAAPXAswQboAQJQJBAAgX14QBAAPdAAgX14QBAAPhAAgX14QBAAPlAsMAEZ1UBAiMBAivABGhVAQIjAQI2QEChBHlRQKCwoCpybGVfZGVjb2RlAHPQwMFAwLMEYqDAs6EEfQQpQJBAAgX14QBAAPpAkEACBfXhAEAA+8CzkKMkbGlzdEmgwLMEP0CQQAIF9eEAQAD8QJBAAgX14QBAAP1AAgX14QBAAP5AsMAEhFoBAnkBAoHABIVaAQJ5AQKLQEChBJZUQECElaa+AAAA8wAAACMAAACFAAAAa6CgKFNvbHV0aW9ukDB2OGki+14kuQ1ArLQZheDjoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlcGFyZZAw4LQ1/hw3TxN4LjCQZyJSMKCgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "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",
        "js": "function\ndynload(k){\"use strict\";var\nl={},b=k.jsoo_runtime,a=b.caml_register_global;function\ni(a,c,d){return a.length==2?a(c,d):b.caml_call_gen(a,[c,d])}var\nh=b.caml_get_global_data().Stdlib;a(0,[0],\"Prelude\");a(1,[0],\"Prepare\");var\nj=1;function\nc(d,a){if(a)var\ne=b.caml_equal(a[1],d),f=e?1+c(d,a[2])|0:e;else\nvar\nf=a;return f}function\ng(d,c){var\nb=d,a=c;for(;;){if(0===b)return a;if(a){var\nb=b-1|0,a=a[2];continue}return a}}function\nd(a){if(a){var\nb=a[1],e=c(b,a),f=g(e,a);if(1!==e)return[0,[1,[0,b,e]],d(f)];var\nh=[0,[0,b],d(f)]}else\nvar\nh=a;return h}function\ne(b,a){var\nc=0!==a?1:0,d=c?[0,b,e(b,a-1|0)]:c;return d}function\nf(a){if(a){var\nc=a[2],b=a[1];if(0===b[0]){var\ng=f(c);return i(h[37],[0,b[1],0],g)}var\nd=b[1],j=f(c),k=e(d[1],d[2]);return i(h[37],k,j)}return a}a(3,[0,j,c,g,d,e,f],\"Solution\");return l}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAJFFQAAAChAAAAKQAAACoAAAABAAAAAQAAAGgAAAB6AAAAVgAAAAoAAAABAAAAfwAAAP////8LAAAAMgAAACIAAAALAAAAQAAAAAAAAAAoAAAAAgAAAGMAAAAeAAAABAAAAEAAAAAAAAAAHAAAAEAAAAAAAAAAGwAAAEAAAAAAAAAAKAAAAAEAAABjAAAAOAAAAAAAAAACAAAAIQAAAGgAAABoAAAAbAAAABUAAAAJAAAADAAAAH0AAABVAAAAOAAAAFwAAABmAAAAOAAAAAAAAAAEAAAAIQAAAH8AAAABAAAACgAAAIMAAAABAAAAEwAAAAMAAAALAAAAbAAAAAoAAAA4AAAAAAAAAAQAAAAhAAAAQAAAAAAAAAA/AAAAAQAAAEAAAAAAAAAAFAAAAAMAAABUAAAADgAAAAMAAABsAAAACgAAADgAAAAAAAAABAAAACEAAAA/AAAAAAAAAEAAAAAAAAAAFAAAAAMAAAATAAAAAQAAAAEAAAAJAAAAfwAAAAEAAAAUAAAAAgAAAAEAAAB6AAAAVQAAAMr///9jAAAAEwAAAAIAAAALAAAAKAAAAAQAAABjAAAAOAAAAAAAAAACAAAAIQAAAGgAAABoAAAAbAAAABUAAAAJAAAADAAAAH0AAABVAAAAIgAAAFwAAABmAAAAOAAAAAAAAAAEAAAAIQAAAH8AAAABAAAAbAAAAAoAAAA4AAAAAAAAAAQAAAAhAAAAGwAAACIAAAANAAAAOAAAAAAAAAAkAAAAIgAAABQAAAACAAAAAQAAAAkAAAB/AAAAAQAAABQAAAACAAAAAQAAAHoAAABVAAAA4P///2MAAAATAAAAAgAAAAsAAAAoAAAABAAAACwAAAABAAAAAAAAAF7///8fAAAAEAAAAAMAAAA2AAAAAAAAADYAAAAAAAAANgAAAAAAAAA4AAAAAAAAAGwAAABDAAAARwAAAAwAAAAgAAAABAAAAAsAAAArAAAAAQAAALP///8JAAAAHwAAABAAAAADAAAANgAAAAAAAAA2AAAAAAAAADYAAAAAAAAAOAAAAAAAAABsAAAAQwAAAEcAAAAMAAAAIAAAAAQAAAAJAAAAKwAAAAAAAABS////CQAAAB8AAAAQAAAAAwAAADYAAAAAAAAANgAAAAAAAAA2AAAAAAAAADgAAAAAAAAAbAAAAEMAAABHAAAADAAAACAAAAAEAAAANgAAAAAAAAA4AAAAAAAAAGwAAABGAAAAIQAAADUAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAABAAAAAAAAAA4AAAAAAAAAAEAAAAhAAAAOAAAAAAAAAA+AAAAIgAAADYAAAAAAAAAQAAAAAAAAAA2AAAAAAAAADgAAAAAAAAAbAAAAEYAAAAhAAAAHwAAAHoAAAA1AAAAAAAAADYAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAABoAAAAOAAAAAAAAAAAAAAAQwAAAGgAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAQAAAAAAAAAA4AAAAAAAAAAAAAABDAAAANgAAAAAAAABAAAAAAAAAAEAAAAADAAAAPgAAAAQAAAAAAAAAaAAAAEEAAAABAAAAPgAAAAQAAAAAAAAAOAAAAAAAAAABAAAAIQAAABIAAAAKAAAAPwAAAAAAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAAA2AAAAAAAAADgAAAAAAAAAQQAAACAAAAALAAAANgAAAAAAAABAAAAAAAAAADYAAAAAAAAAOAAAAAAAAABsAAAARgAAACEAAAAfAAAAegAAADUAAAAAAAAANgAAAAAAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAA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",
        "js": "function\ndynload(ah){\"use strict\";var\nai={},m=\"list\",g=109,w=\"rle_contents\",l=\"Test\",v=\"int\",u=\"cases\",e=ah.jsoo_runtime,a=e.caml_string_of_jsbytes;function\nc(a,b){return a.length==1?a(b):e.caml_call_gen(a,[b])}function\ns(a,b,c){return a.length==2?a(b,c):e.caml_call_gen(a,[b,c])}function\nag(a,b,c,d){return a.length==3?a(b,c,d):e.caml_call_gen(a,[b,c,d])}function\no(a,b,c,d,f){return a.length==4?a(b,c,d,f):e.caml_call_gen(a,[b,c,d,f])}function\nt(a,b,c,d,f,g,h,i,j,k,l,m){return a.length==11?a(b,c,d,f,g,h,i,j,k,l,m):e.caml_call_gen(a,[b,c,d,f,g,h,i,j,k,l,m])}var\ni=e.caml_get_global_data(),f=i.Stdlib__random,d=i.Test_lib,b=i.Ast_helper,n=i.Ty,x=a(\"smal_list\"),y=a(\"learnocaml_autoregister_smal_list_4BCC67\"),z=a(l),B=a(\"code\"),C=a(\"learnocaml_autoregister_code_4438D8\"),D=a(l),E=a(\"decode\"),F=a(\"learnocaml_autoregister_decode_5A61C5\"),G=a(l),H=a(\"Grading exercise 1\"),I=a(\"p1\"),J=[0,a(\"choice\")],L=[0,[0,a(\"Exercise 1: \")],[0,[1,a(\"\")],0]],M=a(\"Testing encoder function\"),N=[0,0,[0,[0,1,0],[0,[0,1,[0,1,[0,1,[0,5,0]]]],[0,[0,5,[0,1,[0,1,[0,1,0]]]],0]]]],O=a(\"rle_encode\"),P=[0,a(w)],Q=[0,a(m)],R=[0,a(v)],S=[0,a(m)],U=[0,6],V=[0,[0,a(\"Encoder: \")],[0,[1,a(u)],0]],W=a(\"Testing decoder function\"),X=[0,0,[0,[0,[0,0],0],[0,[0,[1,[0,1,5]],0],0]]],Y=a(\"rle_decode\"),Z=[0,a(v)],_=[0,a(m)],$=[0,a(w)],aa=[0,a(m)],ac=[0,7],ad=[0,[0,a(\"Decoder: \")],[0,[1,a(u)],0]],A=i.Stdlib;function\nh(b,a){var\nc=0!==a?1:0,d=c?[0,b,h(b,a-1|0)]:c;return d}o(d[g][1][13],z,y,x,h);function\nj(j){c(f[3],0);var\na=0,b=0;for(;;){var\ne=c(f[5],3)+1|0,g=h(c(f[5],10),e),d=s(A[37],b,g),i=a+1|0;if(21!==a){var\na=i,b=d;continue}return d}}o(d[g][1][13],D,C,B,j);function\nk(h){c(f[3],0);var\nb=0,a=0;for(;;){var\nd=c(f[5],3)+1|0,e=1===d?[0,[0,c(f[5],10)],a]:[0,[1,[0,c(f[5],10),d]],a],g=b+1|0;if(21!==b){var\nb=g,a=e;continue}return e}}o(d[g][1][13],G,F,E,k);c(d[g][4],H);var\nK=c(n[2],[0,[3,[0,J,b[1][1]],0],b[1][1],0,0]),p=[0,L,s(d[63],K,I)];c(d[g][4],M);var\nT=c(n[2],[0,[1,0,[0,[3,[0,S,b[1][1]],[0,[0,[3,[0,R,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0],[0,[3,[0,Q,b[1][1]],[0,[0,[3,[0,P,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0]],b[1][1],0,0]),q=[0,V,t(d[66],U,0,0,0,0,0,0,[0,j],T,O,N)];c(d[g][4],W);var\nab=c(n[2],[0,[1,0,[0,[3,[0,aa,b[1][1]],[0,[0,[3,[0,$,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0],[0,[3,[0,_,b[1][1]],[0,[0,[3,[0,Z,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0]],b[1][1],0,0]),r=[0,ad,t(d[66],ac,0,0,0,0,0,0,[0,k],ab,Y,X)];function\nae(a){return[0,p,[0,q,[0,r,0]]]}var\naf=ag(d[26],0,d[g][2],ae);c(d[1],af);e.caml_register_global(36,[0,h,h,j,j,k,k,p,q,r],l);return ai}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 21
  },
  null
]