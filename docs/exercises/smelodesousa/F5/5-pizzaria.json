[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Luigi’s Pizzeria - From MIUP 2018",
    "stars": 3,
    "identifier": "5.23",
    "authors": [
      [
        "Rui Barata",
        "rui.barata@ubi.pt"
      ]
    ],
    "focus": [
      "List manipulation"
    ],
    "backward_exercises": [
      "smelodesousa/F5/5-brackets"
    ]
  },
  {
    "id": "5-pizzaria",
    "prelude_ml": "",
    "template": "let score n pizza = failwith \"Unanswered\"\n",
    "descr": [
      [
        "",
        "<script>\nMathJax = {\n  loader: {load: ['input/asciimath', 'output/chtml']},\n  asciimath: {\n    delimiters: [['$','$'], ['`','`']]\n  }\n}\n</script>\n\n<script src='https://polyfill.io/v3/polyfill.min.js?features=es6'></script>\n<script src='https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js' async='' id='MathJax-script' type='text/javascript'></script>\n\n<h1 id=\"Introduction\">Introduction</h1>\n\n<p>Luigi’s new pizzeria has been the talk of the town in the past few weeks. Not only because it has the best pizzas you can find for miles, but also because of its crazy <em>all you can eat</em> policy.</p>\n<p>You see, Luigi’s pizzas are enormous, and they are cut into very thin slices. And that’s not even the craziest part! Each slice has different ingredients and you can eat as many slices as you want. But there is one small caveat. You can only select adjacent slices and you have to eat them all! It is therefore very tricky for each client to select the best part of the pizza according to his taste.</p>\n<blockquote><p><hr/><img src='https://i.imgur.com/4BJ0iBk.png' alt='' /></p>\n<p>Figure 1: Selected slices must be adjacent. The section in grey has a score of 20.</p>\n<p><hr/></p>\n</blockquote>\n\n<p>You enter the restaurant and see that today’s special pizza has been cut into <em>N</em> slices. After attributing scores $(S_1, \\ldots , S_N)$ to each one of the slices, you must devise an algorithm that selects the section of the pizza that yields the best value according to those scores. The value of a section of pizza is the sum of the scores of its slices. Notice that slice scores can be negative.</p>\n<h1 id=\"Objectives\">Objectives</h1>\n\n<p>Define a function <code>score :int -&gt; int list -&gt; int </code> that takes the number $N$ of slices in the pizza  and a list of $N$ integer that contains the integers ($S_i$) that represent the score you attributed to each slice. These values follow these constraints:</p>\n<table>\n<tbody>\n<tr>\n<td align='center'>$1 \\leq N \\leq 5 000$ </td>\n<td align='center'>    Number of slices.</td>\n</tr>\n<tr>\n<td align='center'>$−100 \\leq S_i \\leq 100$</td>\n<td align='center'>    Value of each slice.</td>\n</tr>\n</tbody>\n</table>\n\n<p>The function returns an integer that is equal to the value of the best possible section of adjacent pizza slices. The smallest possible section would be a single slice.</p>\n<p>For instance,</p>\n<ul><li><code>score 4 [2;-2;3;-1]</code> returns <code>3</code>.</li><li><code>score 16 [-1;1;3;-8;3;-2;5;10;-2;-5;4;1;-7;13;-8;4]</code> returns <code>20</code>.</li><li><code>score 4 [-1;-2;-3;-4]</code> returns <code>-1</code>.</li></ul>"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZWx1ZGVAhJWmvgAAALoAAAAZAAAAYgAAAE6goCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAAAoAAAACAAAABgAAAAWgJ1ByZXBhcmVAhJWmvgAAANYAAAAeAAAAcwAAAFygoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAANsAAAAlAAAAlAAAAIigKFNvbHV0aW9uoLCgJXNjb3JlAFvQwMFAwLOQoyNpbnRBQJBAAgX14QBAAPnAwUDAs5CjJGxpc3RJoMCzkAQOQJBAAgX14QBAAPpAkEACBfXhAEAA+8CzkAQTQJBAAgX14QBAAPxAAgX14QBAAP1AAgX14QBAAP5AsMAJRS4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9zbWVsb2Rlc291c2EvRjUvNS1waXp6YXJpYS9zb2x1dGlvbi5tbEsBAUABAUTABAJLAQFAAQFJQEChBCRAQECElaa+AAAA8wAAACMAAACFAAAAa6CgKFNvbHV0aW9ukDDPA/PjIbIrPVqeLKdkGIqgoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKAnUHJlcGFyZZAwk9hskzkHeCbV71uvzoh7WaCgJ1ByZWx1ZGWQME6duwCqWnniDZR4nnWJGaGgoDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "test_cmi": "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",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAABEDoAAAA5AAAAAAAAADoAAAA5AAAAAAAAAFQAAAAvAAAAKQAAACoAAAACAAAAAAAAAFYAAAAYAAAAAAAAAEMAAAAKAAAADQAAAG4AAAAOAAAAOAAAAAAAAAAQAAAAIgAAAAsAAAAOAAAAbgAAAGgAAAA4AAAAAAAAABAAAAAiAAAADQAAAEQAAAAyAAAAJwAAAAcAAAACAAAAKAAAAAMAAAApAAAAKgAAAAEAAAAsAAAAAQAAAAAAAADb////ZwAAAJv///9oAAAADgAAAA0AAAAnAAAABgAAACsAAAAAAAAA8f///woAAAA/AAAAAAAAABMAAAABAAAAOQAAAAAAAACElaa+AAAC6AAAAHYAAAHAAAABetCgCAAAKAAnUHJlbHVkZVBMoKCSkgQFSECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoACdQcmVwYXJlXEygoJKSBAVIQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBAyQMJPYbJM5B3gm1e9br86Ie1mgoCdQcmVsdWRlkDBOnbsAqlp54g2UeJ51iRmhoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoAChTb2x1dGlvbmgBAOigoJGSJlN0ZGxpYnygoJEEBQBcoKCSkgQNAQDkQKCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgBBSQMM8D8+Mhsis9Wp4sp2QYiqCgoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAoAQsQEBAQEBAQEBAQA==",
        "js": "function\ndynload(c){\"use strict\";var\nd={},a=c.jsoo_runtime,b=a.caml_register_global;function\nf(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}var\ne=a.caml_get_global_data().Stdlib;b(0,[0],\"Prelude\");b(1,[0],\"Prepare\");b(3,[0,function(j,g){var\na=g,c=0,b=-101;for(;;){if(a){var\nd=a[1],h=f(e[17],b,c+d|0),i=f(e[17],0,c+d|0),a=a[2],c=i,b=h;continue}return b}}],\"Solution\");return d}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAEHFQAAAAvAAAAYwAAABsAAABAAAAAAAAAACgAAAABAAAAHwAAAA4AAABjAAAAGwAAAGgAAABoAAAANgAAAAAAAAA2AAAAAAAAADgAAAAAAAAALwAAACAAAAAGAAAACgAAAAsAAAA4AAAAAAAAAAAAAAAhAAAAQAAAAAAAAAAoAAAAAgAAAGMAAAA4AAAAAAAAAAIAAAAhAAAAbAAAAMkAAAA4AAAAAAAAAAQAAAAhAAAAfwAAAJz///8oAAAAAgAAACsAAAAAAAAA7////wkAAAAfAAAAEAAAAAMAAAA2AAAAAAAAADYAAAAAAAAANgAAAAAAAAA4AAAAAAAAAGwAAABDAAAARwAAAAwAAAAgAAAABAAAAAsAAAArAAAAAQAAAMD///8JAAAAHwAAABAAAAADAAAANgAAAAAAAAA2AAAAAAAAADYAAAAAAAAAOAAAAAAAAABsAAAAQwAAAEcAAAAMAAAAIAAAAAQAAAAJAAAAHwAAAIMAAAA1AAAAAAAAADYAAAAAAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAABAAAAAAAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAaAAAAGgAAAA4AAAAAAAAAAAAAABDAAAAaAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAABAAAAAAAAABAAAAAAAAAADgAAAAAAAAAAAAAAEMAAAA2AAAAAAAAAEAAAAAAAAAAQAAAAAMAAAA+AAAABAAAAAAAAABoAAAAQQAAAAEAAAA+AAAABAAAAAAAAABoAAAAaAAAADgAAAAAAAAAAAAAAEMAAABoAAAAOAAAAAAAAAAAAAAAQwAAADYAAAAAAAAAQAAAAAAAAABAAAAAAwAAAD4AAAAEAAAAAAAAAGgAAABBAAAAAQAAAD4AAAAEAAAAAAAAADgAAAAAAAAAAQAAACEAAAARAAAAPwAAAAAAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAAA2AAAAAAAAADgAAAAAAAAARQAAACAAAAALAAAANgAAAAAAAABAAAAAAAAAAAoAAAArAAAAAQAAABv///84AAAAAAAAAGwAAABEAAAAaAAAADgAAAAAAAAAGQAAACMAAAA4AAAAAAAAAAAAAAAhAAAACwAAAA4AAAAPAAAAEgAAAAgAAAASAAAACQAAAD4AAAAFAAAAAAAAABMAAAAGAAAAOQAAAAAAAACElaa+AAAKrgAAAo8AAAg3AAAHZ9CgCAAAKAAkVGVzdFABBAygoJChQKCQkABLQHygoJChQKCQkFlAAESgoJGSKFRlc3RfbGliAEygoJGSLFN0ZGxpYl9fbGlzdABooKCRki5TdGRsaWJfX3JhbmRvbQEAjKCgkQQFAQCkoKCQkLIldmFsdWWwwCZfbm9uZV9AQAD/wAQCQEAA/0FAAQDgoKCQkLIJJGxlYXJub2NhbWxfYXV0b3JlZ2lzdGVyX3ZhbHVlXzQ0MzhEOLDABApAQAD/wAQLQEAA/0FAAQDooKCQkLIkVGVzdLDABBNAQAD/wAQUQEAA/0FAAQDwoKCRBC4BAPigoJCQsiVzY29yZbDABB9AQAD/wAQgQEAA/0FAAQE4oKCQkLIJJGxlYXJub2NhbWxfYXV0b3JlZ2lzdGVyX3Njb3JlXzVBNjFDNbDABChAQAD/wAQpQEAA/0FAAQFAoKCQkLIkVGVzdLDABDFAQAD/wAQyQEAA/0FAAQFIoKCRBEwBAVCgoJChQKChQKCQkEGgoUCgkJAA/aCQkEBAQKChQKChQKCQkESgoUCgkJBCoKFAoJCQAP6goUCgkJBDoKFAoJCQAP+gkJBAQEBAQECgoUCgoUCgkJBQoKFAoJCQAP+goUCgkJBBoKFAoJCQQ6ChQKCQkAD4oKFAoJCQQ6ChQKCQkAD+oKFAoJCQRaChQKCQkEqgoUCgkJAA/qChQKCQkAD7oKFAoJCQRKChQKCQkEGgoUCgkJAA+aChQKCQkE2goUCgkJAA+KChQKCQkESgkJBAQEBAQEBAQEBAQEBAQEBAQECgoUCgoUCgkJBEoKFAoJCQAP+goUCgkJAA/qChQKCQkAD9oKFAoJCQAPygkJBAQEBAQECgkJBAQEBAQAEBfKCgkJCyJXNjb3JlsMAE50BAAP/ABOhAQAD/QUABAYSgoJGSKkFzdF9oZWxwZXIBAZSgoJEEBQEBrKCgkQQIAQHEoKCRBAsBAdigoJChQKCQsiNpbnSwwAUBAEBAAP8EAUFAQAEB6KCgkQQYAQIUoKCRBBsBAjCgoJEEHgECRKCgkKFAoJCyI2ludAQTQEABAlSgoJEEKQECgKCgkKFAoJCyJGxpc3QEHkBAAQKQoKCRBDQBAtSgoJEENwEC6KCgkKFAoJCyI2ludAQsQEABAvigoJGSIlR5AQM0oKCQoUCgkJBJQAEDaKCgkQUBUAEDcKCgkKFAoKFAoJCyNlRlc3RpbmcgZnVuY3Rpb24gc2NvcmWwwAUBRUBAAP/ABQFGQEAA/0FAQKCQkEBAAQOEoKCRBQFjAQOkoKCRBQFmAQO4oKCRBQFpAQPIoKCSkgUBfwEECECgoChXYXJuaW5nc5AwstQgDhBq8SUtahBSp8lsn6CgI1VyaZAwqEfBQIW125BgbQXftETpYqCgJVR5cGVzkDAA12Y4cbN9UPNLvJjxXGVKoKAuVHlwZV9pbW1lZGlhY3mQMNV5bEa0M7HDHEOGZhZytMygoCJUeZAwBSak0F4ZpeiPh6ufCJwny6CgKFRlc3RfbGlikDDGdCKpmlmH+JFGL88DII5OoKAFAZ+QMMhwUpwjb3ebPVfiA9cgfrmgoC1TdGRsaWJfX3VjaGFykDCC2tzZCN3mIbiELJa6ZE3GoKArU3RkbGliX19zZXSQMNR/rV1RUbRSdmFiAL7CWHegoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLlN0ZGxpYl9fcmFuZG9tkDDeRujxGiDMq51UoJr7g5S4oKArU3RkbGliX19vYmqQMCtUDcVEOM8GOIP26FxKo3qgoDFTdGRsaWJfX25hdGl2ZWludJAwKLhCztD+3UHFW53TTw/nnKCgK1N0ZGxpYl9fbWFwkDBxf+AaZ6+GhyRm0Ex2Y9FvoKAsU3RkbGliX19saXN0kDCIYJ7zowZtzxatdFb1MSLSoKAuU3RkbGliX19sZXhpbmeQMPdWmTe0GdCAZRB6KInSzyigoCxTdGRsaWJfX2xhenmQMF1i+FfQ965RSeu20de/H5WgoC1TdGRsaWJfX2ludDY0kDBs9/CV6n/Vm61E/yLQhMTuoKAtU3RkbGliX19pbnQzMpAwTAdJ5R2PzldSvLAP5CpN3KCgL1N0ZGxpYl9faGFzaHRibJAww+wQuTuzWGhtAvqcX0rba6CgLlN0ZGxpYl9fZm9ybWF0kDDoaWAQ/GbUzpo7w/MR9uogoKAuU3RkbGliX19laXRoZXKQMCVVvwmwILiIek2KZFsO00egoC9TdGRsaWJfX2NvbXBsZXiQMIE2eqob4cyvFmEKlsPSvBOgoC5TdGRsaWJfX2J1ZmZlcpAwnq8rHNcOM2AcFS0c4buL6aCgMFN0ZGxpYl9fYmlnYXJyYXmQMHOHHmHjeF2PDYIhlNrrheygoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoClQcmltaXRpdmWQMBixQrcv6rJqx3+mNMUDUqmgoCdQcmVwYXJlkDCT2GyTOQd4JtXvW6/OiHtZoKAnUHJlbHVkZZAwTp27AKpaeeINlHiedYkZoaCgKFByZV90ZXN0kDDR4cpr3OOS95/89b7d6LIAoKAkUGF0aJAwsSLT0HANPvNsnZnCVuDNsKCgKVBhcnNldHJlZZAwksTmcdJDrQzMT4wT2ZU/faCgK091dGNvbWV0cmVlkDAOker09Xf5a5AhxLLm9RvpoKApTG9uZ2lkZW50kDATs+snCwR1KtsPu4wpz0xYoKAoTG9jYXRpb26QMMhz9ETt3dEUJSWASnsSEsygoDFMZWFybm9jYW1sX3JlcG9ydJAwb+mvfRnAFPvwUiyfI4gh9aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoCtKc29uX3NjaGVtYZAwYhBdwAH7hIxu7foYSsWIh6CgKUpzb25fcmVwcpAwxkc1HhhGw+aSGkor2PSi+aCgKkpzb25fcXVlcnmQMNG7Mw6QEbcDUnAMOFMhGxigoC1Kc29uX2VuY29kaW5nkDB6AKPHBCGjI5tRsKt6/pg0oKAySW50cm9zcGVjdGlvbl9pbnRmkDBUmQFxa+3jvIKaw+SK95cLoKAsSWRlbnRpZmlhYmxlkDCk1m+80z/8oYdayFRYnmKMoKAlSWRlbnSQMNAEH+9wmQvB0yUgfPJON1ugoCZGdW5fdHmQMBUQ32qTnEZql1iz5zm2vAugoCpEb2NzdHJpbmdzkDDEeaEJSu21W0v5RRF4y2SeoKAwQ2FtbGludGVybmFsTGF6eZAwD/3UVjroyrAgtiRzR8ne96CgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYaCgKEFzdHR5cGVzkDC66oyeNZ5ZUumkaeNzYlC/oKAqQXN0X2hlbHBlcpAwC0U/El9Yb2i9L3ytal1CGaCgKkFuZ3N0cm9tX1+QMONh0oWvIEbwZ1MpN9e7SQWgoChBbmdzdHJvbZAwhf5PugABsDd0Te6VtUB3VECgBQF0oAUCcqAFAm6gBQJ5oAUBNkBAQEBAQEBAQEA=",
        "js": "function\ndynload(O){\"use strict\";var\nP={},j=109,k=\"Test\",o=\"score\",i=\"int\",c=O.jsoo_runtime,K=c.caml_list_of_js_array,a=c.caml_string_of_jsbytes;function\nf(a,b){return a.length==1?a(b):c.caml_call_gen(a,[b])}function\nN(a,b,d,e){return a.length==3?a(b,d,e):c.caml_call_gen(a,[b,d,e])}function\nn(a,b,d,e,f){return a.length==4?a(b,d,e,f):c.caml_call_gen(a,[b,d,e,f])}function\nL(a,b,d,e,f,g,h){return a.length==6?a(b,d,e,f,g,h):c.caml_call_gen(a,[b,d,e,f,g,h])}function\nM(a,b,d,e,f,g,h,i,j,k,l,m){return a.length==11?a(b,d,e,f,g,h,i,j,k,l,m):c.caml_call_gen(a,[b,d,e,f,g,h,i,j,k,l,m])}var\ne=c.caml_get_global_data(),d=e.Test_lib,l=e.Stdlib__random,b=e.Ast_helper,s=[0,75],t=[0,25],p=a(\"value\"),q=a(\"learnocaml_autoregister_value_4438D8\"),r=a(k),v=a(o),w=a(\"learnocaml_autoregister_score_5A61C5\"),x=a(k),y=[0,[0,1,[0,-3,0]],[0,[0,4,[0,2,[0,-2,[0,3,[0,-1,0]]]]],[0,K([16,-1,1,3,-8,3,-2,5,10,-2,-5,4,1,-7,13,-8,4]),[0,[0,4,[0,-1,[0,-2,[0,-3,[0,-4,0]]]]],0]]]],z=a(o),A=[0,a(i)],B=[0,a(i)],C=[0,a(\"list\")],D=[0,a(i)],G=[0,9],H=[0,[0,a(\"Testing function score\")],0],u=e.Stdlib__list,E=e.Ty;function\ng(a){f(l[3],0);return f(l[5],201)-100|0}n(d[j][1][13],r,q,p,g);function\nh(b){var\na=L(d[48],t,s,0,0,g,0);return[0,f(u[1],a),a]}n(d[j][1][13],x,w,v,h);var\nF=f(E[2],[0,[1,0,[0,[3,[0,D,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,C,b[1][1]],[0,[0,[3,[0,B,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0],[0,[3,[0,A,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),m=[0,H,M(d[70],G,0,0,0,0,0,0,[0,h],F,z,y)];function\nI(a){return[0,m,0]}var\nJ=N(d[26],0,d[j][2],I);f(d[1],J);c.caml_register_global(21,[0,g,g,h,h,m],k);return P}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 13
  },
  null
]