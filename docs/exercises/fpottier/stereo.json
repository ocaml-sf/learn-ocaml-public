[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Trees in Stereo Vision",
    "stars": 3,
    "backward_exercises": [
      "fpottier/spectre"
    ]
  },
  {
    "id": "stereo",
    "prelude": "type 'a tree =\n  | Leaf\n  | Node of 'a tree * 'a * 'a tree\n\nlet hd = List.hd\nlet tl = List.tl\n",
    "template": "let inorder t =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet preorder t =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet i1, i2 =\n  (* TO DO: Define these constants. *)\n  Leaf,\n  Leaf\n\nlet p1, p2 =\n  (* TO DO: Define these constants. *)\n  Leaf,\n  Leaf\n\nlet reconstruct (xs : 'a list) (ys : 'a list) : 'a tree =\n  (* TO DO: Define this function. *)\n  raise TODO\n",
    "descr": [
      [
        "",
        "<h1 id=\"Trees-in-Stereo-Vision\">Trees in Stereo Vision</h1>\n\n<p>This short exercise considers a simple yet challenging question: <em>can one\nreconstruct a binary tree out of its inorder and preorder traversals?</em> This\nproblem was introduced by Knuth in &quot;The Art of Computer Programming&quot; (1968).</p>\n<h2 id=\"Tree-Traversals\">Tree Traversals</h2>\n\n<p>Here is an algebraic data type of binary trees:</p>\n<pre><code>  type &#39;a tree =\n    | Leaf\n    | Node of &#39;a tree * &#39;a * &#39;a tree</code></pre>\n\n<p>A tree <code>t</code> is either a leaf <code>Leaf</code> or a binary node <code>Node (u, x, v)</code>,\nwhich carries a left subtree <code>u</code>, an element <code>x</code>, and a right subtree <code>v</code>.</p>\n<p>A <em>traversal</em> of a tree <code>t</code> is a list of the elements carried by the tree <code>t</code>.\nThere are several natural ways of ordering such a list. At a binary node <code>Node\n(u, x, v)</code>, three objects are at hand, namely <code>u</code>, <code>x</code>, <code>v</code>. There are six\npermutations of these objects. These six permutations give rise to six natural\ntraversals, which are known as <em>inorder</em>, <em>preorder</em>, <em>postorder</em>, <em>reverse\ninorder</em>, <em>reverse preorder</em>, and <em>reverse postorder</em> traversals. In this\nexercise, two of these are of interest:</p>\n<ul><li><p>The <em>inorder traversal</em> corresponds to the identity permutation <code>u</code>, <code>x</code>, <code>v</code>. It is\n defined as follows: the inorder traversal of a binary node <code>Node (u, x, v)</code>\n is formed by concatenating the inorder traversal of the subtree <code>u</code>, the\n element <code>x</code>, and the inorder traversal of the subtree <code>v</code>.</p>\n</li><li><p>The <em>preorder traversal</em> corresponds to the permutation <code>x</code>, <code>u</code>, <code>v</code>. It is\n defined as follows: the preorder traversal of a binary node <code>Node (u, x, v)</code>\n is formed by concatenating the element <code>x</code>, the preorder traversal of the\n subtree <code>u</code>, and the preorder traversal of the subtree <code>v</code>.</p>\n</li></ul>\n\n<p><strong>Question 1.</strong> Define two functions <code>inorder</code> and <code>preorder</code> of type <code>&#39;a tree\n-&gt; &#39;a list</code>, such that <code>inorder t</code> and <code>preorder t</code> are respectively the\ninorder and preorder traversals of the tree <code>t</code>.</p>\n<p><em>Note.</em> The most direct definition of these functions uses list concatenation\n<code>@</code> and (unfortunately) has quadratic time complexity. There also exist slightly\nmore complex definitions that involve an accumulator and have linear time\ncomplexity. You may use whichever definition you prefer.</p>\n<h2 id=\"Traversal-Is-Not-Injective\">Traversal Is Not Injective</h2>\n\n<p>In the following, we restrict our attention to trees that do not have\nduplicate elements.</p>\n<p>The function <code>inorder</code> is not injective: it is possible to find two distinct\ntrees that have the same inorder traversal. The function <code>preorder</code> is not\ninjective either.</p>\n<p><strong>Question 2.</strong> Define two trees <code>i1</code> and <code>i2</code>, both of type <code>char tree</code>, such\nthat <code>i1 = i2</code> is false yet <code>inorder i1 = inorder i2</code> is true. The trees <code>i1</code>\nand <code>i2</code> must not have duplicate elements.</p>\n<p><strong>Question 3.</strong> Define two trees <code>p1</code> and <code>p2</code>, both of type <code>char tree</code>, such\nthat <code>p1 = p2</code> is false yet <code>preorder p1 = preorder p2</code> is true. The trees <code>p1</code>\nand <code>p2</code> must not have duplicate elements.</p>\n<p>Thus, the inorder traversal of a tree, alone, does not contain enough\ninformation to reconstruct this tree. Similarly, the preorder traversal alone\ndoes not allow reconstruction.</p>\n<p>Yet, Knuth remarks that if we are given <em>both</em> the inorder traversal and the\npreorder traversal of a tree, (and these lists have no duplicate elements,)\nthen we <em>can</em> reconstruct this tree. This property is somewhat nonobvious:\nperhaps the best way of convincing oneself that it is true is to propose a\nreconstruction algorithm.</p>\n<h2 id=\"Reconstructing-a-Tree-out-of-its-Inorder-and-Preorder-Traversals\">Reconstructing a Tree out of its Inorder and Preorder Traversals</h2>\n\n<p>Here is the challenge!</p>\n<p><strong>Question 4.</strong> Define a function <code>reconstruct</code> of type <code>char list -&gt; char\n  list -&gt; char tree</code> such that, for every tree <code>t</code> (without duplicate\n elements), <code>reconstruct (inorder t) (preorder t)</code> yields <code>t</code>.\n It is permitted to use OCaml&#39;s equality function <code>=</code> to test whether two\n elements are equal. It is also permitted to assume that a certain special\n element, say <code>&#39;$&#39;</code>, does not appear in the tree <code>t</code>.</p>\n<p>We have intentionally stated the challenge in a rather abrupt way,\nwithout indicating how to attack it. We now give a number of hints.\nDo <em>not</em> read all of them straight away! Read them <em>one by one</em> and\nonly after <em>thinking</em> for yourself and <em>trying out</em> various ideas.</p>\n<p><em>Hint.</em> First, try to write a function <code>reconstruct</code> of type <code>char list -&gt;\nchar tree</code> that attempts to reconstruct a tree <code>t</code> based on its preorder\ntraversal alone. Although we know that this is impossible (because the\nfunction <code>preorder</code> is not injective), it is instructive to try this out and\nsee where and why it fails. This failed attempt provides a good first step\ntowards a solution of the challenge.</p>\n<p><em>Hint.</em> Think in terms of the goal. The goal is to construct a tree. Thus, we\nneed to decide whether to construct a leaf or a binary node. In the latter\ncase, we further need to decide what the root element should be, and we need\nto construct the left and right subtrees. What information do we have at hand\nin order to guide these decisions?</p>\n<p><em>Hint.</em> Here is a much more precise hint. Write an auxiliary function\n<code>reconstruct_aux</code> of type <code>char -&gt; char list -&gt; char list -&gt; char tree</code>,\nwhose mission is described as follows:</p>\n<ul><li>Assume that the list <code>xs</code> begins with the inorder traversal of a tree <code>t</code>,\n followed with the element <code>sentinel</code>, possibly itself followed with more\n elements <code>xs&#39;</code>. Assume that the list <code>ys</code> begins with the preorder\n traversal of the tree <code>t</code>, possibly followed with more elements <code>ys&#39;</code>.\n Assume that the lists <code>xs</code> and <code>ys</code> have no duplicate elements. Then,\n <code>reconstruct_aux sentinel xs ys</code> must return\n the triple <code>(t, sentinel :: xs&#39;, ys&#39;)</code>.</li></ul>\n\n<p>Then, use <code>reconstruct_aux</code> to define <code>reconstruct</code> in two lines.</p>\n<h2 id=\"Note\">Note</h2>\n\n<p>If you have ever written a parser before, this exercise may seem familiar. A\nparser is a program that turns a list of symbols into a tree: it is the\ninverse function of a tree printer. Here, the exercise consists in writing an\nunusual kind of parser, which turns a <em>pair</em> of lists of symbols into a tree:\nit is the inverse of the function <code>fun t -&gt; (inorder t, preorder t)</code>.</p>\n<p>To solve this kind of challenge in a systematic manner, some researchers have\nadvocated the use of <em>reversible</em> programming languages, which are restricted\nin such a way that every program naturally has an inverse function.\nUnfortunately, these programming languages are somewhat difficult to work\nwith; still, they are at least an interesting curiosity. See for instance\nthe paper <a href=\"https://doi.org/10.1016/j.ipl.2019.03.002\" target=\"_blank\" rel=\"noopener noreferrer\">Constructing a binary tree from its traversals\nby reversible recursion and iteration</a>,\nby Gl√ºck and Yokoyama (2019), and the references therein.</p>\n"
      ]
    ],
    "prepare": "qU03gN9agpZ61dD4DfE4",
    "test": "",
    "solution": "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",
    "max-score": 5
  },
  null
]