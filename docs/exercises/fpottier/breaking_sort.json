[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Breaking a Sort",
    "stars": 3,
    "backward_exercises": [
      "fpottier/anagrams"
    ]
  },
  {
    "id": "breaking_sort",
    "prelude": "",
    "template": "",
    "descr": [
      [
        "",
        "<h1 id=\"Breaking-a-Sort\">Breaking a Sort</h1>\n\n<p>This exercise is about detecting bugs through black-box testing.</p>\n<p>More specifically, your task is to <strong>detect bugs in sorting algorithms</strong>.</p>\n<p>For simplicity, we restrict our attention to sorting <strong>integer lists</strong>\naccording to the <strong>standard ordering</strong> of integers.</p>\n<p>You are given a list of candidate sorting functions:</p>\n<pre><code>  val sorts: (int list -&gt; int list) list</code></pre>\n\n<p>The catch is, <strong>all of these sorting functions are flawed</strong> in some way.</p>\n<p>It is up to you, in each case, to find a flaw and exhibit an\ninput list that triggers the flaw. We refer to such an input\nas <em>a problematic input</em>.</p>\n<p>Thus, your task is to propose a list of problematic inputs:</p>\n<pre><code>  let inputs : int list option list =\n    ... (* up to you *)</code></pre>\n\n<p>The length of the list <code>inputs</code> should be the length of the list <code>sorts</code>. For\neach sorting function <code>sort</code>, you are expected to propose an input <code>Some xs</code>\nsuch that the function call <code>sort xs</code> does not produce the expected result.\nIf you cannot find an input that triggers a flaw, you can propose <code>None</code>.</p>\n<p>This exercise is graded as follows:</p>\n<ul><li><p>Proposing a problematic input of optimal length yields 5 points.</p>\n</li><li><p>Proposing a problematic input of suboptimal length yields 2 points.</p>\n</li><li><p>Not proposing anything yields 0 points.</p>\n</li><li><p>Proposing an input which turns out not to be problematic yields -5 points.</p>\n</li></ul>\n\n<p>It is permitted to use the standard library <code>List.sort</code>\nas a reference implementation.</p>\n<p><em>Hint.</em> Use a combination of exhaustive testing and random testing. For\ninstance, it is useful to test all input lengths up to a certain bound.\nOn the other hand, as <code>n</code> becomes large, it is infeasible to enumerate\nall lists of length <code>n</code>, even if list elements are picked from a small\ninterval. Therefore, it becomes necessary to pick elements at random.</p>\n<p><em>Hint.</em> Random testing usually leads to discovering problematic inputs\nthat are larger than necessary. Once you have discovered a problematic\ninput, try to <em>shrink</em> it, that is, to make it shorter, while preserving\nthe property of being problematic.</p>\n"
      ]
    ],
    "prepare": "",
    "test": "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",
    "solution": "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",
    "max-score": 361
  },
  null
]