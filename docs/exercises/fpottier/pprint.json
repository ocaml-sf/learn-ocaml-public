[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "A pretty-printer",
    "stars": 3,
    "backward_exercises": [
      "fpottier/persistent_arrays"
    ]
  },
  {
    "id": "pprint",
    "prelude_ml": "(* The type of requirements. *)\n\ntype req =\n  | Infinite\n  | Finite of int (* always nonnegative *)\n\n(* The type of documents. *)\n\ntype doc =\n  | Empty\n  | HardLine\n  | Char of char (* never '\\n' *)\n  | Cat of req * doc * doc\n  | Nest of int * req * doc\n  | Group of req * doc\n  | IfFlat of doc (* never [IfFlat _] *) * doc\n\n(* The internal state of the rendering engine. *)\n\ntype state =\n  {\n    (* The line width. *)\n    width: int;\n    (* The current column. *)\n    mutable column: int;\n    (* The output buffer. *)\n    output: Buffer.t;\n  }\n",
    "template": "(* Addition of requirements. *)\n\nlet (++) (req1 : req) (req2 : req) : req =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* Comparison of requirements. *)\n\nlet (<==) (req1 : req) (req2 : req) : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* Determining the space requirement of a document. *)\n\n(* This function is expected to run in constant time. *)\n\nlet rec requirement (doc : doc) : req =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* Smart constructors. *)\n\nlet empty : doc =\n  Empty\n\nlet hardline : doc =\n  HardLine\n\nlet char (c : char) : doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet (^^) (doc1 : doc) (doc2 : doc) : doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet nest (i : int) (doc : doc) : doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet group (doc : doc) : doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet ifflat (doc1 : doc) (doc2 : doc) : doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet rec render state (indent : int) (flatten : bool) doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet pretty width doc =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n",
    "descr": [
      [
        "",
        "<h1 id=\"A-pretty-printer\">A pretty-printer</h1>\n\n<p>In this problem, we build a slightly scaled-down version of\n<a href=\"https://github.com/fpottier/pprint/\" target=\"_blank\" rel=\"noopener noreferrer\">pprint</a>,\na library that helps display tree-structured data\nas text\nwhose maximum width is fixed (to, say, 80 columns).</p>\n<p>The user of the library describes the data as a <strong>document</strong>, a data type that\ndescribes what should be displayed and several ways in which it could be\ndisplayed. The library renders documents as text according to a fixed set of\nrules.</p>\n<p>Building and rendering a document are intended to\nrequire linear time in the size of the document.</p>\n<h2 id=\"Requirements\">Requirements</h2>\n\n<p>Before we can display a document, we must compute its horizontal space\nrequirement, that is, how much horizontal space this document would\nrequire, if it were displayed on a single line.</p>\n<p>Some documents, however, cannot be displayed on a single line; they require\nseveral lines. We will consider that these documents have an infinite\nhorizontal space requirement.</p>\n<p>Thus, a <strong>requirement</strong> is either <code>Infinite</code> or <code>Finite i</code>,\nwhere <code>i</code> is a nonnegative integer:</p>\n<pre><code>type req =\n  | Infinite\n  | Finite of int</code></pre>\n\n<p><strong>Question 1.</strong> Define a function <code>(++)</code> of type <code>req -&gt; req -&gt; req</code>\nsuch that <code>req1 ++ req2</code> is the addition of the requirements <code>req1</code>\nand <code>req2</code>.</p>\n<p><strong>Question 2.</strong> Define a function <code>(&lt;==)</code> of type <code>req -&gt; req -&gt; bool</code>\nsuch that <code>req1 &lt;== req2</code> is true if and only the requirement <code>req1</code>\nis less than or equal the requirement <code>req2</code>.</p>\n<p>In the following, addition is used to compute the space requirement\nof a composite document, whereas comparison is used to test whether\nthere remains enough space on the current line to display a document.</p>\n<h2 id=\"Documents\">Documents</h2>\n\n<p>The algebraic data type of <strong>documents</strong> is as follows:</p>\n<pre><code>type doc =\n  | Empty\n  | HardLine\n  | Char of char\n  | Cat of req * doc * doc\n  | Nest of int * req * doc\n  | Group of req * doc\n  | IfFlat of doc * doc</code></pre>\n\n<h2 id=\"The-meaning-of-a-document\">The meaning of a document</h2>\n\n<p>A document can be displayed in one of two modes, namely <strong>flattening mode</strong>\nand <strong>normal mode</strong>. When displayed in flattening mode, a document fits on a\nsingle line. When displayed in normal mode, a document can occupy one or more\nlines.</p>\n<p>The appearance of a document is also influenced by the current <strong>indentation\nlevel</strong>, a nonnegative integer <code>n</code>. Every time a new line begins, <code>n</code> spaces\nare printed.</p>\n<p>With these two ideas in mind,\nthe meaning of each document constructor\ncan be described as follows:</p>\n<ul><li><p>The document <code>Empty</code> is empty.</p>\n</li><li><p>The document <code>HardLine</code> imposes a line break,\n followed with <code>n</code> spaces,\n where <code>n</code> is the current indentation level.\n Therefore, this document cannot be displayed on a single line.\n The pretty-printer is designed in such a way\n that this document cannot be encountered when\n the printer is in flattening mode.</p>\n</li><li><p>The document <code>Char c</code> represents a single character, namely <code>c</code>.</p>\n</li><li><p>A composite document of the form <code>Cat (_, doc1, doc2)</code>\n represents the concatenation of the documents <code>doc1</code> and <code>doc2</code>.</p>\n</li><li><p>A document of the form <code>Nest (i, _, doc)</code> represents the document <code>doc</code>,\n inside which the indentation level has been changed from <code>n</code> to <code>n+i</code>.</p>\n</li><li><p>In flattening mode, a document of the form <code>Group (_, doc)</code> is treated like <code>doc</code>.\n In normal mode, the document <code>Group (_, doc)</code> denotes a choice between two\n ways of displaying the document <code>doc</code>. The first alternative is to enter\n flattening mode and display <code>doc</code> on a single line. (Any <code>Group</code> constructors\n inside <code>doc</code> are then ignored.) This alternative is permitted only if <code>doc</code>\n fits on the current line. The second alternative is to ignore this <code>Group</code>\n constructor and display <code>doc</code> in normal mode.</p>\n</li><li><p>The document <code>IfFlat (doc1, doc2)</code> is displayed as <code>doc1</code> in flattening mode\n and as <code>doc2</code> in normal mode.</p>\n</li></ul>\n\n<h2 id=\"Well-formedness-constraints\">Well-formedness constraints</h2>\n\n<p>Documents are subject to the following well-formedness constraints:</p>\n<ul><li><p>In <code>Char c</code>, the character <code>c</code> is never a newline character <code>&#39;\\n&#39;</code>.</p>\n</li><li><p>In <code>IfFlat (doc1, doc2)</code>, the document <code>doc1</code> is never itself <code>IfFlat _</code>.\n That is, <code>IfFlat</code> cannot be nested in the left-hand side of <code>IfFlat</code>.</p>\n</li><li><p>In <code>Cat (req, doc1, doc2)</code>, <code>req</code> is the combined horizontal space\n requirement of <code>doc1</code> and <code>doc2</code>.</p>\n</li><li><p>In <code>Nest (i, req, doc)</code> and in <code>Group (req, doc)</code>,\n <code>req</code> is the horizontal space requirement of <code>doc</code>.</p>\n</li></ul>\n\n<p>As indicated in the last two points above,\nin a well-formed document,\nsome space requirements\nhave been computed ahead of time\nand stored.\n(This computation is the topic of Question 4.)</p>\n<p>The last three points above are designed so as to allow the function\n<code>requirement</code> (below) to have constant time complexity.</p>\n<h2 id=\"Computing-or-fetching-a-space-requirement\">Computing or fetching a space requirement</h2>\n\n<p><strong>Question 3.</strong> Define a function <code>requirement</code> of type <code>doc -&gt; req</code> such that\n<code>requirement doc</code> is the horizontal space requirement of the document <code>doc</code>.\nOne may assume that <code>doc</code> is well-formed. This function must have <strong>constant\ntime complexity</strong>.</p>\n<h2 id=\"Smart-constructors\">Smart constructors</h2>\n\n<p>Allowing the end user to use the data constructors <code>Empty</code>, <code>Char</code>, etc.,\nwould be dangerous, as the user would then be able to build documents that do\nnot respect the well-formedness constraint described above. Furthermore,\nexposing the concrete definition of the algebraic data type <code>doc</code> would limit\nour ability to change this definition in the future.</p>\n<p>For these reasons, we prefer to present <code>doc</code> as an abstract data type to the\nend user. As a result, we must also expose a number of construction functions,\nsometimes known as <em>smart constructors</em>. These functions are designed in such\na way that they always produce well-formed documents.</p>\n<p><strong>Question 4.</strong>\nDefine a smart constructor <code>char</code> of type <code>char -&gt; doc</code>. For every character\n<code>c</code>, including the newline character <code>&#39;\\n&#39;</code>, <code>char c</code> must be a well-formed\ndocument.\nDefine a smart constructor <code>(^^)</code> of type <code>doc -&gt; doc -&gt; doc</code>.\nDefine a smart constructor <code>nest</code> of type <code>int -&gt; doc -&gt; doc</code>.\nDefine a smart constructor <code>group</code> of type <code>doc -&gt; doc</code>.\nDefine a smart constructor <code>ifflat</code> of type <code>doc -&gt; doc -&gt; doc</code>.</p>\n<p>In the previous question, certain optional optimizations are permitted. For\ninstance, <code>(^^)</code> may recognize <code>empty</code> as a neutral element for concatenation.\n<code>nest</code> may recognize that two consecutive <code>Nest</code> constructors can be fused.\n<code>group</code> may recognize that two consecutive <code>Group</code> constructors can be fused.\n<code>ifflat</code> must ensure that <code>IfFlat</code> never appears in the left-hand side of\n<code>IfFlat</code> (this is necessary for its result to be well-formed), and may also\nensure that <code>IfFlat</code> never appears in the right-hand side of <code>IfFlat</code>.</p>\n<h2 id=\"Rendering-a-document\">Rendering a document</h2>\n\n<p>The rendering engine, which transforms a document into a piece of text,\nis implemented by a recursive function <code>render</code>. This function is then\nwrapped in a simpler, non-recursive function, <code>pretty</code>.</p>\n<p>The function <code>render</code> has a <code>state</code> parameter\nwhose type, also named <code>state</code>, is defined as follows:</p>\n<pre><code>type state =\n  {\n    width: int;\n    mutable column: int;\n    output: Buffer.t;\n  }</code></pre>\n\n<p>This record holds the maximum text width (for instance, 80 columns),\nthe current column number, and\n<a href=\"https://caml.inria.fr/pub/docs/manual-ocaml/libref/Buffer.html\" target=\"_blank\" rel=\"noopener noreferrer\">an output buffer</a>.</p>\n<p><strong>Question 5.</strong>\nDefine a recursive function <code>render</code> of type\n<code>state -&gt; int -&gt; bool -&gt; doc -&gt; unit</code>.\nThis function takes four parameters,\nnamely the state <code>state</code>,\nthe current indentation level <code>n</code>,\nthe Boolean flag <code>flatten</code>,\nwhich indicates whether flattening mode is active,\nand a document <code>doc</code>.\nThe purpose of this function is to render the document <code>doc</code>\nas text in the output buffer <code>state.output</code>.\nIn <code>render</code>, it is permitted to assume that\nif <code>flatten</code> is <code>true</code>\nthen the document <code>doc</code> fits on the remainder of the current line.\n(Dually, at every call to <code>render</code>, one must guarantee that\nthis property holds!)\nFinally,\ndefine a function <code>pretty</code> of type <code>int -&gt; doc -&gt; string</code>,\nwhich allocates a new buffer, calls <code>render</code>, and returns\nthe final contents of the buffer.</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAA8sAAADUAAADMQAAAxqgJ1ByZWx1ZGWgwaAjcmVxAQCKCAAAOABAQJGg4KAoSW5maW5pdGUAUpBAQLDACTkuL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvZnBvdHRpZXIvcHByaW50L3ByZWx1ZGUubWxEbG7ABAJEbHhAQKEEEUGg4KAmRmluaXRlAFOQoMCzkKMjaW50QUCQQAIF9eEAQADwQECwwAQRRXl7wAQSRXkASkBAoQQhQkBBQEBAQECwwAQVQ2FhBARAQECgQEChBCVAQUCgwaAjZG9jAQCLCAAAOABAQJGg4KAlRW1wdHkAVZBAQLDABCRKAQCOAQCQwAQlSgEAjgEAl0BAoQQ0RKDgoChIYXJkTGluZQBWkEBAsMAELUsBAJgBAJrABC5LAQCYAQCkQEChBD1FoOCgJENoYXIAV5CgwLOQoyRjaGFyQkCQQAIF9eEAQAD7QECwwAQ9TAEApQEAp8AEPkwBAKUBALVAQKEETUag4KAjQ2F0AFiQoMCzkARTQJBAAgX14QBAAPqgwLOQBDRAkEACBfXhAEAA+aDAswQFQJBAAgX14QBAAPhAQLDABFRNAQDHAQDJwARVTQEAxwEA4UBAoQRkR6DgoCROZXN0AFmQoMCzkARTQJBAAgX14QBAAPegwLMEHECQQAIF9eEAQAD2oMCzBBtAkEACBfXhAEAA9UBAsMAEak4BAOIBAOTABGtOAQDiAQD9QEChBHpIoOCgJUdyb3VwAFqQoMCzBC1AkEACBfXhAEAA9KDAswQsQJBAAgX14QBAAPNAQLDABHtPAQD+AQEAwAR8TwEA/gEBFEBAoQSLSaDgoCZJZkZsYXQAW5CgwLMEOUCQQAIF9eEAQADyoMCzBD1AkEACBfXhAEAA8UBAsMAEjFABARUBARfABI1QAQEVAQFDQEChBJxKQEFAQEBAQLDABJBJAQCDAQCDBARAQEAEe6EEn0NBQKDBoCVzdGF0ZQEAjAgAADgAQECgoOCgJXdpZHRoAF1AwLOQBJJAkEACBfXhAEAA/rDABKFXAQGjAQGnwASiVwEBowEBskBAoQSxTKDgoCZjb2x1bW4AXkHAs5AEnkCQQAIF9eEAQAD9sMAErVkBAdEBAdXABK5ZAQHRAQHpQEChBL1NoOCgJm91dHB1dAEAiUDAs6GhkJImU3RkbGliJkJ1ZmZlciF0QJBAAgX14QBAAPywwAS/WwECBwECC8AEwFsBAgcBAhxAQKEEz05AQEFAQEBAQLDABMNUAQF4AQF4wATEXAECHQECIEBAQASvoQTTS0FAQISVpr4AAAEfAAAAKAAAAJoAAAB7oKAnUHJlbHVkZZAwF+pUos8u3+gRGkVLaqyyj6CgLVN0ZGxpYl9fdWNoYXKQMILa3NkI3eYhuIQslrpkTcagoCtTdGRsaWJfX3NlcZAwGFB1qpmwWa1MrhXLQR/MDKCgLlN0ZGxpYl9fYnVmZmVykDCerysc1w4zYBwVLRzhu4vpoKAmU3RkbGlikDBLBLTtoZqnIt82UUGJX7NHoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAADwAAAAPAAAANQAAADKgJ1ByZXBhcmWgwqAkVE9ETwBVCAAAIACQoyNleG5HQJBAQEGwwCZfbm9uZV9AQAD/BAJBQKEEDkBCQECElaa+AAABOwAAAC0AAACrAAAAiaCgJ1ByZXBhcmWQMCyOah3+H7FJQ/IXJDitYA2goC1TdGRsaWJfX3VjaGFykDCC2tzZCN3mIbiELJa6ZE3GoKArU3RkbGliX19zZXGQMBhQdaqZsFmtTK4Vy0EfzAygoC5TdGRsaWJfX2J1ZmZlcpAwnq8rHNcOM2AcFS0c4buL6aCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgJ1ByZWx1ZGWQMBfqVKLPLt/oERpFS2qsso+goDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQISVpr4AAAAEAAAAAgAAAAUAAAAFoJBAQA==",
      "solution_cmi": "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",
      "test_cmi": "",
      "exercise_lib": {
        "cma": "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",
        "js": "function\ndynload(F){\"use strict\";var\nG={},r=\"./_learn-ocaml-build/exercises/fpottier/pprint/solution.ml\",a=F.jsoo_runtime,p=a.caml_ml_string_length,j=a.caml_register_global,q=a.caml_string_get,i=a.caml_string_of_jsbytes;function\no(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\nk(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}function\nE(b,c,d,e){return b.length==3?b(c,d,e):a.caml_call_gen(b,[c,d,e])}var\nh=a.caml_get_global_data(),n=h.Assert_failure,e=h.Stdlib__buffer,C=h.Stdlib__list;j(5,[0],\"Prelude\");j(6,[0,[248,i(\"Prepare.TODO\"),a.caml_fresh_oo_id(0)]],\"Prepare\");var\ns=[0,0],t=[0,1],z=[0,i(r),94,6],w=[0,i(r),62,2];function\nf(b,a){if(b&&a)return[0,b[1]+a[1]|0];return 0}function\nl(a,b){if(b){var\nc=a?a[1]<=b[1]?1:0:a;return c}return 1}function\nb(c){var\na=c;for(;;){if(typeof\na===\"number\")return 0===a?s:0;else\nswitch(a[0]){case\n0:return t;case\n2:var\nb=a[2];break;case\n4:var\na=a[1];continue;default:var\nb=a[1]}return b}}var\nc=0,u=1;function\nm(a){return 10===a?1:[0,a]}function\nd(c,a){var\ne=0;if(typeof\nc===\"number\"&&!c){var\nd=a;e=1}if(!e){var\ng=0;if(typeof\na===\"number\"&&!a){var\nd=c;g=1}if(!g){var\nh=b(a);return[1,f(b(c),h),c,a]}}return d}function\nv(c,a){if(0<=c){if(typeof\na!==\"number\"&&2===a[0])return[2,c+a[1]|0,a[2],a[3]];return[2,c,b(a),a]}throw[0,n,w]}function\nx(a){if(typeof\na!==\"number\"&&3===a[0])return a;return[3,b(a),a]}function\ny(a,d){var\nc=0;if(typeof\na!==\"number\"&&4===a[0]){var\nb=a[1];c=1}if(!c)var\nb=a;return[4,b,d]}function\ng(b,o,m,j){var\nd=o,c=m,a=j;for(;;)if(typeof\na===\"number\"){if(0===a)return 0;if(c)throw[0,n,z];k(e[10],b[3],10);var\np=1;if(!(d<1)){var\nh=p;for(;;){k(e[10],b[3],32);var\nq=h+1|0;if(d!==h){var\nh=q;continue}break}}b[2]=d;return 0}else\nswitch(a[0]){case\n0:k(e[10],b[3],a[1]);b[2]=b[2]+1|0;return 0;case\n1:g(b,d,c,a[2]);var\na=a[3];continue;case\n2:var\nd=d+a[1]|0,a=a[3];continue;case\n3:if(c)var\ni=c;else\nvar\nr=[0,b[1]],i=l(f([0,b[2]],a[1]),r);var\nc=i,a=a[2];continue;default:var\ns=c?a[1]:a[2],a=s;continue}}function\nA(c,b){var\na=o(e[1],512);g([0,c,0,a],0,0,b);return o(e[2],a)}function\nB(a){return E(C[26],d,a,c)}function\nD(b){function\nc(a){var\nd=a<p(b)?1:0;if(d)var\nf=c(a+1|0),e=[0,q(b,a),f];else\nvar\ne=d;return e}return c(0)}j(10,[0,f,l,b,c,u,m,d,v,x,y,g,A,B,D,function(b){function\ne(a){if(a<p(b)){var\nf=e(a+1|0);return d(m(q(b,a)),f)}return c}return e(0)}],\"Solution\");return G}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(b6){\"use strict\";var\nb7={},ax=\"is incorrect.\",aw=\"%d\",av=\"it produces the following invalid result:\",r=\"req\",au=104,aC=\"A valid result is:\",S=\"Test\",aB=\"seems correct.\",h=\"doc\",az=\"char\",aA=\"./_learn-ocaml-build/exercises/fpottier/pprint/test.ml\",ay=\"int\",at=100,j=b6.jsoo_runtime,A=j.caml_equal,a=j.caml_string_of_jsbytes,b4=j.caml_wrap_exception;function\nc(a,b){return a.length==1?a(b):j.caml_call_gen(a,[b])}function\ne(a,b,c){return a.length==2?a(b,c):j.caml_call_gen(a,[b,c])}function\nb5(a,b,c,d){return a.length==3?a(b,c,d):j.caml_call_gen(a,[b,c,d])}function\nas(a,b,c,d,e){return a.length==4?a(b,c,d,e):j.caml_call_gen(a,[b,c,d,e])}var\ng=j.caml_get_global_data(),aj=[0,[0,[0,0],[0,0]],[0,[0,[0,3],[0,4]],[0,[0,[0,4],[0,3]],[0,[0,[0,4],0],[0,[0,0,[0,4]],[0,[0,0,0],0]]]]]],am=[0,[1,0,0,0],[0,[2,0,0,0],[0,[3,0,0],0]]],V=g.Match_failure,m=g.Stdlib__list,d=g.Solution,t=g.Stdlib__printf,i=g.Stdlib,b=g.Ast_helper,l=g.Ty,n=g.Test_lib,T=g.Stdlib__printexc,ad=g.Learnocaml_internal,B=m[19],L=[248,a(\"Test.Fail\"),j.caml_fresh_oo_id(0)],aJ=[0,a(aA),80,26],aY=[0,97],a$=a(\"Empty\"),ba=a(\"HardLine\"),bb=[0,[11,a(\"Char \"),[2,0,0]],a(\"Char %s\")],bc=a(\"Cat\"),bd=[0,[4,0,0,0,0],a(aw)],be=a(\"Nest\"),bf=a(\"Group\"),bg=a(\"IfFlat\"),bh=a(\"N\"),bY=[0,a(\"string\")],bZ=[0,a(h)],b0=[0,a(ay)],b1=a(\"pretty\"),b2=a(\"Question 5\"),bC=[0,a(h)],bD=[0,a(h)],bE=[0,a(h)],bF=a(\"ifflat\"),bG=[0,a(h)],bH=[0,a(h)],bI=a(\"group\"),bJ=[0,a(h)],bK=[0,a(h)],bL=[0,a(ay)],bM=a(\"nest\"),bN=[0,a(h)],bO=[0,a(h)],bP=[0,a(h)],bQ=a(\"^^\"),bR=[0,97,[0,10,0]],bS=[0,a(h)],bT=[0,a(az)],bU=a(az),bV=a(\"Question 4\"),bx=[0,a(r)],by=[0,a(h)],bz=a(\"requirement\"),bA=a(\"Question 3\"),br=[0,a(\"bool\")],bs=[0,a(r)],bt=[0,a(r)],bu=a(\"<==\"),bv=a(\"Question 2\"),bm=[0,a(r)],bn=[0,a(r)],bo=[0,a(r)],bp=a(\"++\"),bq=a(\"Question 1\"),a4=[0,[11,a(\"Finite \"),[4,0,0,0,0]],a(\"Finite %d\")],a5=a(\"Infinite\"),a2=a(\"true\"),a3=a(\"false\"),a1=[0,[12,39,[2,0,[12,39,0]]],a(\"'%s'\")],aZ=[0,[4,0,0,0,0],a(aw)],aQ=[0,a(aC)],aR=[0,a(av)],aS=[0,a(\"When applied to the following arguments:\")],aT=[0,a(ax)],aU=[0,[0,a(aB)],0],aV=[0,1],aK=[0,a(aC)],aL=[0,a(av)],aM=[0,a(\"When applied to the following argument:\")],aN=[0,a(ax)],aO=[0,[0,a(aB)],0],aP=[0,1],aI=[0,a(aA),71,24],aG=[0,[0,a(\"Not yet implemented.\")],0],aH=[0,a(\"The following exception is raised and never caught:\")],a6=a(r),a7=a(\"learnocaml_autoregister_req_4438D8\"),a8=a(S),bi=a(\"tree\"),bj=a(\"learnocaml_autoregister_tree_5A61C5\"),bk=a(S),bl=g.Stdlib__random,a0=g.Stdlib__char,aF=g.Prepare,aD=m[17];function\ns(b,a){return[0,[0,[0,[0,b],0],a],0]}function\nC(a){throw[0,L,[0,[2,a,0],0]]}function\naE(a){function\nb(a){return C([0,[0,a],0])}return e(t[10],b,a)}function\nM(a){try{var\nd=e(n[80],0,a);return d}catch(a){a=b4(a);if(a[1]===L)return a[2];if(a===aF[1])return[0,[2,aG,0],0];var\nb=[0,[2,c(T[6],0)],0];return[0,[2,[0,aH,[0,0,[0,[2,c(T[1],a)],b]]],0],0]}}function\nU(a){if(typeof\na===\"number\"){if(0===a)return 0}else\nif(1===a[0])throw[0,V,aI];return 1}function\nX(a){return e(m[32],W,a)}function\nW(a){switch(a[0]){case\n0:return X(a[2]);case\n1:throw[0,V,aJ];default:return U(a[2])}}function\nY(d,l,k,j,b,i,a){function\nf(a){var\nf=c(l,a),g=c(k,a),h=1-e(i,f,g);if(h){var\nm=[0,aK,[0,0,[0,[2,c(b,g)],0]]],n=[0,0,[0,aL,[0,0,[0,[2,c(b,f)],m]]]];return C([0,[1,d],[0,aN,[0,0,[0,aM,[0,0,[0,[1,c(j,a)],n]]]]]])}return h}e(m[17],f,a);return[0,[2,[0,[1,d],aO],aP],0]}function\nD(a,h,g,f,d,c,b){function\ni(e){return M(function(h){return Y(a,e,g,f,d,c,b)})}var\nj=e(n[at],h,a);return e(n[au],j,i)}function\nZ(f,p,o,n,l,d,k,a){function\nb(g){var\na=g[2],b=g[1],h=e(p,b,a),i=e(o,b,a),j=1-e(k,h,i);if(j){var\nm=[0,aQ,[0,0,[0,[2,c(d,i)],0]]],q=[0,0,[0,aR,[0,0,[0,[2,c(d,h)],m]]]],r=[0,0,[0,[1,c(l,a)],q]];return C([0,[1,f],[0,aT,[0,0,[0,aS,[0,0,[0,[1,c(n,b)],r]]]]]])}return j}e(m[17],b,a);return[0,[2,[0,[1,f],aU],aV],0]}function\nq(a,i,h,g,f,d,c,b){function\nj(e){return M(function(i){return Z(a,e,h,g,f,d,c,b)})}var\nk=e(n[at],i,a);return e(n[au],k,j)}function\nE(b,a){var\nd=e(m[19],b,a);return c(m[14],d)}function\nN(a,c,b){return a<c?[0,a,N(a+1|0,c,b)]:b}function\naW(b,a){return N(b,a,0)}function\naX(b,a){return E(function(b){return E(function(a){return[0,[0,b,a],0]},a)},b)}function\nO(b,c){var\nd=0;if(!(b<0)){var\na=d;for(;;){e(c,a,b-a|0);var\nf=a+1|0;if(b!==a){var\na=f;continue}break}}return 0}function\nF(b){var\na=[0,0];c(b,function(b){a[1]=[0,b,a[1]];return 0});return c(m[9],a[1])}function\nG(d,b,c){var\nf=0;if(!(b<0)){var\na=f;for(;;){e(d,a,c);var\ng=a+1|0;if(b!==a){var\na=g;continue}break}}return 0}function\nu(o){var\na=o;for(;;){if(typeof\na===\"number\")return 1;else\nswitch(a[0]){case\n0:return 10!==a[1]?1:0;case\n1:var\nh=a[3],i=a[2],j=u(i);if(j){var\nk=u(h);if(k)var\np=c(d[3],h),q=c(d[3],i),r=e(d[1],q,p),b=A(a[1],r);else\nvar\nb=k}else\nvar\nb=j;return b;case\n2:var\nf=a[3],l=a[2];break;case\n3:var\nf=a[2],l=a[1];break;default:var\ng=a[1];if(typeof\ng!==\"number\"&&4===g[0])return 0;var\nn=u(g);if(n){var\na=a[2];continue}return n}var\nm=u(f),s=m?A(l,c(d[3],f)):m;return s}}function\n$(b){var\na=b;for(;;){if(typeof\na!==\"number\"&&4===a[0]){var\na=a[2];continue}return k(a)}}function\n_(b){var\na=b;for(;;){if(typeof\na!==\"number\"&&4===a[0]){var\na=a[1];continue}return k(a)}}function\nk(a){if(typeof\na===\"number\")return 0===a?d[4]:d[5];else\nswitch(a[0]){case\n0:return c(d[6],a[1]);case\n1:var\nb=k(a[3]),f=k(a[2]);return e(d[7],f,b);case\n2:var\ng=k(a[3]);return e(d[8],a[1],g);case\n3:var\nh=k(a[2]);return c(d[9],h);default:var\ni=$(a[2]),j=_(a[1]);return e(d[10],j,i)}}function\naa(b,a){var\nc=k(a);return A(k(b),c)}function\nv(a,c){var\nb=u(a);return b?aa(a,c):b}function\nw(f,a){if(0===f){c(a,0);c(a,1);return c(a,aY)}var\nb=f-1|0;H(b,function(b){return c(a,e(d[7],b[1],b[2]))});w(b,function(b){return c(a,e(d[8],2,b))});w(b,function(b){return c(a,c(d[9],b))});return H(b,function(b){return c(a,e(d[10],b[1],b[2]))})}function\nH(b,a){return O(b,function(d,b){return w(d,function(d){return w(b,function(b){return c(a,[0,d,b])})})})}function\nab(a){return a}function\nI(a){return e(t[4],aZ,a)}function\nP(a){var\nb=c(a0[2],a);return e(t[4],a1,b)}function\nac(a){return a?a2:a3}function\no(a){return a?e(t[4],a4,a[1]):a5}function\nx(a){var\nb=o(a);return c(d[15],b)}as(ad[1],a8,a7,a6,x);var\nQ=e(d[10],d[4],d[5]),a9=d[5],a_=c(d[6],32),ae=e(d[10],a_,a9);function\naf(a){var\nb=e(d[7],ae,a),f=c(d[6],44);return e(d[7],f,b)}function\nag(a){var\nb=e(B,af,a);return c(d[13],b)}function\nah(a){if(a){var\nb=ag(a[2]);return e(d[7],a[1],b)}return d[4]}function\nai(a){var\nb=c(d[6],41),f=e(d[7],Q,b),g=ah(a),h=e(d[7],Q,g),i=e(d[8],2,h),j=e(d[7],i,f),k=c(d[6],40),l=e(d[7],k,j);return c(d[9],l)}function\ny(b,a){var\nf=ai(a),g=c(d[6],32),h=e(d[7],g,f),i=c(d[15],b);return e(d[7],i,h)}function\np(a){if(typeof\na===\"number\")return 0===a?c(d[15],a$):c(d[15],ba);else\nswitch(a[0]){case\n0:var\nb=P(a[1]),f=e(t[4],bb,b);return c(d[15],f);case\n1:var\ng=[0,p(a[3]),0],h=[0,p(a[2]),g];return y(bc,[0,x(a[1]),h]);case\n2:var\ni=[0,p(a[3]),0],j=[0,x(a[2]),i],k=e(t[4],bd,a[1]);return y(be,[0,c(d[15],k),j]);case\n3:var\nl=[0,p(a[2]),0];return y(bf,[0,x(a[1]),l]);default:var\nm=[0,p(a[2]),0];return y(bg,[0,p(a[1]),m])}}function\nf(a){var\nb=p(a);return e(d[12],70,b)}function\nz(a){if(a){var\nb=[0,z(a[3]),0],e=I(a[2]),f=[0,c(d[15],e),b];return y(bh,[0,z(a[1]),f])}return c(d[6],76)}as(ad[1],bk,bj,bi,z);function\nJ(b,a){if(0===b)return c(a,0);var\nd=b-1|0;return O(d,function(d,b){return J(d,function(d){return J(b,function(b){return c(a,[0,d,c(bl[5],10),b])})})})}function\nak(e){var\na=d[1];return s(bq,q(bp,c(l[2],[0,[1,0,[0,[3,[0,bo,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bn,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bm,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),a,o,o,o,A,aj))}function\nal(f){function\na(b,a){return b===a?1:0}var\ne=d[2];return s(bv,q(bu,c(l[2],[0,[1,0,[0,[3,[0,bt,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bs,b[1][1]],0],b[1][1],0,0],[0,[3,[0,br,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,o,o,ac,a,aj))}var\nbw=1,K=F(function(a){return G(w,bw,a)});function\nan(h){var\na=e(i[37],K,am),g=d[3];return s(bA,D(bz,c(l[2],[0,[1,0,[0,[3,[0,by,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bx,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),g,f,o,A,a))}var\nbB=2,R=F(function(a){return G(H,bB,a)});function\nao(z){var\na=d[10],g=q(bF,c(l[2],[0,[1,0,[0,[3,[0,bE,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bD,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bC,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),a,f,f,f,v,R),h=e(i[37],g,0),j=d[9],k=D(bI,c(l[2],[0,[1,0,[0,[3,[0,bH,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bG,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),j,f,f,v,K),m=e(i[37],k,h),n=e(B,function(a){return[0,2,a]},K),o=d[8],p=q(bM,c(l[2],[0,[1,0,[0,[3,[0,bL,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bK,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bJ,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),o,I,f,f,v,n),r=e(i[37],p,m),t=d[7],u=q(bQ,c(l[2],[0,[1,0,[0,[3,[0,bP,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bO,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bN,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),t,f,f,f,v,R),w=e(i[37],u,r),x=d[6],y=D(bU,c(l[2],[0,[1,0,[0,[3,[0,bT,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bS,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),x,P,f,v,bR);return s(bV,e(i[37],y,w))}var\nbW=5,bX=e(B,z,F(function(a){return G(J,bW,a)})),ap=E(function(a){return[0,[0,8,a],[0,[0,16,a],0]]},bX);function\naq(e){var\na=d[12];return s(b2,q(b1,c(l[2],[0,[1,0,[0,[3,[0,b0,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,bZ,b[1][1]],0],b[1][1],0,0],[0,[3,[0,bY,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),a,I,f,ab,j.caml_string_equal,ap))}function\nar(l){var\na=aq(0),b=e(i[37],a,0),c=ao(0),d=e(i[37],c,b),f=an(0),g=e(i[37],f,d),h=al(0),j=e(i[37],h,g),k=ak(0);return e(i[37],k,j)}var\nb3=b5(n[26],0,n[109][2],ar);c(n[1],b3);j.caml_register_global(93,[0,aD,B,L,s,C,aE,M,U,W,X,Y,D,Z,q,E,N,aW,aX,O,F,G,u,k,_,$,aa,v,w,H,ab,I,P,ac,o,x,x,Q,ae,af,ag,ah,ai,y,p,f,z,z,J,ak,al,K,am,an,R,ao,ap,aq,ar],S);return b7}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 9
  },
  null
]