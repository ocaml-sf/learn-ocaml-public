[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Building a Game Tree",
    "stars": 3,
    "backward_exercises": [
      "fpottier/symbolic_sequences_objects"
    ]
  },
  {
    "id": "tictactoe",
    "prelude_ml": "(* The type of on-demand sequences. (As of OCaml 4.07, this type exists\n   in the standard library.) *)\n\nmodule Seq = struct\n\n  type 'a t = unit -> 'a node\n\n  and +'a node =\n  | Nil\n  | Cons of 'a * 'a t\n\n  let nil () =\n    Nil\n\n  (* A word of warning: [length] does not terminate if it is applied\n     to an infinite sequence. *)\n\n  let rec length accu (xs : 'a t) : int =\n    match xs() with\n    | Nil ->\n        accu\n    | Cons (_, xs) ->\n        length (accu + 1) xs\n\n  let length xs =\n    length 0 xs\n\n  let rec map (f : 'a -> 'b) (xs : 'a t) : 'b t =\n    fun () ->\n      match xs() with\n      | Nil ->\n          Nil\n      | Cons (x, xs) ->\n          Cons (f x, map f xs)\n\n  let rec filter (p : 'a -> bool) (xs : 'a t) : 'a t =\n    fun () ->\n      match xs() with\n      | Nil ->\n          Nil\n      | Cons (x, xs) ->\n          if p x then\n            Cons (x, filter p xs)\n          else\n            filter p xs ()\n\n  let rec assoc (a : 'a) (abs : ('a * 'b) t) : 'b =\n    match abs() with\n    | Nil ->\n        raise Not_found\n    | Cons ((a', b), abs) ->\n        if a = a' then\n          b\n        else\n          assoc a abs\n\n  let rec of_list (xs : 'a list) : 'a t =\n    fun () ->\n      match xs with\n      | [] ->\n          Nil\n      | x :: xs ->\n          Cons (x, of_list xs)\n\n  let rec to_list (xs : 'a t) : 'a list =\n    match xs() with\n    | Nil ->\n        []\n    | Cons (x, xs) ->\n        x :: to_list xs\n\n  let rec interval i j : int t =\n    if i < j then\n      fun () ->\n        Cons (i, interval (i+1) j)\n    else\n      nil\n\nend\n\n(* -------------------------------------------------------------------------- *)\n\n(* A value is an integer value that reflects the current player view (or\n   evaluation) of the current game configuration. In a zero-sum game, the\n   opponent's view is the opposite of the current player's view, and the\n   value 0 means that both players are even; in particular, in a situation\n   where no more moves can be played, the value 0 represents a draw. *)\n\ntype value =\n  int\n\n(* All of the values that we consider lie in the range [bottom] to [top],\n   inclusive. Note that [bottom] is the opposite of [top]. *)\n\nlet bottom, top =\n  -max_int, max_int\n\n(* We assume that, in every game configuration, a finite number of moves\n   are permitted, and that each of these moves can be identified with an\n   integer code. (A more realistic implementation would be parametric in\n   the type [move].) *)\n\ntype move =\n  int\n\n(* A game tree is either a leaf or not a leaf. A leaf [TLeaf v] means that the\n   game is over and that its value (in the eyes of the current player) is [v].\n   A nonleaf [TNonLeaf mts] means that the game is not over. In that case, at\n   least one move is permitted. The sequence [mts] is then a nonempty sequence\n   of pairs of a permitted move [m] and the subtree that corresponds to this\n   move. This sequence covers all of the permitted moves. *)\n\ntype tree =\n  | TLeaf of value\n  | TNonLeaf of offspring\n\nand offspring =\n  (move * tree) Seq.t\n\n(* [descendant path tree] extracts the subtree found at path [path] in the\n   tree [tree]. A path is a list of moves. The exception [Not_found] is raised\n   if this path does not exist in this tree. *)\n\nlet rec descendant (path : move list) (tree : tree) : tree =\n  match path, tree with\n  | [], _ ->\n      (* The path is empty. *)\n      tree\n  | _ :: _, TLeaf _ ->\n      (* This path does not exist. *)\n      raise Not_found\n  | move :: path, TNonLeaf offspring ->\n      descendant path (Seq.assoc move offspring)\n\n(* -------------------------------------------------------------------------- *)\n\n(* A bitmap is an OCaml machine word (in other words, an OCaml integer) whose\n   bits represent an array of 63 Boolean values. (An OCaml machine word is 63\n   bits wide.) *)\n\ntype bitmap =\n  int\n\n(* An offset is the number of a bit within a machine word. By convention, the\n   least significant bit is numbered 0, while the most significant bit is\n   numbered 62. *)\n\ntype offset =\n  int\n\n(* A direction is a function of [w] and [h] to an offset. *)\n\ntype direction =\n  int -> int -> offset\n\n(* -------------------------------------------------------------------------- *)\n\n(* In a [(w, h, k)] board game, the parameters [w] and [h] are the width and\n   height of the board, while the parameter [k] is the number of consecutive\n   aligned marks that a player must achieve in order to win. In the standard\n   game of Tic-Tac-Toe, all three parameters are equal to 3. *)\n\n(* The parameters [w], [h], [k] remain of course fixed throughout an entire\n   game. We nevertheless record them as part of the game state because this\n   is convenient. *)\n\n(* The bitmap [player_bitmap] stores the marks of the player who is currently\n   up, while the bitmap [opponent_bitmap] stores the marks of his opponent. *)\n\n(* The integer field [past_moves] is the number of moves that have been played\n   already. This field is redundant, as its value can be recovered by counting\n   how many bits are set in the bitmaps [player_bitmap] and [opponent_bitmap].\n   We nevertheless include this field because it is convenient. *)\n\ntype state = {\n  w: int; h: int; k: int;\n  player_bitmap: bitmap;\n  opponent_bitmap: bitmap;\n  past_moves: int;\n}\n",
    "template": "(* -------------------------------------------------------------------------- *)\n\n(* Accessing and updating a bitmap, one bit at a time. *)\n\nlet encode w h i j : offset =\n  assert (0 <= i && i <= w);\n  assert (0 <= j && j <= h);\n  (h + 1) * i + j\n\nlet decode w h (o : offset) : int * int =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet mask w h i j : bitmap =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet read w h (bitmap : bitmap) i j : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet update w h (bitmap : bitmap) i j : bitmap =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* -------------------------------------------------------------------------- *)\n\n(* Finding out whether a bitmap contains an alignment of [k] marks. *)\n\nlet north w h : offset =\n  1\n\nlet east w h : offset =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet northeast w h : offset =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet southeast w h : offset =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet rec alignments w h k direction bitmap : bitmap =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet has_alignment w h k bitmap : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* -------------------------------------------------------------------------- *)\n\n(* Working with the game states of Tic-Tac-Toe. *)\n\n(* The initial game state. *)\n\nlet initial w h k : state =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* [square_is_available state (i, j)] indicates whether the square at (i, j)\n   is part of the board (that is, not part of the extra row and column that\n   we have added) and is empty, that is, marked by neither player. *)\n\nlet square_is_available state (i, j) : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* Assuming that the square at (i, j) is available, [play state i j] is\n   the new game state after the current player plays in this square. *)\n\nlet play state i j : state =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* [no_square_is_available state] returns [true] if no square is\n   available (which implies that no move can be played). *)\n\nlet no_square_is_available state : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* [opponent_has_won state] returns [true] if the opponent (that is,\n   the player who is currently *not* up) has an alignment. *)\n\nlet opponent_has_won state : bool =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* [tree state] returns the game tree whose root corresponds to the game\n   state [state]. *)\n\n(* Assuming that at least one move is permitted in the game state [state],\n   [offspring state] returns the sequence of permitted moves and subtrees in\n   this state. Each element of the sequence must be a pair [(move, subtree)]\n   of a permitted move and a subtree. The integer value [move] must be exactly\n   [encode w h i j], where [i] and [j] indicate which square is being played.\n   The subtree [subtree] must be the game tree that arises out of the game\n   state obtained by playing this move. *)\n\nlet rec tree (state : state) : tree =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nand offspring (state : state) : offspring =\n  (* TO DO: Define this function. *)\n  raise TODO\n",
    "descr": [
      [
        "",
        "<h1 id=\"Building-a-Game-Tree\">Building a Game Tree</h1>\n\n<p>In this exercise, we build a <strong>game tree</strong> for the game of\n<a href=\"https://en.wikipedia.org/wiki/Tic-tac-toe\" target=\"_blank\" rel=\"noopener noreferrer\">Tic-Tac-Toe</a>.\nThis allows us to use the Alpha-Beta algorithm (developed in a\n<a onclick=\"top.location='/exercises/alpha_beta/';\" href=''>companion\nexercise</a>) to evaluate this tree and construct an optimal playing\nstrategy.</p>\n<p>In the original game of Tic-Tac-Toe, the players use a board of width 3 and\nheight 3, and the first player who aligns 3 marks (horizontally, vertically,\nor diagonally) wins. We generalize the game as follows: the game is played on\na board of width <code>w</code> and height <code>h</code>, and a winning <strong>alignment</strong> is a series\nof <code>k</code> consecutive marks on a row, a column, or a diagonal.</p>\n<p>In the first part of this exercise, we momentarily set aside the game of\nTic-Tac-Toe and concentrate on representing a game board as a bitmap. In the\nsecond part of this exercise, we come back to Tic-Tac-Toe, choose a\nrepresentation of the game state, and build a game tree.</p>\n<h2 id=\"Representing-a-Game-Board-as-a-Bitmap\">Representing a Game Board as a Bitmap</h2>\n\n<p>We are interested in representing in memory a game board whose width is <code>w</code>\nand whose height is <code>h</code>. We suppose, for now, that there is only one kind of\nmark, so that each square on the board is either empty or marked. A board is\nthen a two-dimensional Boolean matrix whose dimensions are <code>w</code> and <code>h</code>.</p>\n<p>One could represent such a matrix in memory as an array of Booleans whose size\nis <code>w * h</code>. However, that would be quite costly.\nBecause every OCaml value occupies one word of memory,\nan array of <code>w * h</code> Boolean values occupies\n<code>w * h</code> words of memory.\nOn a modern machine, one word is 64 bits.\nThus, this representation is 64 times less compact than it could be!\nThis entails a waste of space\nand (therefore) a waste of time.</p>\n<p>For these reasons, we prefer to pack this matrix into a single <strong>integer</strong>\nvalue, so that each entry in the matrix is represented by <strong>one bit</strong>. We\nrefer to this representation as a <strong>bitmap</strong>, and define the type <code>bitmap</code>\nas a synonym for <code>int</code>. Quite obviously, this\nrepresentation is much more compact than an OCaml array of Booleans.\nFurthermore, it opens the door to the use of <strong>bit-level parallelism</strong>, that\nis, the use of machine instructions that operate on all bits at once. This is\nuseful in the implementation of certain operations, such as the detection of\nan alignment.</p>\n<p>In order to facilitate the detection of an alignment, it is\nconvenient to leave an empty row on top of the matrix and an empty column on\nits right-hand side. Therefore, a matrix whose dimensions are <code>w + 1</code> and <code>h +\n1</code> is required.</p>\n<p>As long as the product <code>(w + 1) * (h + 1)</code> is strictly less than the word size\n(that is, 64), such a matrix can be represented as a bitmap within a single\nOCaml integer value.</p>\n<p>By convention, the bits in an OCaml integer value are numbered from <code>0</code>\n(included) to <code>63</code> (excluded). The least significant bit is numbered 0.</p>\n<p>We adopt the convention that the board square whose coordinates are <code>i</code> and\n<code>j</code> is encoded by the bit whose number is <code>(h + 1) * i + j</code>. Here, <code>i</code> is a\ncolumn index, and ranges from <code>0</code> (included) to <code>w</code> (included), while <code>j</code> is a\nrow index and ranges from <code>0</code> (included) to <code>h</code> (included).</p>\n<p>The function <code>encode</code>, which we have defined for you, converts a pair of\nindices <code>i</code> and <code>j</code> to an <strong>offset</strong>, that is, a bit number. The expression\n<code>encode w h i j</code> is synonymous with <code>(h + 1) * i + j</code>. The type <code>offset</code> is\na synonym for <code>int</code>.</p>\n<p>According to this convention, a 3x3 board occupies 16 bits,\nand is represented as follows:</p>\n<pre><code>   .  .  . .\n   2  6 10 .\n   1  5  9 .\n   0  4  8 .</code></pre>\n\n<p>This drawing means that the bits 0, 1, 2 encode the leftmost column;\nthe bits 4, 5, 6 encode the central column; and\nthe bits 8, 9, 10 encode the rightmost column.\nBy convention, the bits 3, 7, 11, 12, 13, 14, 15\nencode the extra empty row and column mentioned above;\ntheir value is always zero.</p>\n<p>Thus, a 3x3 board where every square is marked is represented by the bitmap\n<code>0000011101110111</code>, that is, the integer value <code>0b0000011101110111</code>, which in\ndecimal notation is written <code>1911</code>. A 3x3 board where only the leftmost column\nis marked is represented by the bitmap <code>0000000000000111</code>, that is, by the\ninteger 7. A board where only the bottom row is marked is represented by the\nbitmap <code>0000000100010001</code>, that is, by the integer 273. An empty board is\nrepresented by the bitmap <code>0000000000000000</code>, that is, by the integer 0.</p>\n<p>For convenience, we provide a function <code>bitmap</code> of type <code>int -&gt; int -&gt; string\n-&gt; bitmap</code> such that <code>bitmap w h</code> converts a string representation of a bitmap\nto an actual bitmap. The string must contain <code>(w + 1) * (h + 1)</code> characters,\neach of which must be <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>. (Additional whitespace characters can be\npresent, and are ignored. The character <code>&#39;.&#39;</code> is interpreted as <code>&#39;0&#39;</code>.) Thus,\na 3x3 board where every square is marked can be obtained as follows:</p>\n<pre><code>  bitmap 3 3 &quot;\n    ....\n    111.\n    111.\n    111.\n  &quot;</code></pre>\n\n<p>You can use the Toplevel pane to check that this expression produces the value\n<code>1911</code>, as expected. You do <em>not</em> need to use the function <code>bitmap</code> in your\ncode. The function <code>bitmap</code> can appear in the messages produced by the\nautomatic grading system for this exercise.</p>\n<p>In the text so far, we have distinguished between a board (an abstract object\nthat we have in mind) and a bitmap (a representation of this object in\nmemory), and we have repeatedly written that a bitmap <em>represents</em> a board. In\nthe following, however, maintaining this careful distinction would lead us to\nwrite rather convoluted sentences, so we abandon this distinction and use the\nwords &quot;bitmap&quot; and &quot;board&quot; interchangeably.</p>\n<p><strong>Question 1.</strong> Define a function <code>decode</code> of type <code>int -&gt; int -&gt; offset -&gt;\nint * int</code> such that <code>decode w h</code> is the inverse of <code>encode w h</code>, that is,\n<code>decode w h</code> maps an offset back to a pair of a column index <code>i</code> and a row\nindex <code>j</code>.</p>\n<p><strong>Question 2.</strong> Define a function <code>mask</code> of type <code>int -&gt; int -&gt; int -&gt; int -&gt;\n  bitmap</code> such that, in the board <code>mask w h i j</code>, the square at <code>(i, j)</code> is\n marked, and every other square is unmarked.</p>\n<p><em>Hint.</em> For instance, in the board <code>mask 3 3 1 1</code>, only the square at (1, 1)\nmust be marked. According to the above drawing, the square at (1, 1) is\nrepresented by the bit number 5, so <code>mask 3 3 1 1</code> should yield the integer\nvalue <code>0b0000000000100000</code>, or in other words, the integer value 32.</p>\n<p><em>Hint.</em> Use <code>encode</code> and the\n<em><a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#Logical_shift\" target=\"_blank\" rel=\"noopener noreferrer\">logical shift left</a></em> operator <code>lsl</code>.</p>\n<p><strong>Question 3.</strong> Define a function <code>read</code> of type <code>int -&gt; int -&gt; bitmap -&gt; int\n-&gt; int -&gt; bool</code> such that <code>read w h bitmap i j</code> is <code>true</code> and if only if the\nsquare at <code>(i, j)</code> is marked in the board <code>bitmap</code>.</p>\n<p><em>Hint.</em> Use <code>mask</code> and the\n<em><a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#AND\" target=\"_blank\" rel=\"noopener noreferrer\">logical and</a></em> operator <code>land</code>.</p>\n<p><strong>Question 4.</strong> Define a function <code>update</code> of type <code>int -&gt; int -&gt; bitmap -&gt;\nint -&gt; int -&gt; bitmap</code> such that the board <code>update w h bitmap i j</code> is marked\nat <code>(i, j)</code> and is identical to the board <code>bitmap</code> elsewhere.</p>\n<p><em>Hint.</em> Use <code>mask</code> and the\n<em><a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#OR\" target=\"_blank\" rel=\"noopener noreferrer\">logical or</a></em> operator <code>lor</code>.</p>\n<p>Recall that a <code>k</code>-<strong>alignment</strong> is a series of <code>k</code> consecutive marks along a\nrow, a column, or a diagonal.</p>\n<p>There exist four kinds of alignments. In other words, there are four\n<strong>directions</strong> along which an alignment can exist: <em>north</em>, <em>east</em>,\n<em>northeast</em>, and <em>southeast</em>. (We make an arbitrary choice between\n<em>north</em> and <em>south</em>, as there is no need to consider both; similarly\nfor the other directions.)</p>\n<p>Each direction can be represented by a positive <em>offset</em>. Indeed, recall how a\n3x3 board is represented:</p>\n<pre><code>   .  .  . .\n   2  6 10 .\n   1  5  9 .\n   0  4  8 .</code></pre>\n\n<p>Adding 1 to a bit number corresponds to taking one step towards the north.\nThus, the direction <em>north</em> is represented by the offset 1. For this reason,\nwe define the auxiliary function <code>north</code> by <code>north w h = 1</code>.</p>\n<p><strong>Question 5.</strong> Define the auxiliary functions <code>east</code>, <code>northeast</code>, and\n<code>southeast</code> in a similar manner.</p>\n<p>We wish to be able to efficiently detect the existence of an alignment\nanywhere on the board. Fortunately, bit-level parallelism is our friend: the\nbitwise operations (<code>lsr</code>, <code>lsl</code>, <code>land</code>, <code>lor</code>, <code>=</code>, etc.) operate on all\nbits at once, and are extremely cheap. It turns out that, with a small number\nof such operations, one can detect the presence of an alignment anywhere on\nthe board.</p>\n<p>The idea is as follows:</p>\n<ul><li><p>The board, which we know, is the set of all squares\n such that there is a mark on this square.</p>\n</li><li><p>In <em>one</em> well-chosen bitwise operation, one can compute the set\n of all squares\n such that there is a mark to the north of this square.</p>\n</li><li><p>In <em>one more</em> well-chosen bitwise operation, one can combine the\n above two bitmaps and compute the set of all squares\n such that there is a mark on this square\n and a mark to the north of this square.\n In other words, this is the set of all squares such that there is a\n northern 2-alignment that begins at this square.</p>\n</li><li><p>In just <em>two more</em> bitwise operations,\n one can compute the set of all northern 4-alignments.</p>\n</li><li><p>This process can be generalized to any\n value of <code>k</code> and to any of the four directions.</p>\n</li></ul>\n\n<p>We define the type <code>direction</code> as a synonym for <code>int -&gt; int -&gt; offset</code>,\nso the functions <code>north</code>, <code>east</code>, <code>northeast</code> and <code>southeast</code> have type\n<code>direction</code>.</p>\n<p><strong>Question 6.</strong> Define a function <code>alignments</code> of type\n<code>int -&gt; int -&gt; int -&gt; direction -&gt; bitmap -&gt; bitmap</code>\nsuch that <code>alignments w h k direction bitmap</code>\nis the set of all squares such that there is a <code>k</code>-alignment\nalong <code>direction</code> that begins on this square.</p>\n<p><em>Hint.</em> Give a recursive definition of <code>alignments</code>. The base case can be 0\nor 1. The recursive structure can be chosen so that the runtime complexity of\n<code>alignments</code> is O(<em>log</em> k).</p>\n<p><strong>Question 7.</strong> Define a function <code>has_alignment</code> of type\n<code>int -&gt; int -&gt; int -&gt; bitmap -&gt; bool</code>\nsuch that <code>has_alignment w h k bitmap</code> is <code>true</code> if and only if\nthere exists a <code>k</code>-alignment, along any of the four directions,\nanywhere on the board.</p>\n<h2 id=\"Representing-the-Game-State-of-Tic-Tac-Toe\">Representing the Game State of Tic-Tac-Toe</h2>\n\n<p>In a <a href=\"https://en.wikipedia.org/wiki/M,n,k-game\" target=\"_blank\" rel=\"noopener noreferrer\">(w, h, k)-game</a>, the\nparameters <code>w</code> and <code>h</code> are the width and height of the board, while the\nparameter <code>k</code> is the size of an alignment that a player must achieve in order\nto win. The parameters <code>w</code>, <code>h</code>, <code>k</code> remain fixed throughout an entire game.\nIn the game of Tic-Tac-Toe, they are equal to 3.</p>\n<p>We represent a game state in OCaml as a record with the following fields:</p>\n<pre><code>  type state = {\n    w: int; h: int; k: int;\n    player_bitmap: bitmap;\n    opponent_bitmap: bitmap;\n    past_moves: int;\n  }</code></pre>\n\n<p>The current state of the board is represented by <em>two bitmaps</em>. The bitmap\n<code>player_bitmap</code> stores the marks of the player who is currently up, while the\nbitmap <code>opponent_bitmap</code> stores the marks of his opponent.</p>\n<p>The integer field <code>past_moves</code> stores the number of moves that have been\nplayed. This field is redundant, as its value can be recovered by counting how\nmany bits are set in the bitmaps <code>player_bitmap</code> and <code>opponent_bitmap</code>.\nNevertheless, it is convenient to have this field: this removes the need for\nan efficient implementation of the &quot;bit count&quot; operation.</p>\n<p>It is now up to you to write a number of simple auxiliary functions that\noperate on game states, namely <code>initial</code>, <code>square_is_available</code>, <code>play</code>,\n<code>no_square_is_available</code>, and <code>opponent_has_won</code>. (No automatic grading\nis performed at this stage.) Then, you can move on to the final question:</p>\n<p><strong>Question 8.</strong> Define a function <code>tree</code> of type <code>state -&gt; tree</code>\nsuch that <code>tree state</code> is the game tree associated with\nthe game state <code>state</code>.</p>\n<p><em>Note.</em> The definition of a game tree is explained in the\n<a onclick=\"top.location='/exercises/alpha_beta/';\" href=''>companion\nexercise</a>\non the Alpha-Beta algorithm.</p>\n<p><em>Hint.</em> In a game tree, the value of a leaf is always relative to the player\nwho is currently up. This value should be +1 if this player has won, 0 if the\ngame is a draw, and -1 if this player has lost.</p>\n<p><em>Hint.</em> In Tic-Tac-Toe, as in many common games, there cannot be a leaf whose\nvalue is +1. That would mean that our opponent has just played, yet we have\nwon. This is impossible: no move can cause a player to lose immediately.</p>\n<p><em>Hint.</em> The functions <code>Seq.interval</code>, <code>Seq.filter</code>, and <code>Seq.map</code> can be\n helpful in the construction of a sequence of permitted moves.</p>\n<h2 id=\"To-Go-Further\">To Go Further</h2>\n\n<p>If you have completed both this exercise and its <a onclick=\"top.location='/exercises/alpha_beta/';\" href=''>companion exercise</a> on the\nAlpha-Beta algorithm,\nthen we recommend combining them to solve Tic-Tac-Toe.\nYou can verify that, if both players play perfectly,\nthen the game must end in a draw.\nAlthough the game tree for Tic-Tac-Toe has size 549946,\nthe Alpha-Beta algorithm evaluates it in a fraction of a second.\n(The algorithm builds and explores only part of the tree.)</p>\n<p>To explore larger values of <code>w</code>, <code>h</code>, and <code>k</code>, such as (4, 4, 4),\nit is necessary to improve the Alpha-Beta algorithm; in particular,\na <a href=\"https://en.wikipedia.org/wiki/Transposition_table\" target=\"_blank\" rel=\"noopener noreferrer\">transposition table</a> is required.</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "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",
      "prepare_cmi": "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",
      "solution_cmi": "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",
      "test_cmi": "",
      "exercise_lib": {
        "cma": "",
        "js": "function\ndynload(an){\"use strict\";var\nao={},s=\"./_learn-ocaml-build/exercises/fpottier/tictactoe/solution.ml\",W=\"bitmap\",r=\"./_learn-ocaml-build/exercises/fpottier/tictactoe/prepare.ml\",a=an.jsoo_runtime,g=a.caml_mul,q=a.caml_register_global,d=a.caml_string_of_jsbytes;function\nb(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\nc(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}function\nV(b,c,d,e){return b.length==3?b(c,d,e):a.caml_call_gen(b,[c,d,e])}function\nam(b,c,d,e,f){return b.length==4?b(c,d,e,f):a.caml_call_gen(b,[c,d,e,f])}var\np=a.caml_get_global_data(),h=p.Stdlib,e=p.Stdlib__list,j=p.Assert_failure,ae=d(W),ad=d(W),af=[0,d(r),83,4],ac=[0,d(r),51,4],ab=[0,d(r),52,4],$=d(\"Prepare.TODO\"),aj=[0,-1],ak=[0,d(s),139,4],al=[0,0],ah=[0,d(s),6,2],ag=[0,d(s),7,2];function\nt(a){return 0}function\nX(e){var\na=0,c=e;for(;;){var\nd=b(c,0);if(d){var\na=a+1|0,c=d[2];continue}return a}}function\nu(c,e,h){var\na=b(e,0);if(a)var\nf=a[2],g=function(a){return u(c,f,a)},d=[0,b(c,a[1]),g];else\nvar\nd=a;return d}function\nv(c,g,h){var\nd=g;for(;;){var\na=b(d,0);if(a){var\ne=a[2],f=a[1];if(b(c,f))return[0,f,function(a){return v(c,e,a)}];var\nd=e;continue}return a}}function\nY(g,f){var\nd=f;for(;;){var\nc=b(d,0);if(c){var\ne=c[1];if(a.caml_equal(g,e[1]))return e[2];var\nd=c[2];continue}throw h[8]}}function\nw(a,e){if(a)var\nc=a[2],d=function(a){return w(c,a)},b=[0,a[1],d];else\nvar\nb=a;return b}function\nx(d){var\na=b(d,0);if(a)var\ne=x(a[2]),c=[0,a[1],e];else\nvar\nc=a;return c}function\ny(a,b){return a<b?function(c){return[0,a,y(a+1|0,b)]}:t}var\ni=[0,t,X,u,v,Y,w,x,y],Z=h[19],_=-h[19]|0;q(12,[0,i,_,Z,function(e,d){var\nb=e,a=d;for(;;){if(b){if(0===a[0])throw h[8];var\nf=c(i[5],b[1],a[1]),b=b[2],a=f;continue}return a}}],\"Prelude\");var\naa=[248,$,a.caml_fresh_oo_id(0)];function\nk(a,b){var\nc=a<b?1:0,d=c?[0,a,k(a+1|0,b)]:c;return d}function\nz(c,a){var\nd=k(c,a);return b(e[9],d)}function\nA(d,b,a){var\nf=0;function\ng(f,d){function\ng(d,b){return[0,c(a,f,d),b]}return V(e[26],g,b,d)}return V(e[26],g,d,f)}function\nB(c){var\ne=a.caml_ml_string_length(c);function\nd(b){if(b===e)return 0;var\nf=d(b+1|0);return[0,a.caml_string_get(c,b),f]}return d(0)}function\nC(b,a){function\nc(b,a){return[0,a,b]}var\nd=k(0,b+1|0);return A(z(0,a+1|0),d,c)}function\nD(d,c,b,a){if(0<=b&&b<=d){if(0<=a&&a<=c)return g(c+1|0,b)+a|0;throw[0,j,ab]}throw[0,j,ac]}function\nE(d,c,b,a){return 1<<D(d,c,b,a)}function\nF(e,d,c,b,a){return c|E(e,d,b,a)}function\nG(c){var\na=c-9|0,b=0;if(4<a>>>0){if(23===a)b=1}else\nif(1<a-2>>>0)b=1;return b?0:1}var\nH=[0,k,z,A,B,C,D,E,F,G,function(f,d,l){var\na=g(f+1|0,d+1|0),m=B(l),i=c(e[41],G,m);if(b(e[1],i)!==a)b(h[1],ad);var\nk=C(f,d);if(b(e[1],k)===a){var\nn=0,o=function(g,a,e){var\nc=0;if(47<=a){if(!(50<=a))switch(a-47|0){case\n2:return F(f,d,g,e[1],e[2]);case\n0:break;default:c=1}}else\nif(46<=a)c=1;return c?g:b(h[1],ae)};return am(e[30],o,n,i,k)}throw[0,j,af]}];q(15,[0,aa,H,H[10]],\"Prepare\");function\nl(d,c,b,a){if(0<=b&&b<=d){if(0<=a&&a<=c)return g(c+1|0,b)+a|0;throw[0,j,ag]}throw[0,j,ah]}function\nI(e,c,b){var\nd=a.caml_mod(b,c+1|0);return[0,a.caml_div(b,c+1|0),d]}function\nm(d,c,b,a){return 1<<l(d,c,b,a)}function\nn(e,d,c,b,a){return 0!==(c&m(e,d,b,a))?1:0}function\nJ(e,d,c,b,a){return c|m(e,d,b,a)}function\nK(b,a){return 1}function\nL(b,a){return a+1|0}function\nM(b,a){return a+2|0}function\nN(b,a){return a}function\nf(h,e,d,b,a){if(1===d)return a;if(2===d)return a&(a>>>c(b,h,e)|0);if(0===(d%2|0)){var\ni=d/2|0,j=f(h,e,i,b,a);return j&(j>>>g(i,c(b,h,e))|0)}var\nk=d-1|0,l=f(h,e,k,b,a);return l&(a>>>g(k,c(b,h,e))|0)}function\no(d,c,b,a){var\ng=0!==f(d,c,b,K,a)?1:0;if(g)var\ne=g;else{var\nh=0!==f(d,c,b,L,a)?1:0;if(h)var\ne=h;else\nvar\ni=0!==f(d,c,b,M,a)?1:0,e=i||(0!==f(d,c,b,N,a)?1:0)}return e}function\nai(c,b,a){return[0,c,b,a,0,0,0]}function\nO(a,g){var\nb=a[2],c=a[1],d=g[2],e=g[1],h=e<c?1:0;if(h){var\ni=d<b?1:0;if(i)var\nj=0===n(c,b,a[4],e,d)?1:0,f=j?0===n(c,b,a[5],e,d)?1:0:j;else\nvar\nf=i}else\nvar\nf=h;return f}function\nP(a,e,d){var\nb=a[2],c=a[1],f=J(c,b,a[4],e,d);return[0,c,b,a[3],a[5],f,a[6]+1|0]}function\nQ(a){return a[6]===g(a[1],a[2])?1:0}function\nR(a){return o(a[1],a[2],a[3],a[5])}function\nS(a){return o(a[1],a[2],a[3],a[4])}function\nU(a){var\nb=a[2],d=a[1],e=c(i[8],0,g(d+1|0,b+1|0));function\nf(a){return I(d,b,a)}var\nh=c(i[3],f,e);function\nj(b){return O(a,b)}var\nk=c(i[4],j,h);function\nm(c){var\ne=c[2],f=c[1],g=P(a,f,e),h=l(d,b,f,e);return[0,h,T(g)]}return c(i[3],m,k)}function\nT(a){if(R(a))return aj;if(S(a))throw[0,j,ak];return Q(a)?al:[1,U(a)]}q(16,[0,l,I,m,n,J,K,L,M,N,f,o,ai,O,P,Q,R,S,T,U],\"Solution\");return ao}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(f_){\"use strict\";var\nf$={},be=\"raises the following exception:\",cf=\"is incorrect.\",cq=\"state\",bc=\"The following expression:\",cp=\"east\",bf=\"tree\",bb=\"direction\",cj=\" is found.\",cn=\"north\",co=\"h\",ce=\")\",n=\"Test\",ck=\"A node with \",ci=\"southeast\",bd=\"bool\",ch=\"northeast\",y=\"bitmap\",cm=\"descendant path t\",cl=\"w\",i=\"int\",F=\"./_learn-ocaml-build/exercises/fpottier/tictactoe/test.ml\",ay=248,cg=\"initial\",q=f_.jsoo_runtime,cd=q.caml_div,a$=q.caml_equal,aw=q.caml_fresh_oo_id,cc=q.caml_ml_string_length,a_=q.caml_mul,a=q.caml_string_of_jsbytes,ax=q.caml_wrap_exception;function\nc(a,b){return a.length==1?a(b):q.caml_call_gen(a,[b])}function\nd(a,b,c){return a.length==2?a(b,c):q.caml_call_gen(a,[b,c])}function\nk(a,b,c,d){return a.length==3?a(b,c,d):q.caml_call_gen(a,[b,c,d])}function\nj(a,b,c,d,e){return a.length==4?a(b,c,d,e):q.caml_call_gen(a,[b,c,d,e])}function\nba(a,b,c,d,e,f){return a.length==5?a(b,c,d,e,f):q.caml_call_gen(a,[b,c,d,e,f])}var\nm=q.caml_get_global_data(),ak=[0,[0,a(\"Something is wrong.\")],0],S=[0,[0,3,3],[0,[0,4,4],[0,[0,4,3],[0,[0,3,4],0]]]],b_=[0,[0,1,1,1],[0,[0,1,1,2],[0,[0,2,2,1],[0,[0,3,3,1],[0,[0,2,2,2],[0,[0,3,2,2],[0,[0,2,3,2],[0,[0,3,3,2],[0,[0,2,2,3],0]]]]]]]]],K=m.Stdlib__buffer,J=m.Assert_failure,bG=m.Match_failure,e=m.Stdlib__list,l=m.Stdlib,r=m.Test_lib,p=m.Solution,N=m.Stdlib__printexc,Y=m.Prepare,b=m.Ast_helper,C=m.Ty,aa=m.Stdlib__queue,t=m.Stdlib__printf,a8=m.Prelude,bQ=m.Stdlib__array,aC=m.Stdlib__string,aO=m.Stdlib__hashtbl,bg=m.Stdlib__random,o=m.Learnocaml_internal,az=e[19],dA=m.Stdlib__char,ei=m.Stdlib__sys,cr=e[17];c(bg[1],0);var\ncx=[0,a(F),253,6],c2=[0,a(F),585,26],fT=[0,a(\"The following expression produces an incorrect subtree:\")],fU=[0,a(be)],fV=[0,a(bc)],fW=[0,a(be)],fX=[0,a(bc)],fY=[0,[1,a(bf)],[0,[0,a(\"and\")],[0,[1,a(cg)],[0,[0,a(\"seem correct.\")],0]]]],fZ=[0,1],f0=a(cg),f1=[0,a(cq)],f2=[0,a(i)],f3=[0,a(i)],f4=[0,a(i)],f5=a(bf),f6=[0,a(bf)],f7=[0,a(cq)],f8=a(\"Question 8\"),fO=a(cm),fP=a(\"Seq.to_list\"),fK=a(cm),fy=a(co),fz=a(cl),fA=a(\"encode\"),fB=a(\"path\"),fC=a(\"tree (initial w h k)\"),fD=a(\"t\"),fE=a(\"k\"),fF=a(co),fG=a(cl),fw=[0,a(F),1330,14],fr=[0,[11,a(\"A leaf of value \"),[4,0,0,0,[11,a(\" is expected, yet a leaf of value \"),[4,0,0,0,[11,a(cj),0]]]]],a(\"A leaf of value %d is expected, yet a leaf of value %d is found.\")],fs=a(\"A leaf is expected, yet a node is found.\"),ft=a(\"A node is expected, yet a leaf is found.\"),fu=[0,[11,a(ck),[4,0,0,0,[11,a(\" children is expected, yet a node with \"),[4,0,0,0,[11,a(\" children is found.\"),0]]]]],a(\"A node with %d children is expected, yet a node with %d children is found.\")],fx=[0,[11,a(ck),[4,0,0,0,[11,a(\" children is expected, yet a node with more children is found.\"),0]]],a(\"A node with %d children is expected, yet a node with more children is found.\")],fv=[0,[11,a(\"A node with children labeled \"),[2,0,[11,a(\" is expected, yet a node with children labeled \"),[2,0,[11,a(cj),0]]]]],a(\"A node with children labeled %s is expected, yet a node with children labeled %s is found.\")],fi=[0,a(bd)],fj=[0,a(y)],fk=[0,a(i)],fl=[0,a(i)],fm=[0,a(i)],fn=a(\"has_alignment\"),fo=a(\"Question 7\"),e_=[0,a(y)],e$=[0,a(y)],fa=[0,a(bb)],fb=[0,a(i)],fc=[0,a(i)],fd=[0,a(i)],fe=a(\"alignments\"),ff=a(\"Question 6\"),e4=[0,a(bb)],e5=a(\"Question 5\"),eW=a(cn),eX=a(cp),eY=a(ch),eZ=a(ci),e0=a(\"???\"),eK=[0,a(y)],eL=[0,a(i)],eM=[0,a(i)],eN=[0,a(y)],eO=[0,a(i)],eP=[0,a(i)],eQ=a(\"update\"),eR=a(\"Question 4\"),eC=[0,a(bd)],eD=[0,a(i)],eE=[0,a(i)],eF=[0,a(y)],eG=[0,a(i)],eH=[0,a(i)],eI=a(\"read\"),eJ=a(\"Question 3\"),es=[0,a(y)],et=[0,a(i)],eu=[0,a(i)],ev=[0,a(i)],ew=[0,a(i)],ex=a(\"mask\"),ey=a(\"Question 2\"),ej=[0,a(i)],ek=[0,a(i)],el=[0,a(\"offset\")],em=[0,a(i)],en=[0,a(i)],eo=a(\"decode\"),ep=a(\"Question 1\"),ea=a(ce),eb=[0,[11,a(\"(bitmap \"),[4,0,0,0,[12,32,[4,0,0,0,[12,32,0]]]]],a(\"(bitmap %d %d \")],d4=a(\"1\"),d5=a(\"0\"),dK=a(\"Some\"),dL=a(\"None\"),dF=a(\"true\"),dG=a(\"false\"),dB=[0,[12,39,[2,0,[12,39,0]]],a(\"'%s'\")],dw=[0,[12,40,[2,0,[12,41,0]]],a(\"(%s)\")],dq=a(\"max_int\"),dr=a(\"-max_int\"),ds=[0,[4,0,0,0,0],a(\"%d\")],dl=[0,[12,34,[2,0,[12,34,0]]],a('\"%s\"')],dg=[0,a(bc)],df=[0,[0,a(cf)],[0,0,0]],dd=[0,a(\"This is invalid. Producing the following result is valid:\")],de=[0,a(\"This is invalid. Raising the following exception is valid:\")],db=[0,a(\"produces the following result:\")],dc=[0,a(be)],c$=[0,[11,a(\"Tested \"),[4,0,0,0,[11,a(\" inputs.\"),0]]],a(\"Tested %d inputs.\")],da=[0,0],c8=[0,[0,a(\"seems correct.\")],0],c9=[0,1],c5=[0,[0,a(cf)],0],c6=[0,[0,a(\"is correct.\")],0],c7=[0,1],c1=[0,a(F),576,24],cZ=[0,[0,a(\"Not yet implemented.\")],0],c0=[0,a(\"The following exception is raised and never caught:\")],cW=a(\"Can't sample over more than 2^30 elements.\"),cS=[0,a(F),415,4],cM=a(\"in\"),cN=a(\" =\"),cO=a(\"let \"),cL=[0,a(F),351,2],cK=a(\"|>\"),cG=a(\"|]\"),cH=a(\"[| \"),cE=a(\"]\"),cF=a(\"[\"),cC=a(ce),cD=a(\"(\"),cw=[0,a(F),184,2],cu=[0,a(F),123,2],cz=a(\",\"),cB=a(\";\"),cP=a(\"Test.SymSeq.OutOfBounds\"),cX=a(\"Test.Fail\"),dm=a(\"string\"),dn=a(\"learnocaml_autoregister_string_AD8886\"),dp=a(n),dt=a(i),du=a(\"learnocaml_autoregister_int_D2D111\"),dv=a(n),dx=a(\"atomic_int\"),dy=a(\"learnocaml_autoregister_atomic_int_C61E7B\"),dz=a(n),dC=a(\"char\"),dD=a(\"learnocaml_autoregister_char_E7966F\"),dE=a(n),dH=a(bd),dI=a(\"learnocaml_autoregister_bool_6D07AE\"),dJ=a(n),dM=a(\"option\"),dN=a(\"learnocaml_autoregister_option_D2C37B\"),dO=a(n),dP=a(\"array\"),dQ=a(\"learnocaml_autoregister_array_1872EC\"),dR=a(n),dS=a(\"list\"),dT=a(\"learnocaml_autoregister_list_05296D\"),dU=a(n),dV=a(\"list_int\"),dW=a(\"learnocaml_autoregister_list_int_FFB3FD\"),dX=a(n),dY=a(\"pair\"),dZ=a(\"learnocaml_autoregister_pair_58C514\"),d0=a(n),d1=a(\"pair_int\"),d2=a(\"learnocaml_autoregister_pair_int_5F1023\"),d3=a(n),d6=a(\"bit\"),d7=a(\"learnocaml_autoregister_bit_7AFD23\"),d8=a(n),d9=a(y),d_=a(\"learnocaml_autoregister_bitmap_9B8556\"),d$=a(n),ec=a(y),ed=a(\"learnocaml_autoregister_bitmap_42BB52\"),ee=a(n),ef=a(y),eg=a(\"learnocaml_autoregister_bitmap_CCABEA\"),eh=a(n),eS=a(ci),eT=a(ch),eU=a(cp),eV=a(cn),e1=a(bb),e2=a(\"learnocaml_autoregister_direction_DD682E\"),e3=a(n),fp=a(\"Test.Failp\"),fq=a(\"Test.Length\"),fH=a(\"defs\"),fI=a(\"learnocaml_autoregister_defs_4BCC67\"),fJ=a(n),fL=a(\"expr\"),fM=a(\"learnocaml_autoregister_expr_4438D8\"),fN=a(n),fQ=a(\"len_expr\"),fR=a(\"learnocaml_autoregister_len_expr_5A61C5\"),fS=a(n);function\ncs(a){var\nb=a[1];a[1]=b+1|0;return b}var\nI=l[19];function\naA(b,a){if(b!==I&&a!==I)return b+a|0;return I}function\nct(b,a){return b<=a?1:0}function\nT(c){var\na=c;for(;;){if(typeof\na===\"number\")return 0===a?0:I;else\nswitch(a[0]){case\n0:var\nb=a[4];break;case\n1:var\nb=a[1];break;case\n2:var\na=a[1];continue;default:return a[1]}return b}}var\nac=0;function\nbh(d,c,a,b){return 0===a?ac:[0,d,c,a,b]}function\naB(a,b){return bh(a,0,cc(a),b)}function\nbi(d){var\nb=0,a=0;for(;;){if(cc(d)<=a)return b;var\nc=q.caml_string_unsafe_get(d,a),e=128<=c?224<=c?240<=c?4:3:2:1,b=b+1|0,a=a+e|0;continue}}function\nh(a){return aB(a,bi(a))}function\nbj(a){return d(t[10],h,a)}function\nU(a){if(10===a)throw[0,J,cu];return aB(d(aC[1],1,a),1)}var\nad=U(32),bk=U(59),cv=U(92),aD=U(34),V=1;function\nbl(a){return 0===a?ac:1===a?ad:[1,a]}function\nbm(a,d){var\nc=0;if(typeof\na!==\"number\"&&2===a[0]){var\nb=a[1];c=1}if(!c)var\nb=a;return[2,b,d]}function\nae(a){return bm(bl(a),V)}var\nbn=ae(0),bo=ae(1);function\nv(a){return 0===a?bn:1===a?bo:ae(a)}function\ng(b,a){if(typeof\nb===\"number\"&&!b)return a;if(typeof\na===\"number\"&&!a)return b;var\nc=T(a);return[3,aA(T(b),c),b,a]}function\naf(b,a){if(0<=b)return[4,T(a),b,a];throw[0,J,cw]}function\nz(a){var\nb=T(a);return b===I?a:[5,b,a]}var\naE=d(aC[1],80,32),bp=80;function\naF(b,c){var\na=c;for(;;){if(0<a){if(a<=80)return j(K[16],b,aE,0,a);j(K[16],b,aE,0,bp);var\na=a-80|0;continue}return 0}}function\nbq(b,k,i,h){var\ne=k,c=i,a=h;for(;;)if(typeof\na===\"number\"){if(0===a)return 0;if(c)throw[0,J,cx];d(K[10],b[3],10);aF(b[3],e);b[2]=e;return 0}else\nswitch(a[0]){case\n0:j(K[16],b[3],a[1],a[2],a[3]);b[2]=b[2]+a[4]|0;return 0;case\n1:var\nf=a[1];aF(b[3],f);b[2]=b[2]+f|0;return 0;case\n2:var\nl=c?a[1]:a[2],a=l;continue;case\n3:bq(b,e,c,a[2]);var\na=a[3];continue;case\n4:var\ne=e+a[2]|0,a=a[3];continue;default:if(c)var\ng=c;else\nvar\nm=b[1],g=aA(b[2],a[1])<=m?1:0;var\nc=g,a=a[2];continue}}function\nbr(d,b){var\na=c(K[1],512);bq([0,d,0,a],0,0,b);return c(K[2],a)}function\naG(f,a){if(a)var\ng=a[2],h=function(a){return[0,f,[0,a,0]]},i=d(e[19],h,g),j=c(e[14],i),b=[0,a[1],j];else\nvar\nb=a;return b}function\nG(a){return k(e[26],g,a,ac)}var\ncy=v(1),bs=g(h(cz),cy);function\nbt(a){return G(aG(bs,a))}var\ncA=v(1),bu=g(h(cB),cA);function\nbv(a){return G(aG(bu,a))}function\nag(a){var\nb=v(0);return g(af(2,g(v(0),a)),b)}function\nah(a){var\nb=h(cC),c=g(ag(a),b);return g(h(cD),c)}function\nbw(a){var\nb=h(cE),c=g(ag(a),b);return g(h(cF),c)}function\nbx(a){var\nb=h(cG),c=g(ag(a),b);return g(h(cH),c)}function\naH(a){return z(ah(bt(a)))}function\nby(a){return z(bw(bv(a)))}function\nbz(b,a){if(a){var\nc=g(ad,aH(a));return g(h(b),c)}return h(b)}function\nbA(a){if(a)var\nc=a[2],e=d(az,function(a){return g(z(v(1)),a)},c),b=[0,a[1],e];else\nvar\nb=a;return b}function\nbB(a){return z(G(bA(a)))}function\nw(b,a){return bB([0,h(b),a])}function\ncI(b,a){return ah(w(b,a))}function\ncJ(d,a){if(0<c(e[1],a)){var\nb=c(e[9],a),f=c(e[6],b),i=c(e[9],f),j=c(e[5],b),k=g(ad,w(d,i)),l=g(h(cK),k);return z(g(j,g(v(1),l)))}throw[0,J,cL]}function\nL(c,b,a){var\ne=g(V,a),f=h(cM),i=g(v(1),f),j=g(af(2,g(v(1),b)),i),k=d(l[28],c,cN);return g(z(g(h(d(l[28],cO,k)),j)),e)}function\nu(b,a){return br(70,z(c(b,a)))}var\nai=[ay,cP,aw(0)];function\ns(a){if(typeof\na===\"number\")return 0;else\nswitch(a[0]){case\n0:return 1;case\n1:return a[2]-a[1]|0;default:return a[1]}}function\nM(a){return 0===s(a)?1:0}var\nW=0;function\ncQ(a){return[0,a]}function\ncR(b,a){return b<a?[1,b,a]:W}function\naI(a){if(0<=a)return a;throw[0,J,cS]}function\nbC(b,a){if(M(b))return a;if(M(a))return b;var\nc=s(a);return[2,aI(s(b)+c|0),b,a]}function\ncT(a){return k(e[25],bC,W,a)}function\ncU(b,a){if(!M(b)&&!M(a)){var\nc=s(a);return[3,aI(a_(s(b),c)),b,a]}return W}function\ncV(b,a){return M(a)?W:[4,s(a),b,a]}function\nX(i,h){var\na=i,b=h;for(;;)if(typeof\na===\"number\")throw ai;else\nswitch(a[0]){case\n0:if(0===b)return a[1];throw ai;case\n1:var\ne=a[1];if(0<=b&&(e+b|0)<a[2])return e+b|0;throw ai;case\n2:var\nf=a[2],g=s(f);if(b<g){var\na=f;continue}var\na=a[3],b=b-g|0;continue;case\n3:var\nd=a[3],j=q.caml_mod(b,s(d)),k=cd(b,s(d)),l=X(d,j);return[0,X(a[2],k),l];default:var\nm=X(a[3],b);return c(a[2],m)}}function\naj(h,g){var\na=h,b=g;for(;;)if(typeof\na===\"number\")return 0;else\nswitch(a[0]){case\n0:return c(b,a[1]);case\n1:var\ne=a[1],f=a[2]-1|0;if(!(f<e)){var\nd=e;for(;;){c(b,d);var\ni=d+1|0;if(f!==d){var\nd=i;continue}break}}return 0;case\n2:aj(a[2],b);var\na=a[3];continue;case\n3:var\nj=a[3],k=function(d,b){return function(a){return aj(b,function(b){return c(d,[0,a,b])})}}(b,j),a=a[2],b=k;continue;default:var\nl=a[2],m=function(b,d){return function(a){return c(b,c(d,a))}}(b,l),a=a[3],b=m;continue}}function\nbD(b){var\na=[0,0];aj(b,function(b){a[1]=[0,b,a[1]];return 0});return c(e[9],a[1])}function\nbE(a){return a<1073741824?c(bg[5],a):c(l[2],cW)}var\naJ=[0,ai,s,M,W,cQ,cR,aI,bC,cT,cU,cV,X,aj,bD,bE,function(b,a){if(s(a)<=b)return bD(a);var\nd=0,h=1;if(b<1)var\ne=d;else{var\nc=h,f=d;for(;;){var\ng=[0,X(a,bE(s(a))),f],i=c+1|0;if(b!==c){var\nc=i,f=g;continue}var\ne=g;break}}return e}],aK=[ay,cX,aw(0)];function\nA(b,a){return[0,[0,[0,[0,b],0],a],0]}function\nH(a){throw[0,aK,[0,[2,a,0],0]]}function\ncY(a){function\nb(a){return H([0,[0,a],0])}return d(t[10],b,a)}function\nD(a){try{var\ne=d(r[80],0,a);return e}catch(a){a=ax(a);if(a[1]===aK)return a[2];if(a===Y[1])return[0,[2,cZ,0],0];var\nb=[0,[2,c(N[6],0)],0];return[0,[2,[0,c0,[0,0,[0,[2,c(N[1],a)],b]]],0],0]}}function\nbF(a){if(typeof\na===\"number\"){if(0===a)return 0}else\nif(1===a[0])throw[0,bG,c1];return 1}function\naL(a){return d(e[32],bH,a)}function\nbH(a){switch(a[0]){case\n0:return aL(a[2]);case\n1:throw[0,bG,c2];default:return bF(a[2])}}function\nc3(a,b){if(aL(a)){var\ne=c(b,0);return d(l[37],a,e)}return a}function\nB(c,b,a){var\ne=d(r[100],c,b);return d(r[104],e,a)}function\nc4(a,e,c,b){return B(e,a,function(e){return D(function(f){if(1-d(b,e,c))H([0,[1,a],c5]);return[0,[2,[0,[1,a],c6],c7],0]})})}function\nO(a){return[0,[2,[0,[1,a],c8],c9],0]}function\nc_(a){var\nb=c(e[1],a);return[0,[2,[0,[0,d(t[4],c$,b)],0],da],0]}function\nbI(c,b,a){if(0===b[0]){if(0===a[0])return d(c,b[1],a[1])}else\nif(1===a[0])return a$(b[1],a[1]);return 0}function\nbJ(b,a){return 0===a[0]?[0,db,[0,[2,c(b,a[1])],0]]:[0,dc,[0,[2,c(N[1],a[1])],0]]}function\nbK(b,a){return 0===a[0]?[0,dd,[0,[2,c(b,a[1])],0]]:[0,de,[0,[2,c(N[1],a[1])],0]]}function\nP(a){return[0,[1,a],df]}function\nQ(j,e,i,h,g,a,b){if(a$(a,[1,Y[1]]))throw Y[1];var\nf=1-bI(j,a,b);if(f){var\nk=bK(e,b),m=[0,0,bJ(e,a)],n=[0,dg,[0,0,[0,[1,c(h,g)],m]]],o=d(l[37],n,k);return H(d(l[37],i,o))}return f}function\ndh(a,j,i,h,g,f,b){return B(j,a,function(j){return D(function(l){function\nk(b){function\nd(a){return c(j,b)}var\ne=c(r[82],d);function\nk(a){return c(i,b)}var\nl=c(r[82],k);function\nm(d){return w(a,[0,c(h,b),0])}var\nn=0;function\no(a){return u(m,a)}return Q(f,g,P(a),o,n,e,l)}d(e[17],k,b);return O(a)})})}function\nbL(a,f,k,j,i,h,g,b){return B(f,a,function(l){return D(function(m){function\nf(f){var\nb=f[2],e=f[1];function\nm(a){return d(l,e,b)}var\nn=c(r[82],m);function\no(a){return d(k,e,b)}var\np=c(r[82],o);function\nq(f){var\nd=[0,c(i,b),0];return w(a,[0,c(j,e),d])}var\ns=0;function\nt(a){return u(q,a)}return Q(g,h,P(a),t,s,n,p)}d(e[17],f,b);return O(a)})})}function\nbM(a,f,m,l,j,i,h,g,b){return B(f,a,function(n){return D(function(o){function\nf(b){var\nd=b[3],e=b[2],f=b[1];function\no(a){return k(n,f,e,d)}var\np=c(r[82],o);function\nq(a){return k(m,f,e,d)}var\ns=c(r[82],q);function\nt(h){var\nb=[0,c(i,d),0],g=[0,c(j,e),b];return w(a,[0,c(l,f),g])}var\nv=0;function\nx(a){return u(t,a)}return Q(g,h,P(a),x,v,p,s)}d(e[17],f,b);return O(a)})})}function\naM(a,f,o,n,m,l,k,i,h,b){return B(f,a,function(p){return D(function(g){function\nf(b){var\nd=b[4],e=b[3],f=b[2],g=b[1];function\nq(a){return j(p,g,f,e,d)}var\ns=c(r[82],q);function\nt(a){return j(o,g,f,e,d)}var\nv=c(r[82],t);function\nx(j){var\nb=[0,c(k,d),0],h=[0,c(l,e),b],i=[0,c(m,f),h];return w(a,[0,c(n,g),i])}var\ny=0;function\nz(a){return u(x,a)}return Q(h,i,P(a),z,y,s,v)}d(e[17],f,b);return O(a)})})}function\nal(b,f,p,o,n,m,l,k,j,i,a){return B(f,b,function(q){return D(function(g){function\nf(a){var\nd=a[5],e=a[4],f=a[3],g=a[2],h=a[1];function\ns(a){return ba(q,h,g,f,e,d)}var\nt=c(r[82],s);function\nv(a){return ba(p,h,g,f,e,d)}var\nx=c(r[82],v);function\ny(q){var\na=[0,c(k,d),0],i=[0,c(l,e),a],j=[0,c(m,f),i],p=[0,c(n,g),j];return w(b,[0,c(o,h),p])}var\nz=0;function\nA(a){return u(y,a)}return Q(i,j,P(b),A,z,t,x)}d(e[17],f,a);return O(b)})})}function\naN(g){var\ne=d(aO[1],0,32);return function(b){try{var\na=d(aO[6],e,b);return a}catch(a){a=ax(a);if(a===l[8]){var\nf=c(g,b);k(aO[5],e,b,f);return f}throw a}}}function\nZ(b,a){var\nf=d(e[19],b,a);return c(e[14],f)}function\naP(a,c,b){return a<c?[0,a,aP(a+1|0,c,b)]:b}function\nx(b,a){return aP(b,a,0)}function\ndi(b,a){return Z(function(b){return Z(function(a){return[0,[0,b,a],0]},a)},b)}function\ndj(a,c){var\nb=x(0,a+1|0);return Z(function(b){return d(c,b,a-b|0)},b)}function\ndk(b,a){return Z(b,x(0,a+1|0))}function\nbN(a){var\nb=c(aC[14],a);return d(t[4],dl,b)}function\naQ(a){return h(bN(a))}j(o[1],dp,dn,dm,aQ);function\n_(a){return a===l[19]?dq:a===(-l[19]|0)?dr:d(t[4],ds,a)}function\nf(a){return h(_(a))}j(o[1],dv,du,dt,f);function\nbO(a){if(0<=a)return _(a);var\nb=_(a);return d(t[4],dw,b)}function\naR(a){return h(bO(a))}j(o[1],dz,dy,dx,aR);function\nbP(a){var\nb=c(dA[2],a);return d(t[4],dB,b)}function\naS(a){return h(bP(a))}j(o[1],dE,dD,dC,aS);function\nam(a){return a?dF:dG}function\naT(a){return h(am(a))}j(o[1],dJ,dI,dH,aT);function\naU(b,a){return a?bz(dK,[0,c(b,a[1]),0]):h(dL)}j(o[1],dO,dN,dM,aU);function\naV(b,a){function\ne(a){var\nd=g(bk,v(1));return g(c(b,a),d)}var\nf=d(bQ[15],e,a);return z(bx(G(c(bQ[11],f))))}j(o[1],dR,dQ,dP,aV);function\n$(b,a){return by(d(az,b,a))}j(o[1],dU,dT,dS,$);function\nan(a){return $(f,a)}j(o[1],dX,dW,dV,an);function\naW(a){return u(an,a)}function\nao(d,b,a){var\ne=[0,c(b,a[2]),0];return aH([0,c(d,a[1]),e])}j(o[1],d0,dZ,dY,ao);function\nap(a){return ao(f,f,a)}j(o[1],d3,d2,d1,ap);function\nbR(a){return u(ap,a)}function\naq(f,c,b,a){function\ng(f,a){function\ng(c,a){return[0,d(b,f,c),a]}return k(e[26],g,c,a)}return k(e[26],g,f,a)}function\nbS(f,d,c,b,a){function\ng(f,a){function\ng(d,a){function\ng(c,a){return[0,k(b,f,d,c),a]}return k(e[26],g,c,a)}return k(e[26],g,d,a)}return k(e[26],g,f,a)}function\nar(a){var\nb=a?d4:d5;return h(b)}j(o[1],d8,d7,d6,ar);function\naX(b,a,f){function\nh(c){var\nh=x(0,b+1|0);function\ni(d){return ar(ba(p[4],b,a,f,d,c))}return g(G(d(e[19],i,h)),V)}var\ni=x(0,a+1|0),j=c(e[9],i);return G(d(e[19],h,j))}j(o[1],d$,d_,d9,aX);function\naY(b,a,c){var\ne=g(aD,h(ea)),f=g(af(2,g(aD,g(V,aX(b,a,c)))),e);return g(d(bj(eb),b,a),f)}j(o[1],ee,ed,ec,aY);var\naZ=[0,0],a0=[0,0];function\nR(c,b,a){a0[1]=b;aZ[1]=a;return d(c,b,a)}function\nE(a){return aY(a0[1],aZ[1],a)}j(o[1],eh,eg,ef,E);function\nas(a){return u(E,a)}var\nbT=x(0,ei[9]);function\nbU(g){var\na=0,d=aq(S,bT,function(a,b){return[0,a[1],a[2],b]},a),e=p[2];return A(ep,bM(eo,c(C[2],[0,[1,0,[0,[3,[0,en,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,em,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,el,b[1][1]],0],b[1][1],0,0],[0,[2,[0,[0,[3,[0,ek,b[1][1]],0],b[1][1],0,0],[0,[0,[3,[0,ej,b[1][1]],0],b[1][1],0,0],0]]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,f,bR,a$,d))}var\neq=0;function\ner(a,d){var\nb=a[2],c=a[1];function\ne(d,a){return[0,c,b,d,a]}var\nf=x(0,b);return aq(x(0,c),f,e,d)}var\na1=k(e[26],er,S,eq);function\nbV(g){function\na(b,a){return b===a?1:0}var\nd=p[3];function\ne(a,b){return R(d,a,b)}return A(ey,aM(ex,c(C[2],[0,[1,0,[0,[3,[0,ew,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,ev,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eu,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,et,b[1][1]],0],b[1][1],0,0],[0,[3,[0,es,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,f,f,as,a,a1))}function\nez(b,a){return(1<<a)-1|0}function\nbW(b,a){return(1<<(a+1|0))-1|0}function\na2(b,a){return(1<<a_(a+1|0,b))-1|0}function\nbX(b,a){var\nc=bW(b,a);return cd(a2(b,a),c)}function\nbY(b,a){return bX(b,a)<<a}function\nbZ(b,a){var\nc=bY(b,a);return a2(b,a)^c}var\na3=aN(function(a){var\nb=(1<<a_(a[1]+1|0,a[2]+1|0))-1|0,c=d(aJ[6],1,b);return[0,0,[0,b,d(aJ[16],50,c)]]}),a4=aN(function(a){var\nb=a[2],f=a[1],g=bZ(f,b),h=c(a3,[0,f,b]);function\ni(a){return a&g}return d(e[19],i,h)}),eA=0;function\neB(a,g){var\nb=a[2],f=a[1],h=a[4],i=a[3],j=c(a3,[0,f,b]);function\nk(a){return[0,f,b,a,i,h]}var\nm=d(e[19],k,j);return d(l[37],m,g)}var\nb0=k(e[26],eB,a1,eA);function\nb1(g){function\na(b,a){return b===a?1:0}var\nd=p[4];function\ne(a,b){return R(d,a,b)}return A(eJ,al(eI,c(C[2],[0,[1,0,[0,[3,[0,eH,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eG,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eF,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eE,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eD,b[1][1]],0],b[1][1],0,0],[0,[3,[0,eC,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,E,f,f,am,a,b0))}function\nb2(g){function\na(b,a){return b===a?1:0}var\nd=p[5];function\ne(a,b){return R(d,a,b)}return A(eR,al(eQ,c(C[2],[0,[1,0,[0,[3,[0,eP,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eO,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eN,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eM,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,eL,b[1][1]],0],b[1][1],0,0],[0,[3,[0,eK,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,E,f,f,as,a,b0))}var\nb3=[0,[0,eV,p[6]],[0,[0,eU,p[7]],[0,[0,eT,p[8]],[0,[0,eS,p[9]],0]]]];function\nat(a){var\nb=a===p[6]?eW:a===p[7]?eX:a===p[8]?eY:a===p[9]?eZ:e0;return h(b)}j(o[1],e3,e2,e1,at);function\nb4(i){var\na=c(e[6],b3),g=0;function\nh(e,a){function\ng(b,a){return b===a?1:0}var\nh=a[2],i=c(C[2],[0,[3,[0,e4,b[1][1]],0],b[1][1],0,0]),j=bL(a[1],i,h,f,f,_,g,S);return d(l[37],e,j)}return A(e5,k(e[25],h,g,a))}function\ne6(a){return a[2]}var\nb5=d(e[19],e6,b3),e7=0;function\ne8(a,e){var\nb=a[2],d=a[1];function\nf(e,c,a){return[0,d,b,e,c,a]}var\ng=c(a4,[0,d,b]);return bS(x(1,5),b5,g,f,e)}var\ne9=k(e[26],e8,S,e7);function\nb6(g){function\na(b,a){return b===a?1:0}var\nd=p[10];function\ne(a,b){return R(d,a,b)}return A(ff,al(fe,c(C[2],[0,[1,0,[0,[3,[0,fd,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fc,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fb,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fa,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,e$,b[1][1]],0],b[1][1],0,0],[0,[3,[0,e_,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,f,at,E,as,a,e9))}var\nfg=0;function\nfh(a,e){var\nb=a[2],d=a[1];function\nf(c,a){return[0,d,b,c,a]}var\ng=c(a4,[0,d,b]);return aq(x(1,4),g,f,e)}var\nb7=k(e[26],fh,S,fg);function\nb8(g){function\na(b,a){return b===a?1:0}var\nd=p[11];function\ne(a,b){return R(d,a,b)}return A(fo,aM(fn,c(C[2],[0,[1,0,[0,[3,[0,fm,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fl,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fk,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,fj,b[1][1]],0],b[1][1],0,0],[0,[3,[0,fi,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e,f,f,f,E,am,a,b7))}function\na5(b,f){var\na=c(f,0);if(a)var\nd=0<b?1:0,e=d?1+a5(b-1|0,a[2])|0:d;else\nvar\ne=a;return e}var\na6=[ay,fp,aw(0)],a7=[ay,fq,aw(0)];function\nb9(x,w){var\nf=c(aa[2],0);d(aa[3],[0,x,w,0],f);for(;;){if(c(aa[13],f))return 0;var\nh=c(aa[5],f),i=h[3],g=h[2],j=h[1],a=function(b){return function(a){throw[0,a6,c(e[9],b),a]}}(i);if(0===j[0]){var\nm=j[1];if(0===g[0]){var\nn=g[1];if(m!==n)a(k(t[4],fr,m,n))}else\na(fs)}else{var\no=j[1];if(0===g[0])a(ft);else{var\np=g[1],b=c(a8[1][2],o);try{var\nl=a5(b+1|0,p)}catch(a){a=ax(a);throw[0,a7,i,a];var\nF=a}if(l<b)a(k(t[4],fu,b,l));else\nif(b<l)a(d(t[4],fx,b));var\nr=c(a8[1][7],o),y=c(a8[1][7],p),z=function(b,a){return q.caml_int_compare(b[1],a[1])},s=d(e[56],z,y),A=function(a){return a[1]},u=d(e[19],A,r),B=function(a){return a[1]},v=d(e[19],B,s);if(q.caml_notequal(u,v)){var\nC=aW(v),D=aW(u);a(k(t[4],fv,D,C))}var\nE=function(e){return function(b,a){var\nc=b[1];if(c===a[1])return d(aa[3],[0,b[2],a[2],[0,c,e]],f);throw[0,J,fw]}}(i);k(e[27],E,r,s)}}continue}}function\nab(e,b,a,d,c){var\ng=L(fB,$(function(d){var\nc=k(p[2],b,a,d),e=[0,f(c[2]),0],g=[0,f(c[1]),e],i=[0,h(fy),g];return w(fA,[0,h(fz),i])},e),c),i=L(fD,h(fC),g),j=L(fE,f(d),i),l=L(fF,f(a),j);return L(fG,f(b),l)}j(o[1],fJ,fI,fH,ab);function\nau(d,c,b,a,e){return ab(d,c,b,a,h(fK))}j(o[1],fN,fM,fL,au);function\na9(d,c,b,a){var\ne=0;return u(function(e){return au(d,c,b,a,e)},e)}function\nav(d,c,b,a,e){return ab(d,c,b,a,w(fP,[0,ah(h(fO)),0]))}j(o[1],fS,fR,fQ,av);function\nb$(d,c,b,a){var\ne=0;return u(function(e){return av(d,c,b,a,e)},e)}function\nca(f){function\na(i){function\na(j){return D(function(b){function\na(a){var\nb=a[3],e=a[2],f=a[1];function\nm(a){return c(i,k(j,f,e,b))}var\ng=c(r[82],m),n=k(p[12],f,e,b),o=c(p[18],n);if(0===g[0])try{var\nv=b9(o,g[1]);return v}catch(a){a=ax(a);if(a[1]===a6){var\nq=[0,0,[0,[0,a[3]],0]],s=[0,fT,[0,0,[0,[1,a9(a[2],f,e,b)],q]]];return H(d(l[37],ak,s))}if(a[1]===a7){var\nt=[0,0,[0,fU,[0,[2,c(N[1],a[3])],0]]],u=[0,fV,[0,0,[0,[1,b$(a[2],f,e,b)],t]]];return H(d(l[37],ak,u))}throw a}var\nh=g[1];if(h===Y[1])throw Y[1];var\nw=[0,0,[0,fW,[0,[2,c(N[1],h)],0]]],x=[0,fX,[0,0,[0,[1,a9(0,f,e,b)],w]]];return H(d(l[37],ak,x))}d(e[17],a,b_);return[0,[2,fY,fZ],0]})}return B(c(C[2],[0,[1,0,[0,[3,[0,f4,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,f3,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,f2,b[1][1]],0],b[1][1],0,0],[0,[3,[0,f1,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),f0,a)}return A(f8,B(c(C[2],[0,[1,0,[0,[3,[0,f7,b[1][1]],0],b[1][1],0,0],[0,[3,[0,f6,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),f5,a))}function\ncb(r){var\na=ca(0),b=d(l[37],a,0),c=b8(0),e=d(l[37],c,b),f=b6(0),g=d(l[37],f,e),h=b4(0),i=d(l[37],h,g),j=b2(0),k=d(l[37],j,i),m=b1(0),n=d(l[37],m,k),o=bV(0),p=d(l[37],o,n),q=bU(0);return d(l[37],q,p)}var\nf9=k(r[26],0,r[109][2],cb);c(r[1],f9);q.caml_register_global(225,[0,cr,az,cs,I,aA,ct,T,ac,bh,aB,bi,h,bj,U,ad,bk,cv,aD,V,bl,bm,ae,bn,bo,v,g,af,z,bp,aE,aF,br,aG,G,bs,bt,bu,bv,ag,ah,bw,bx,aH,by,bz,bA,bB,w,cI,cJ,L,u,aJ,aK,A,H,cY,D,bF,bH,aL,c3,B,c4,O,c_,bI,bJ,bK,ak,P,Q,dh,bL,bM,aM,al,aN,Z,aP,x,di,dj,dk,bN,aQ,aQ,_,f,f,bO,aR,aR,bP,aS,aS,am,aT,aT,aU,aU,aV,aV,$,$,an,an,aW,ao,ao,ap,ap,bR,aq,bS,ar,ar,aX,aY,a0,aZ,R,E,E,as,S,bT,bU,a1,bV,ez,bW,a2,bX,bY,bZ,a3,a4,b1,b2,at,at,b4,b5,b6,b7,b8,a5,a6,a7,b9,b_,ab,ab,au,au,a9,av,av,b$,ca,cb],n);return f$}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 10
  },
  null
]