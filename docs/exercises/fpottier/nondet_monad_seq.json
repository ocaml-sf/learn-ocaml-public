[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Implementing Nondeterminism with Sequences",
    "stars": 3,
    "backward_exercises": [
      "fpottier/nondet_monad_defun"
    ]
  },
  {
    "id": "nondet_monad_seq",
    "prelude_ml": "(* The module [Seq] is standard as of OCaml 4.07. *)\n\nmodule Seq = struct\n\n  type 'a t = unit -> 'a node\n\n  and +'a node =\n  | Nil\n  | Cons of 'a * 'a t\n\n  let nil =\n    fun () -> Nil\n\n  let cons x xs =\n    fun () -> Cons (x, xs)\n\n  let singleton x =\n    cons x nil\n\n  let rec map (f : 'a -> 'b) (xs : 'a t) : 'b t =\n    fun () ->\n      match xs() with\n      | Nil ->\n          Nil\n      | Cons (x, xs) ->\n          Cons (f x, map f xs)\n\n  let rec concat (xs : 'a t) (ys : 'a t) : 'a t =\n    fun () ->\n      match xs() with\n      | Nil ->\n          ys()\n      | Cons (x, xs) ->\n          Cons (x, concat xs ys)\n\n  let rec flatten (xss : 'a t t) : 'a t =\n    fun () ->\n      match xss() with\n      | Nil ->\n          Nil\n      | Cons (xs, xss) ->\n          concat xs (flatten xss) ()\n\n  let rec take n (xs : 'a t) : 'a t =\n    if n = 0 then\n      nil\n    else\n      fun () ->\n        match xs() with\n        | Nil ->\n            Nil\n        | Cons (x, xs) ->\n            Cons (x, take (n-1) xs)\n\n  let head (xs : 'a t) : 'a option =\n    match xs() with\n    | Nil ->\n        None\n    | Cons (x, _) ->\n        Some x\n\n  let rec of_list (xs : 'a list) : 'a t =\n    fun () ->\n      match xs with\n      | [] ->\n          Nil\n      | x :: xs ->\n          Cons (x, of_list xs)\n\n  (* A word of warning: [to_list] does not terminate if it is applied\n     to an infinite sequence. Furthermore, this version of [to_list]\n     is not tail-recursive and could exhaust the stack space if it was\n     applied to a long sequence. *)\n\n  let rec to_list (xs : 'a t) : 'a list =\n    match xs() with\n    | Nil ->\n        []\n    | Cons (x, xs) ->\n        x :: to_list xs\n\nend\n\n(* A nondeterministic computation produces a sequence of values,\n   and is represented (in this implementation) as a sequence of\n   values. *)\n\ntype 'a m =\n  'a Seq.t\n\nlet delay (m : unit -> 'a m) : 'a m =\n  fun () ->\n    m()()\n\n(* The effect of executing the computation [tick m] is to first increment the\n   global counter [work], then execute the computation [m]. *)\n\n(* The grading code uses these operations in order to check that computations\n   are executed on demand, that is, as late as possible. *)\n\nlet work =\n  ref 0\n\nlet reset() =\n  work := 0\n\nlet tick (m : 'a m) : 'a m =\n  delay (fun () ->\n    work := !work + 1;\n    m\n  )\n\nlet snapshot (x : 'a) : 'a * int =\n  (x, !work)\n",
    "template": "let return (x : 'a) : 'a m =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet (>>=) (m1 : 'a m) (m2 : 'a -> 'b m) : 'b m =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet fail : 'a m =\n  (* TO DO: Define this constant. (Delete the whole line.) *)\n  delay (fun () -> raise TODO)\n\nlet choose (m1 : 'a m) (m2 : 'a m) : 'a m =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet sols (m : 'a m) : 'a Seq.t =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet at_most_once (m : 'a m) : 'a m =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet rec interleave (m1 : 'a m) (m2 : 'a m) : 'a m =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet rec (>>-) (m1 : 'a m) (m2 : 'a -> 'b m) : 'b m =\n  (* TO DO: Define this function. *)\n  raise TODO\n",
    "descr": [
      [
        "",
        "<h1 id=\"Implementing-Nondeterminism-with-Sequences\">Implementing Nondeterminism with Sequences</h1>\n\n<p>In this exercise, we build an implementation of the nondeterminism\nmonad. This monad admits several possible implementations; the one\nthat we choose here is a direct implementation where a computation\nis represented as an on-demand sequence of values.</p>\n<h2 id=\"The-Nondeterminism-Monad\">The Nondeterminism Monad</h2>\n\n<p>When searching for the solution of a problem, one must typically\nexplore multiple choices. If a series of choices lead to a failure\n(a dead end), then one must backtrack and explore another avenue.</p>\n<p>There are a number of ways in which nondeterminism and backtracking\ncan be implemented. Regardless of which implementation mechanism is\nchosen, it is desirable to hide it behind an abstraction barrier and\npresent the end user with <strong>a simple API for constructing an executing\nnondeterministic computations</strong>.</p>\n<p>This API is known as the <strong>nondeterminism monad</strong>. It offers the\nfollowing key elements:</p>\n<ul><li><p>A type <code>&#39;a m</code>, the type of computations that yield results of type\n <code>&#39;a</code>.</p>\n</li><li><p>A number of constructor functions for constructing computations,\n such as <code>fail: &#39;a m</code>, which represents failure, and <code>choose: &#39;a m\n  -&gt; &#39;a m -&gt; &#39;a m</code>, which expresses a nondeterministic choice\n between two computations.</p>\n</li><li><p>A single observation function, <code>sols: &#39;a m -&gt; &#39;a Seq.t</code>, which\n converts a computation to a sequence of results, thereby allowing\n the user to execute this computation and observe its results. The\n name <code>sols</code> stands for <code>solutions</code>.</p>\n</li></ul>\n\n<p>A monad can be thought of as a <strong>mini-programming language</strong> where\ncomputations are first-class citizens: we have a type of\ncomputations, ways of building computations, and a way of executing\ncomputations.</p>\n<p>A computation in the nondeterminism monad can produce zero, one, or\nmore results. Indeed, a computation that fails produces zero\nresults. A computation that succeeds normally produces one result.\nA computation that uses <code>choose</code> can produce more than one result.\nIt is in fact possible to construct computations that produce an\ninfinite number of results!</p>\n<p>Thus, a useful way to think of a computation is as <strong>a sequence of\nresults</strong>, that is, a sequence of results.</p>\n<p>Because of this remark, one might be tempted to define the type <code>&#39;a\nm</code> as a synonym for <code>&#39;a Seq.t</code>, the type of sequences of values of\ntype <code>&#39;a</code>. However, although it is possible to represent a\ncomputation internally as a sequence (and we will do so in this\nexercise), this is not necessarily the best implementation\ntechnique. Thus, we prefer to make the API more flexible by viewing\n<code>&#39;a m</code> as an abstract type and by offering an observation function,\n<code>sols</code>, which converts a computation to a sequence.</p>\n<h2 id=\"The-Nondeterminism-Monad-39-s-API\">The Nondeterminism Monad&#39;s API</h2>\n\n<p>The signature, or API, of the nondeterminism monad is as follows:</p>\n<pre><code>  (* Type. *)\n  type &#39;a m\n\n  (* Constructor functions. *)\n  val return: &#39;a -&gt; &#39;a m\n  val (&gt;&gt;=): &#39;a m -&gt; (&#39;a -&gt; &#39;b m) -&gt; &#39;b m\n  val fail: &#39;a m\n  val choose: &#39;a m -&gt; &#39;a m -&gt; &#39;a m\n  val delay: (unit -&gt; &#39;a m) -&gt; &#39;a m\n  val at_most_once: &#39;a m -&gt; &#39;a m\n  val interleave: &#39;a m -&gt; &#39;a m -&gt; &#39;a m\n  val (&gt;&gt;-): &#39;a m -&gt; (&#39;a -&gt; &#39;b m) -&gt; &#39;b m\n\n  (* Observation function. *)\n  val sols: &#39;a m -&gt; &#39;a Seq.t</code></pre>\n\n<p>As explained above, a value of type <code>&#39;a m</code> is <strong>a description of a\ncomputation</strong>, which, once executed, produces a sequence of results\nof type <code>&#39;a</code>.</p>\n<p>To execute a computation <code>m</code>, one must first convert it to a\nsequence of type <code>&#39;a Seq.t</code>, whose elements can then be demanded,\none by one. (More information on the module <code>Seq</code> is given below.)\nThis conversion is performed by the observation function <code>sols</code>.</p>\n<p>The call <code>sols m</code> typically terminates in constant time; the actual\ncomputation described by <code>m</code> takes place only when the elements of\nthe sequence <code>sols m</code> are demanded, and only insofar as necessary to\nproduce the elements that are demanded. For instance, applying\n<code>Seq.head</code> to the sequence <code>sols m</code> forces the computation to\nproceed up to the point where it is able to produce its first\nresult.</p>\n<p>The constructor functions <code>return</code> and <code>(&gt;&gt;=)</code> exist in all monads.\n(They are also known as <code>return</code> and <code>bind</code>.) <code>return</code> constructs a\ntrivial computation, which does nothing except return a value,\nwhereas <code>(&gt;&gt;=)</code> constructs the sequential composition of two\ncomputations. Together, they allow constructing the sequential\ncomposition of an arbitrary number of computations.</p>\n<ul><li><p>The computation <code>return v</code> succeeds exactly once with the value\n <code>v</code>. In other words, the sequence of values that it produces is\n the singleton sequence composed of just <code>v</code>.</p>\n</li><li><p>The computation <code>m1 &gt;&gt;= m2</code> is the sequential composition of the\n computations <code>m1</code> and <code>m2</code>. This composition operator is\n asymmetric: whereas its first argument <code>m1</code> is a computation of\n type <code>&#39;a m</code>, its second argument <code>m2</code> is a function of type <code>a -&gt;\n  &#39;b m</code>. Every value <code>x</code> produced by <code>m1</code> is passed to <code>m2</code>,\n yielding a computation <code>m2 x</code>. The sequence of values produced by\n <code>m1 &gt;&gt;= m2</code> is the concatenation of the sequences of values\n produced by the computations <code>m2 x</code>, where <code>x</code> ranges over the\n values produced by <code>m1</code>.</p>\n</li></ul>\n\n<p>The constructor functions <code>fail</code> and <code>choose</code> are specific of the\nnondeterminism monad. <code>fail</code> can be thought of as a 0-ary\ndisjunction, whereas <code>choose</code> is a binary disjunction. Together,\nthey allow constructing the disjunction of an arbitrary number of\ncomputations.</p>\n<ul><li><p>The computation <code>fail</code> returns no result. In other words, it\n produces an empty sequence of values.</p>\n</li><li><p>The sequence of values produced by <code>choose m1 m2</code> is the\n concatenation of the sequences of values produced by <code>m1</code>\n and by <code>m2</code>.</p>\n</li></ul>\n\n<p>The constructor function <code>delay</code> is used to delay the construction\nof a computation until the moment where this computation must be\nexecuted. Indeed, a difficulty that arises in a strict programming\nlanguage, such as OCaml, is that the arguments passed to constructor\nfunctions, such as <code>return</code> and <code>choose</code>, are evaluated immediately,\nat construction time. For instance, when one writes <code>choose e1 e2</code>,\nboth of the OCaml expressions <code>e1</code> and <code>e2</code> are evaluated before\n<code>choose</code> is invoked. If the evaluation of <code>e2</code> performs nontrivial\nwork, then this work arguably takes place too early: indeed, there\nshould be no need to evaluate <code>e2</code> until all of the values produced\nby <code>e1</code> have been demanded. To remedy this, one may write <code>choose e1\n(delay (fun () -&gt; e2))</code>. There, the expression <code>e2</code> is placed in the\nbody of an anonymous function, so <code>e2</code> is not evaluated immediately.\nThis anonymous function, whose type is <code>unit -&gt; &#39;a m</code>,\nis converted by <code>delay</code> to a computation of type <code>&#39;a m</code>.\nThis conversion requires no serious work;\nit is performed in constant time.\nAn intuitive reason why this is possible is that the type <code>&#39;a m</code>\nrepresents a <em>suspended</em> computation already,\nso the type <code>unit -&gt; &#39;a m</code> represents a <em>suspended suspended</em>\ncomputation, which is essentially the same thing; these types\nare interconvertible at no cost.</p>\n<p>The computations <code>e</code> and <code>delay (fun () -&gt; e)</code> produce the same\nsequence of results. The only difference between them is the time at\nwhich the evaluation of <code>e</code> takes place: either immediately, or only\nwhen the first result is demanded.</p>\n<p>It is worth noting that in a lazy language, such as Haskell, there\nis no need for <code>delay</code>. In such a language, when one writes <code>choose\ne1 e2</code>, the expressions <code>e1</code> and <code>e2</code> are <em>not</em> evaluated\nimmediately: they are evaluated only when their value is demanded.\nThus, the fact that <code>e2</code> need not be evaluated until all of the\nvalues produced by <code>e1</code> have been demanded goes without saying. The\nfact that there is no need for explicit uses of <code>delay</code> is arguably\na strength of lazy languages. At the same time, the fact that it is\nnot obvious where laziness plays a crucial role is arguably a\nweakness of lazy languages. In OCaml, in contrast, the explicit use\nof <code>delay</code> can be verbose, but helps understand what is going on.</p>\n<p>The constructor function <code>at_most_once</code> constructs a computation\nthat succeeds at most once. If <code>m</code> fails, then <code>at_most_once m</code>\nfails as well. If <code>m</code> produces a result <code>x</code>, possibly followed with\nmore results, then <code>at_most_once m</code> produces just the result <code>x</code>,\nand no more. This constructor can be used to commit to a result and\nprevent any other choices from being explored. In other words, it\nlimits the amount of backtracking that takes place.</p>\n<p>The constructor function <code>interleave</code> has the same type as <code>choose</code>.\nIt is a <em>fair disjunction</em> operator. An ordinary disjunction <code>choose\nm1 m2</code> gives priority to its left branch: it first lets <code>e1</code> produce\nas many results as it wishes, then gives control to <code>e2</code>. This can\nbe problematic: if <code>e1</code> produces a large number of results, then\n<code>e2</code> is tried very late. At an extreme, if <code>e1</code> produces an infinite\nnumber of results, then <code>e2</code> is never tried. For instance, supposing\nthat <code>evens</code> produces the infinite sequence <code>0, 2, 4, ...</code> and\n<code>odds</code> produces the infinite sequence <code>1, 3, 5, ...</code>,\nthe disjunction <code>choose evens odds</code> is equivalent to just <code>evens</code>,\nwhich seems counter-intuitive and undesirable. In contrast,\n<code>interleave</code> is defined in such a way that <code>interleave evens odd</code>\nproduces the infinite sequence <code>0, 1, 2, 3, 4, 5, ...</code>.\nIt is <em>fair</em> in the sense that each branch in turn is allowed\nto produce a result.</p>\n<p>The constructor function <code>(&gt;&gt;-)</code> has the same type as <code>(&gt;&gt;=)</code>.\nIt is a <em>fair sequencing</em> operator.\nIndeed, a problem with ordinary sequencing <code>(&gt;&gt;=)</code> is that\nit gives rise to ordinary (unfair) disjunctions.\nTo see this, suppose that the left-hand argument of <code>(&gt;&gt;=)</code>\nis a computation that produces <code>x</code> as its first result,\nfollowed with a computation <code>m1</code> that may produce more results.\nThus, this left-hand argument is equivalent to\n<code>choose (return x) m1</code>.\nWhen we sequentially compose it with a computation <code>m2</code>,\nwe obtain\n<code>(choose (return x) m1) &gt;&gt;= m2</code>,\nwhich is equivalent to\n<code>choose (return x &gt;&gt;= m2) (m1 &gt;&gt;= m2)</code>,\nwhich itself is the same as\n<code>choose (m2 x) (m1 &gt;&gt;= m2)</code>.\nWe are faced with an ordinary (unfair) disjunction.\nThe problem, again, is that if <code>m2 x</code> produces an\ninfinite number of results, then <code>m1 &gt;&gt;= m2</code>\nis never executed.\nTo remedy this problem,\nthe fair sequencing operator <code>(&gt;&gt;-)</code>\nis defined in such a way that\n<code>choose (return x) m1 &gt;&gt;- m2</code>\nis equivalent to\n<code>interleave (m2 x) (m1 &gt;&gt;- m2)</code>.\nThus, it gives rise to a fair disjunction.</p>\n<h2 id=\"The-Seq-API\">The <code>Seq</code> API</h2>\n\n<p>The type of <strong>on-demand sequences</strong> is defined in a module named <code>Seq</code>.\nBeginning with version 4.07,\nthis module is part of OCaml&#39;s standard library.</p>\n<pre><code>module Seq : sig\n\n  type &#39;a t = unit -&gt; &#39;a node\n\n  and +&#39;a node =\n  | Nil\n  | Cons of &#39;a * &#39;a t\n\n  val nil : &#39;a t\n  val cons: &#39;a -&gt; &#39;a t -&gt; &#39;a t\n  val singleton: &#39;a -&gt; &#39;a t\n\n  val map: (&#39;a -&gt; &#39;b) -&gt; &#39;a t -&gt; &#39;b t\n  val concat: &#39;a t -&gt; &#39;a t -&gt; &#39;a t\n  val flatten: &#39;a t t -&gt; &#39;a t\n\n  val take: int -&gt; &#39;a t -&gt; &#39;a t\n\n  val head: &#39;a t -&gt; &#39;a option\n\n  val of_list: &#39;a list -&gt; &#39;a t\n  val to_list: &#39;a t -&gt; &#39;a list\n\nend</code></pre>\n\n<p>This data type is closely related to the algebraic data type of lists.\nIndeed, if instead of <code>unit -&gt; &#39;a node</code> one had written just <code>&#39;a node</code>,\nthen this data type would have been isomorphic to the type of lists.</p>\n<p>The presence of <code>unit -&gt; ...</code> indicates that a sequence is in fact a function.\nCalling this function, by applying it to the value <code>()</code>, amounts to requesting\nthe head of the sequence. This head can be either <code>Nil</code>, which means that the\nsequence is empty, or <code>Cons (x, xs)</code>, which means that the first element of\nthe sequence is <code>x</code> and the remaining elements form another sequence <code>xs</code>. It\nis worth noting that <code>xs</code> is itself a function, so the elements of the\nsequence <code>xs</code> need not be explicitly computed until <code>xs</code> is applied.</p>\n<p>Sequences are closely related to <em>iterators</em> in object-oriented languages,\nsuch as C++ and Java. Yet, sequences are much simpler than iterators, for\ntwo reasons:</p>\n<ul><li><p>they involve no mutable state;</p>\n</li><li><p>they are just as easy to construct and to use as ordinary lists.</p>\n</li></ul>\n\n<p>The functions <code>nil</code>, <code>cons</code>, and <code>singleton</code> are constructor functions.</p>\n<p>The functions <code>map</code>, <code>concat</code>, <code>flatten</code> are analogues for sequences\nof the standard list functions <code>List.map</code>, <code>(@)</code>, and\n<code>List.flatten</code>.</p>\n<p>The function <code>Seq.take</code> truncates a sequence at a certain length:\n<code>Seq.take n xs</code> is a sequence that begins like <code>xs</code> but has at most\n<code>n</code> elements.</p>\n<p>The function <code>Seq.head</code> demands the first element of a sequence. If\nthe sequence begins with an element <code>x</code>, then <code>Some x</code> is returned;\notherwise, <code>None</code> is returned. This forces enough computation to\ntake place so as to be able to produce the first element of the\nsequence.</p>\n<p>The functions <code>Seq.of_list</code> and <code>Seq.to_list</code> convert between lists\nand sequences, both ways. One must keep in mind that applying\n<code>Seq.to_list</code> to a sequence <code>xs</code> causes all of its elements to be\ndemanded: that is, it forces all of the suspended computations to\ntake place. In particular, if <code>xs</code> is an infinite sequence, then\n<code>Seq.to_list xs</code> does not terminate.</p>\n<h2 id=\"Implementing-the-Nondeterminism-Monad\">Implementing the Nondeterminism Monad</h2>\n\n<p>In this exercise, we <strong>implement</strong> the nondeterminism monad by\nrepresenting a computation as a sequence of results.\nThus, we adopt the following type definition:</p>\n<pre><code>  type &#39;a m = &#39;a Seq.t</code></pre>\n\n<p>This is the simplest possible manner of implementing computations.\nIndeed, we wrote above that a computation <strong>produces</strong> a sequence\nof results. Here, we decide that a computation <strong>is</strong> a sequence\nof results.</p>\n<p><strong>Question 1.</strong> Implement the four constructor functions\n<code>return</code>, <code>(&gt;&gt;=)</code>, <code>fail</code>, and <code>choose</code>. Implement the\nobservation function <code>sols</code>.</p>\n<p><em>Hint.</em> Think of the sequence of results that the computations\n<code>return x</code>, <code>m1 &gt;&gt;= m2</code>, <code>fail</code>, and <code>choose m1 m2</code> are supposed to\nproduce. Then, use the facilities provided by the module <code>Seq</code> to\nbuild these sequences. Each of these five functions can be\nimplemented in one very short line.</p>\n<p><em>Note.</em> The automated grading system first tests whether your code\nis functionally correct. To do so, it builds a computation using the\nfour constructor functions, converts it to a sequence via <code>sols</code>,\nand tests whether this produces the expected sequence of results.\nThen, it tests whether your code is lazy, that is, whether each\nresult is computed as late as possible. To do so, it uses a\nconstructor function <code>tick: &#39;a m -&gt; &#39;a m</code> whose effect is as\nfollows: the computation <code>tick m</code> produces the same sequence of\nresults as the computation <code>m</code>, and, when executed, increments a\nglobal counter named <code>work</code>. Thus, by executing computations that\ncontain <code>tick</code>s, the automated grading system can tell when\ncomputations are executed. For instance, demanding just the first\nresult of the computation\n<code>choose (tick (return 0)) (tick (return 1))</code> should cause <code>work</code> to\nbe incremented just once, not twice.</p>\n<p><strong>Question 2.</strong> Implement the constructor function <code>at_most_once</code>.</p>\n<p><strong>Question 3.</strong> Implement the constructor function <code>interleave</code>.</p>\n<p><em>Hint.</em> As a first step, you may first implement\n<code>interleave: &#39;a list -&gt; &#39;a list -&gt; &#39;a list</code>\nas an operation on lists. Perform case analysis\non the first argument: either it is empty, or\nit is nonempty.</p>\n<p><em>Hint.</em> Then, adapt your code so that <code>interleave</code> has the desired\ntype <code>&#39;a m -&gt; &#39;a m -&gt; &#39;a m</code>. The constructor function <code>delay</code> can be\nuseful.</p>\n<p><strong>Question 4.</strong> Implement the constructor function <code>(&gt;&gt;-)</code>.</p>\n<p><em>Hint.</em> Again, perform case analysis on the first argument.</p>\n<h2 id=\"Notes\">Notes</h2>\n\n<p>This exercise is based on the paper\n<strong>&quot;Deriving backtracking monad transformers&quot;</strong>\n<a href=\"https://www.cs.ox.ac.uk/ralf.hinze/publications/ICFP00.ps.gz\" target=\"_blank\" rel=\"noopener noreferrer\">(Hinze, 2000)</a>\nand on the first part of the paper\n<strong>&quot;Backtracking, Interleaving, and Terminating Monad Transformers&quot;</strong>\n<a href=\"http://okmij.org/ftp/papers/LogicT.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">(Kiselyov, Shan, Friedman, and Sabry, 2005)</a>\n(up to section 4.2).</p>\n<p>It is important to note that these papers use Haskell, a lazy programming\nlanguage, where computations are suspended by default. Thus, where they use\nlists, we cannot use OCaml lists; we must instead use OCaml sequences.\nFurthermore, we must sometimes be careful to explicitly delay computations:\nour <code>delay</code> constructor serves this purpose.</p>\n<p>These papers go beyond us by implementing nondeterminism not just as a monad,\nbut as a <strong>monad transformer</strong>. Monad transformers can be composed. For\ninstance, by composing the nondeterminism monad transformer and the state\nmonad transformer, one can describe computations that involve both\nnondeterminism and mutable state.</p>\n<p>Implementing nondeterministic computations directly as Haskell lists or as\nOCaml sequences, as we do in this exercise, is the simplest implementation. It\nis in agreement with our intuitive understanding of computations: indeed, we\nlike to think of a nondeterministic computation as a process that produces a\nsequence of results.</p>\n<p>Unfortunately, this implementation is inefficient: because <code>choose</code> is\nimplemented as sequence concatenation, the cost of a single use of <code>choose</code> is\nlinear in the number of results produced by the left-hand side. In other\nwords, in a binary tree of <code>choose</code> constructors, transmitting a result from a\nleft child to its father costs O(1). In the worst case, executing the left-leaning\ncomputation <code>choose (choose (choose (... (choose 0 1) ...) (n-2)) (n-1)) n</code>\nhas quadratic cost O(n^2), even though it produces only O(n) results.</p>\n<p>In a\n<a onclick=\"top.location='/exercises/nondet_monad_cont/';\" href=''>companion exercise</a>,\nwe switch to a more efficient implementation,\nbased on the use of success and failure <strong>continuations</strong>.</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "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",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAADwAAAAPAAAANQAAADKgJ1ByZXBhcmWgwqAkVE9ETwBUCAAAIACQoyNleG5HQJBAQEGwwCZfbm9uZV9AQAD/BAJBQKEEDkBCQECElaa+AAAA1gAAAB4AAABzAAAAXKCgJ1ByZXBhcmWQMCY7/eJ3ZSLPOJL3xKqzVdqgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoCdQcmVsdWRlkDCeddG+ayKbpWIN2mxlqWHtoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "solution_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAABC4AAAD+AAADjQAAA3ugKFNvbHV0aW9uoLCgJnJldHVybgEAgNDAwUDAkJAhYQIF9eEAQADWwLOhkJInUHJlbHVkZSFtoAQMQJBAAgX14QBAANdAAgX14QBAANhAsMAJRC4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9mcG90dGllci9ub25kZXRfbW9uYWRfc2VxL3NvbHV0aW9uLm1sQUBEwAQCQUBKQEChBBpAQKCwoCM+Pj0BAIHQwMFAwLOhBBUhbaDAkJAhYQIF9eEAQADaQJBAAgX14QBAANnAwUDAwUAECcCzoQQjIW2gwJCQIWICBfXhAEAA3UCQQAIF9eEAQADbQAIF9eEAQADcwLOhBC0hbaAECkCQQAIF9eEAQADeQAIF9eEAQADfQAIF9eEAQADgQLDABCpEcHTABCtEcHlAQKEEQ0JAoLCgJGZhaWwBAILQwLOhBDwhbaDAkJAhYQIF9eEAQADhQJBAAgX14QBAAOJAsMAEPUcBAIQBAIjABD5HAQCEAQCMQEChBFZFQKCwoCZjaG9vc2UBAIPQwMFAwLOhBFEhbaDAkJAhYQIF9eEAQADlQJBAAgX14QBAAOPAwUDAs6EEXSFtoAQMQJBAAgX14QBAAOTAs6EEYyFtoAQSQJBAAgX14QBAAOZAAgX14QBAAOdAAgX14QBAAOhAsMAEYEoBAKEBAKXABGFKAQChAQCrQEChBHlGQKCwoCRzb2xzAQCE0MDBQMCzoQR0IW2gwJCQIWECBfXhAEAA6kCQQAIF9eEAQADpwLOhoQR/I1NlcSF0oAQMQJBAAgX14QBAAOtAAgX14QBAAOxAsMAEfU0BAOEBAOXABH5NAQDhAQDpQEChBJZJQKCwoCxhdF9tb3N0X29uY2UBAIXQwMFAwLOhBJEhbaDAkJAhYQIF9eEAQADuQJBAAgX14QBAAO3As6EEmyFtoAQKQJBAAgX14QBAAO9AAgX14QBAAPBAsMAEmFABAQcBAQvABJlQAQEHAQEXQEChBLFLQKCwoCppbnRlcmxlYXZlAQCG0MDBQMCzoQSsIW2gwJCQIWECBfXhAEAA80CQQAIF9eEAQADxwMFAwLOhBLghbaAEDECQQAIF9eEAQADywLOhBL4hbaAEEkCQQAIF9eEAQAD0QAIF9eEAQAD1QAIF9eEAQAD2QLDABLtTAQE8AQFEwAS8UwEBPAEBTkBAoQTUTUCgsKAjPj4tAQCH0MDBQMCzoQTPIW2gwJCQIWECBfXhAEAA+ECQQAIF9eEAQAD3wMFAwMFABAnAs6EE3SFtoMCQkCFiAgX14QBAAPtAkEACBfXhAEAA+UACBfXhAEAA+sCzoQTnIW2gBApAkEACBfXhAEAA/EACBfXhAEAA/UACBfXhAEAA/kCwwATkXAECAQECCcAE5VwBAgEBAg5AQKEE/VJAQISVpr4AAADzAAAAIwAAAIUAAABroKAoU29sdXRpb26QMFUDwmAvdof31LiGaJo4JjOgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoCdQcmVwYXJlkDAmO/3id2UizziS98Sqs1XaoKAnUHJlbHVkZZAwnnXRvmsim6ViDdpsZalh7aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "test_cmi": "",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAH8FQAAADMAAAAFgAAAEMAAAALAAAAQAAAAAAAAAAoAAAAAQAAABYAAABDAAAAfwAAAAEAAAAbAAAASQAAABcAAAAoAAAAAQAAAAAAAAAcAAAAKwAAAAIAAADz////GwAAACUAAAACAAAAYwAAABsAAABJAAAAKAAAAAEAAAApAAAAKgAAAAEAAABjAAAAaAAAAAwAAAAmAAAABAAAACkAAAAqAAAAAgAAAGMAAAAMAAAAIQAAAAoAAABWAAAADAAAAAAAAABEAAAADAAAADIAAAAiAAAACwAAAEMAAAANAAAAIQAAAEAAAAAAAAAAKAAAAAQAAAApAAAAKgAAAAIAAABjAAAACwAAACEAAAAKAAAAVgAAAAwAAAACAAAACwAAAEQAAAAyAAAAIgAAAAsAAABDAAAAQAAAAAAAAAAoAAAABAAAAGMAAAANAAAAJQAAAAUAAAApAAAAKgAAAAEAAABjAAAACwAAACEAAAAKAAAAVgAAAAsAAABjAAAACwAAAEQAAAAyAAAAIQAAAAwAAABDAAAAGwAAACcAAAAGAAAAKAAAAAMAAABjAAAAHgAAAAQAAAAhAAAACgAAAFYAAAAMAAAAAAAAAEQAAAAcAAAAfwAAAP////8bAAAAIgAAAAsAAABDAAAAQAAAAAAAAAAoAAAAAgAAACkAAAAqAAAAAQAAAAAAAACEAAAAAAAAAAQAAAAWAAAAKAAAAAIAAAABAAAACwAAADIAAAArAAAAAwAAAN3///8oAAAAAgAAACkAAAAqAAAAAQAAAAAAAABWAAAACQAAAAAAAABEAAAAMgAAACEAAAALAAAAQwAAAEAAAAAAAAAAKAAAAAIAAABjAAAACwAAACEAAAAKAAAAVgAAAAkAAAAAAAAARAAAADIAAAAhAAAACwAAAEMAAABAAAAAAAAAACgAAAACAAAAYwAAAAsAAAAhAAAACgAAAFYAAAAFAAAAAAAAAEMAAAA/AAAAAAAAACgAAAACAAAAFgAAAAsAAAAcAAAAJgAAAAMAAAApAAAAKgAAAAIAAAABAAAACwAAAEAAAAAAAAAAKAAAAAMAAABjAAAAKAAAAAEAAAArAAAAAAAAAPv///8JAAAAKwAAAAAAAADv////CgAAAAwAAAArAAAAAgAAAOT///8JAAAALAAAAAEAAAAAAAAAS////ywAAAABAAAAAAAAAF3///8AAAAALAAAAAEAAAABAAAAcP///wUAAAAsAAAAAQAAAAEAAACU////KwAAAAAAAADC////CQAAACwAAAABAAAAAAAAAJ7///8sAAAAAQAAAAAAAACp////AAAAAAwAAAAOAAAAEAAAABIAAAAIAAAAEgAAAAoAAAASAAAADAAAABIAAAAOAAAAEgAAABAAAAASAAAAEgAAAD4AAAAKAAAAAAAAABMAAAAKAAAACQAAACsAAAAAAAAAEP///2gAAAA/AAAAAAAAAAoAAAArAAAAAQAAAAP///8LAAAADQAAACsAAAACAAAA9v7//wwAAAArAAAAAQAAAOL+//8KAAAADAAAAA4AAAAQAAAAEgAAAAgAAAASAAAACgAAAD4AAAAGAAAAAAAAABMAAAAGAAAAOQAAAAAAAABjAAAAXQAAAAAAAAA2AAAAAAAAAEAAAAD4AAAACgAAAD8AAAAAAAAAEwAAAAEAAAA5AAAAAAAAAFQAAACDAAAAYwAAAB4AAAAFAAAAIQAAAAoAAABWAAAADwAAAAAAAABEAAAAHgAAAAYAAAAeAAAABAAAACIAAAALAAAAQwAAABsAAAAhAAAAHAAAACYAAAAEAAAAGQAAAAYAAAAoAAAAAgAAACkAAAAqAAAAAQAAAAEAAAALAAAAMgAAABwAAAAbAAAAKwAAAAUAAADd////OAAAAAAAAAABAAAAJQAAAAMAAABjAAAAHgAAAAUAAAAhAAAACgAAAFYAAAAQAAAAGQAAAAYAAAALAAAARAAAAB4AAAAEAAAAIgAAAAsAAABDAAAAHgAAAAYAAAAhAAAAHAAAACYAAAAEAAAAFgAAACgAAAACAAAAKQAAACoAAAABAAAAAQAAAAsAAAAyAAAAHAAAABsAAAArAAAABQAAAN3///84AAAAAAAAAAEAAAAlAAAAAwAAAAAAAABpAAAAOAAAAAAAAAAAAAAARwAAAAYAAAAmAAAAAwAAAAAAAAAoAAAAAQAAACkAAAAqAAAAAQAAAAEAAAALAAAAOAAAAAAAAAAAAAAARwAAAAQAAAAmAAAABAAAACkAAAAqAAAAAQAAAAAAAAAMAAAAOAAAAAAAAAAAAAAARgAAACIAAAA4AAAAAAAAAAAAAABHAAAABQAAACUAAAADAAAAAAAAADgAAAAAAAAAAAAAAEUAAAAlAAAAAgAAACsAAAAAAAAA9////wkAAAArAAAAAAAAAOP///84AAAAAAAAAAAAAABDAAAACQAAACsAAAAAAAAAz////wkAAAArAAAAAAAAAMf///8JAAAAKwAAAAAAAAC6////DAAAABAAAAAsAAAAAQAAAAIAAAB8////AAAAAA8AAAAsAAAAAQAAAAIAAACf////AAAAAAwAAAAOAAAAEAAAABIAAAAIAAAAEgAAAAoAAAASAAAADAAAABIAAAAOAAAAPgAAAAgAAAAAAAAAEwAAAAgAAAA5AAAAAAAAAISVpr4AAAOeAAAAlgAAAjEAAAHf0KAIAAAoACdQcmVsdWRlUAEEwKCgkpIEBQEEvECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQMkDCeddG+ayKbpWIN2mxlqWHtoKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUBAQEBAQKAIAAAoACdQcmVwYXJlAQTQeKCgkzBjYW1sX2ZyZXNoX29vX2lkSKCgkJCyLFByZXBhcmUuVE9ET7DACUMuL19sZWFybi1vY2FtbC1idWlsZC9leGVyY2lzZXMvZnBvdHRpZXIvbm9uZGV0X21vbmFkX3NlcS9wcmVwYXJlLm1sQUBAwAQCQUBOQEBQoKCSkgQTdECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQakDAmO/3id2UizziS98Sqs1XaoKAnUHJlbHVkZZAwnnXRvmsim6ViDdpsZalh7aCgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAQEBAQECgCAAAKAAoU29sdXRpb24BBQgBAuigoJGSJ1ByZWx1ZGUBAJygoJEEBQEBQKCgkQQIAQFcoKCRBAsBAZigoJEEDgEByKCgkQQRAQHcoKCRBBQBAfygoJEEFwECMKCgkpIEHwEC5ECgoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoAQmkDBVA8JgL3aH99S4hmiaOCYzoKAnUHJlcGFyZZAwJjv94ndlIs84kvfEqrNV2qCgJ1ByZWx1ZGWQMJ510b5rIpulYg3abGWpYe2goDhMZWFybm9jYW1sX2ludGVybmFsX2ludGaQMPt1gYHblLIMsLmRaJHUpougoDNMZWFybm9jYW1sX2NhbGxiYWNrkDDUpYi3TxeTmj0JaE3dOIohoKA4Q2FtbGludGVybmFsRm9ybWF0QmFzaWNzkDC2xmlJVeEAAa7SZ1cRBKlhQKAEPkBAQEBAQEBAQEA=",
        "js": "function\ndynload(C){\"use strict\";var\nD={},d=C.jsoo_runtime,j=d.caml_register_global;function\na(a,b){return a.length==1?a(b):d.caml_call_gen(a,[b])}function\nf(a,b,c){return a.length==2?a(b,c):d.caml_call_gen(a,[b,c])}var\ny=d.caml_string_of_jsbytes(\"Prepare.TODO\");function\ng(a){return 0}function\nt(b,a,c){return[0,b,a]}function\nu(a){return function(b){return[0,a,g]}}function\nk(c,e,h){var\nb=a(e,0);if(b)var\nf=b[2],g=function(a){return k(c,f,a)},d=[0,a(c,b[1]),g];else\nvar\nd=b;return d}function\nh(d,c,g){var\nb=a(d,0);if(b){var\ne=b[2],f=function(a){return h(e,c,a)};return[0,b[1],f]}return a(c,0)}function\nl(c,g){var\nb=a(c,0);if(b){var\nd=0,e=b[2],f=function(a){return l(e,a)};return h(b[1],f,d)}return b}function\nm(c,e){return 0===c?g:function(g){var\nb=a(e,0);if(b)var\nf=m(c-1|0,b[2]),d=[0,b[1],f];else\nvar\nd=b;return d}}function\nv(c){var\nb=a(c,0),d=b?[0,b[1]]:b;return d}function\nn(a,e){if(a)var\nc=a[2],d=function(a){return n(c,a)},b=[0,a[1],d];else\nvar\nb=a;return b}function\no(d){var\nb=a(d,0);if(b)var\ne=o(b[2]),c=[0,b[1],e];else\nvar\nc=b;return c}var\nb=[0,g,t,u,k,h,l,m,v,n,o];function\ne(a,b){return f(a,0,0)}var\nc=[0,0];function\nw(a){c[1]=0;return 0}function\nx(a){function\nb(b){c[1]=c[1]+1|0;return a}return function(a){return e(b,a)}}j(1,[0,b,e,c,w,x,function(a){return[0,a,c[1]]}],\"Prelude\");j(2,[0,[248,y,d.caml_fresh_oo_id(0)]],\"Prepare\");function\np(c){return a(b[3],c)}function\nz(d,c){var\ne=f(b[4],c,d);return a(b[6],e)}var\nq=b[1];function\nr(c,a){return f(b[5],c,a)}function\nA(a){return a}function\nB(a){return f(b[7],1,a)}function\ni(d,c){function\nb(f){var\nb=a(d,0);if(b){var\ne=i(c,b[2]);return r(p(b[1]),e)}return c}return function(a){return e(b,a)}}function\ns(d,c){function\nb(f){var\nb=a(d,0);if(b){var\ne=s(b[2],c);return i(a(c,b[1]),e)}return q}return function(a){return e(b,a)}}j(3,[0,p,z,q,r,A,B,i,s],\"Solution\");return D}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(e8){\"use strict\";var\ne9={},cd=\"is incorrect.\",cf=\"%d\",ck=\"interleave\",cc=\"at_most_once\",cj=\"return\",k=\"m\",h=\"mono\",x=\"Test\",ci=\">>=\",a6=1000,cb=\"sols\",ce=\">>-\",ca=\"fail\",b$=\"choose\",ch=128,y=\"./_learn-ocaml-build/exercises/fpottier/nondet_monad_seq/test.ml\",cg=248,n=e8.jsoo_runtime,aw=n.caml_equal,b9=n.caml_fresh_oo_id,b8=n.caml_ml_string_length,a=n.caml_string_of_jsbytes,b_=n.caml_wrap_exception;function\nb(a,b){return a.length==1?a(b):n.caml_call_gen(a,[b])}function\nc(a,b,c){return a.length==2?a(b,c):n.caml_call_gen(a,[b,c])}function\nt(a,b,c,d){return a.length==3?a(b,c,d):n.caml_call_gen(a,[b,c,d])}function\ns(a,b,c,d,e){return a.length==4?a(b,c,d,e):n.caml_call_gen(a,[b,c,d,e])}var\nj=n.caml_get_global_data(),bF=[0,[0,a(\"Something is wrong.\")],0],M=j.Stdlib__buffer,A=j.Assert_failure,bA=j.Match_failure,f=j.Stdlib__list,d=j.Ast_helper,E=j.Ty,l=j.Prelude,w=j.Solution,o=j.Test_lib,b0=j.Learnocaml_report,L=j.Stdlib__printf,bH=j.Stdlib__char,ae=j.Stdlib__string,bJ=j.Stdlib__array,aM=j.Prepare,S=j.Stdlib,am=j.Stdlib__printexc,aH=j.Stdlib__hashtbl,a7=j.Stdlib__random,z=j.Learnocaml_internal,ax=f[19],cl=f[17];b(a7[1],0);var\nK=S[19],cp=[0,a(y),238,6],cW=[0,a(y),665,26],dU=[0,a(y),1091,6],e6=a(\"Question 4\"),eY=a(ce),eZ=[0,a(h)],e0=[0,a(k)],e1=[0,a(h)],e2=[0,a(k)],e3=[0,a(h)],e4=[0,a(h)],e5=[0,a(k)],eX=a(\"Question 3\"),eQ=a(ck),eR=[0,a(h)],eS=[0,a(k)],eT=[0,a(h)],eU=[0,a(k)],eV=[0,a(h)],eW=[0,a(k)],eP=a(\"Question 2\"),eK=a(cc),eL=[0,a(h)],eM=[0,a(k)],eN=[0,a(h)],eO=[0,a(k)],eJ=a(\"Question 1\"),ei=a(cb),ej=[0,a(h)],ek=[1,[0,a(\"Seq\")],a(\"t\")],el=[0,a(h)],em=[0,a(k)],en=a(b$),eo=[0,a(h)],ep=[0,a(k)],eq=[0,a(h)],er=[0,a(k)],es=[0,a(h)],et=[0,a(k)],eu=a(ca),ev=[0,a(h)],ew=[0,a(k)],ex=a(ci),ey=[0,a(h)],ez=[0,a(k)],eA=[0,a(h)],eB=[0,a(k)],eC=[0,a(h)],eD=[0,a(h)],eE=[0,a(k)],eF=a(cj),eG=[0,a(h)],eH=[0,a(k)],eI=[0,a(h)],eg=a(\"Laziness\"),eh=a(\"Functional correctness\"),ee=[0,[0,a(\"Some computations take place too early.\")],0],ef=a(\"The code seems lazy.\"),ed=[0,[11,a(\"The code seems correct. Tested \"),[4,0,0,0,[11,a(\" scenarios.\"),0]]],a(\"The code seems correct. Tested %d scenarios.\")],ec=[0,a(y),1243,14],dY=a(ca),dZ=a(\"delay\"),d0=a(\"tick\"),d1=a(cj),d2=a(ck),d3=a(b$),d4=a(cc),d5=a(ce),d7=a(ci),d6=[0,[2,0,[11,a(\" fun \"),[2,0,[11,a(\" ->\"),0]]]],a(\"%s fun %s ->\")],d$=a(\"snapshot\"),ea=a(\"Seq.map\"),d_=a(cb),d9=a(\"Seq.take\"),d8=a(\"Seq.to_list\"),dW=[0,a(y),1107,4],dV=[0,a(y),1111,4],dP=[0,0,[0,1,0]],dI=[0,[11,a(\"(* value: *) \"),[4,0,0,0,[11,a(\", (* work: *) \"),[4,0,0,0,0]]]],a(\"(* value: *) %d, (* work: *) %d\")],du=a(\"Some\"),dv=a(\"None\"),dp=a(\"true\"),dq=a(\"false\"),dn=[0,[12,39,[2,0,[12,39,0]]],a(\"'%s'\")],dl=[0,[4,0,0,0,0],a(cf)],dd=[0,[12,34,[2,0,[12,34,0]]],a('\"%s\"')],c8=[0,a(\"The following expression:\")],c7=[0,[0,a(cd)],[0,0,0]],c5=[0,a(\"This is invalid. Producing the following result is valid:\")],c6=[0,a(\"This is invalid. Raising the following exception is valid:\")],c3=[0,a(\"produces the following result:\")],c4=[0,a(\"raises the following exception:\")],c1=[0,[0,a(\"seems correct.\")],0],c2=[0,1],cY=[0,[0,a(cd)],0],cZ=[0,[0,a(\"is correct.\")],0],c0=[0,1],cV=[0,a(y),656,24],cT=[0,[0,a(\"Not yet implemented.\")],0],cU=[0,a(\"The following exception is raised and never caught:\")],cD=[0,a(y),339,2],cC=a(\"|>\"),cz=a(\"|]\"),cA=a(\"[| \"),cx=a(\"]\"),cy=a(\"[\"),cv=a(\")\"),cw=a(\"(\"),cu=[0,[4,0,0,0,0],a(cf)],co=[0,a(y),169,2],cn=[0,a(y),114,2],cr=a(\",\"),ct=a(\";\"),cE=a(\"Test.SymSeq.OutOfBounds\"),cR=a(\"Test.Fail\"),de=a(\"string\"),df=a(\"learnocaml_autoregister_string_5F1023\"),dg=a(x),dh=a(\"int\"),di=a(\"learnocaml_autoregister_int_7AFD23\"),dj=a(x),dr=a(\"bool\"),ds=a(\"learnocaml_autoregister_bool_9B8556\"),dt=a(x),dw=a(\"option\"),dx=a(\"learnocaml_autoregister_option_42BB52\"),dy=a(x),dz=a(\"array\"),dA=a(\"learnocaml_autoregister_array_CCABEA\"),dB=a(x),dC=a(\"list\"),dD=a(\"learnocaml_autoregister_list_DD682E\"),dE=a(x),dF=a(\"list_int\"),dG=a(\"learnocaml_autoregister_list_int_4BCC67\"),dH=a(x),dJ=a(\"int_int\"),dK=a(\"learnocaml_autoregister_int_int_4438D8\"),dL=a(x),dM=a(\"list_int_int\"),dN=a(\"learnocaml_autoregister_list_int_int_5A61C5\"),dO=a(x);function\nay(b,a){if(b!==K&&a!==K)return b+a|0;return K}function\ncm(b,a){return b<=a?1:0}function\nT(c){var\na=c;for(;;){if(typeof\na===\"number\")return 0===a?0:K;else\nswitch(a[0]){case\n0:var\nb=a[4];break;case\n1:var\nb=a[1];break;case\n2:var\na=a[1];continue;default:return a[1]}return b}}var\nac=0;function\na8(d,c,a,b){return 0===a?ac:[0,d,c,a,b]}function\naz(a,b){return a8(a,0,b8(a),b)}function\na9(d){var\nb=0,a=0;for(;;){if(b8(d)<=a)return b;var\nc=n.caml_string_unsafe_get(d,a),e=ch<=c?224<=c?240<=c?4:3:2:1,b=b+1|0,a=a+e|0;continue}}function\ni(a){return az(a,a9(a))}function\nad(a){return c(L[10],i,a)}function\naA(a){if(10===a)throw[0,A,cn];return az(c(ae[1],1,a),1)}var\naf=aA(32),a_=aA(59),a$=1;function\nba(a){return 0===a?ac:1===a?af:[1,a]}function\nbb(a,d){var\nc=0;if(typeof\na!==\"number\"&&2===a[0]){var\nb=a[1];c=1}if(!c)var\nb=a;return[2,b,d]}function\nag(a){return bb(ba(a),a$)}var\nbc=ag(0),bd=ag(1);function\nu(a){return 0===a?bc:1===a?bd:ag(a)}function\ng(b,a){if(typeof\nb===\"number\"&&!b)return a;if(typeof\na===\"number\"&&!a)return b;var\nc=T(a);return[3,ay(T(b),c),b,a]}function\nbe(b,a){if(0<=b)return[4,T(a),b,a];throw[0,A,co]}function\nv(a){var\nb=T(a);return b===K?a:[5,b,a]}var\naB=c(ae[1],80,32),bf=80;function\naC(b,c){var\na=c;for(;;){if(0<a){if(a<=80)return s(M[16],b,aB,0,a);s(M[16],b,aB,0,bf);var\na=a-80|0;continue}return 0}}function\nbg(b,j,i,h){var\ne=j,d=i,a=h;for(;;)if(typeof\na===\"number\"){if(0===a)return 0;if(d)throw[0,A,cp];c(M[10],b[3],10);aC(b[3],e);b[2]=e;return 0}else\nswitch(a[0]){case\n0:s(M[16],b[3],a[1],a[2],a[3]);b[2]=b[2]+a[4]|0;return 0;case\n1:var\nf=a[1];aC(b[3],f);b[2]=b[2]+f|0;return 0;case\n2:var\nk=d?a[1]:a[2],a=k;continue;case\n3:bg(b,e,d,a[2]);var\na=a[3];continue;case\n4:var\ne=e+a[2]|0,a=a[3];continue;default:if(d)var\ng=d;else\nvar\nl=b[1],g=ay(b[2],a[1])<=l?1:0;var\nd=g,a=a[2];continue}}function\nbh(d,c){var\na=b(M[1],512);bg([0,d,0,a],0,0,c);return b(M[2],a)}function\naD(e,a){if(a)var\ng=a[2],h=function(a){return[0,e,[0,a,0]]},i=c(f[19],h,g),j=b(f[14],i),d=[0,a[1],j];else\nvar\nd=a;return d}function\nU(a){return t(f[26],g,a,ac)}var\ncq=u(1),bi=g(i(cr),cq);function\nbj(a){return U(aD(bi,a))}var\ncs=u(1),bk=g(i(ct),cs);function\nbl(a){return U(aD(bk,a))}function\nF(a){return b(ad(cu),a)}function\nah(a){var\nb=u(0);return g(be(2,g(u(0),a)),b)}function\nN(a){var\nb=i(cv),c=g(ah(a),b);return g(i(cw),c)}function\nbm(a){var\nb=i(cx),c=g(ah(a),b);return g(i(cy),c)}function\nbn(a){var\nb=i(cz),c=g(ah(a),b);return g(i(cA),c)}function\nbo(a){return v(N(bj(a)))}function\nbp(a){return v(bm(bl(a)))}function\nbq(b,a){if(a){var\nc=g(af,bo(a));return g(i(b),c)}return i(b)}function\nbr(a){if(a)var\nd=a[2],e=c(ax,function(a){return g(v(u(1)),a)},d),b=[0,a[1],e];else\nvar\nb=a;return b}function\nbs(a){return v(U(br(a)))}function\np(b,a){return bs([0,i(b),a])}function\ncB(b,a){return N(p(b,a))}function\naE(d,a){if(0<b(f[1],a)){var\nc=b(f[9],a),e=b(f[6],c),h=b(f[9],e),j=b(f[5],c),k=g(af,p(d,h)),l=g(i(cC),k);return v(g(j,g(u(1),l)))}throw[0,A,cD]}function\nB(c,a){return bh(70,v(b(c,a)))}var\naF=[cg,cE,b9(0)];function\nr(a){return typeof\na===\"number\"?0:0===a[0]?1:a[1]}function\nO(a){return 0===r(a)?1:0}var\nai=0;function\ncF(a){return[0,a]}function\nbt(b,a){if(O(b))return a;if(O(a))return b;var\nc=r(a);return[1,r(b)+c|0,b,a]}function\ncG(a){return t(f[25],bt,ai,a)}function\ncH(b,a){if(!O(b)&&!O(a)){var\nc=r(a);return[2,n.caml_mul(r(b),c),b,a]}return ai}function\ncI(b,a){return O(a)?ai:[3,r(a),b,a]}function\nV(h,g){var\na=h,c=g;for(;;)if(typeof\na===\"number\")throw aF;else\nswitch(a[0]){case\n0:if(0===c)return a[1];throw aF;case\n1:var\ne=a[2],f=r(e);if(c<f){var\na=e;continue}var\na=a[3],c=c-f|0;continue;case\n2:var\nd=a[3],i=n.caml_mod(c,r(d)),j=n.caml_div(c,r(d)),k=V(d,i);return[0,V(a[2],j),k];default:var\nl=V(a[3],c);return b(a[2],l)}}function\naj(e,d){var\na=e,c=d;for(;;)if(typeof\na===\"number\")return 0;else\nswitch(a[0]){case\n0:return b(c,a[1]);case\n1:aj(a[2],c);var\na=a[3];continue;case\n2:var\nf=a[3],g=function(d,c){return function(a){return aj(c,function(c){return b(d,[0,a,c])})}}(c,f),a=a[2],c=g;continue;default:var\nh=a[2],i=function(c,d){return function(a){return b(c,b(d,a))}}(c,h),a=a[3],c=i;continue}}function\nbu(c){var\na=[0,0];aj(c,function(b){a[1]=[0,b,a[1]];return 0});return b(f[9],a[1])}var\nm=[0,aF,r,O,ai,cF,bt,cG,cH,cI,V,aj,bu,function(c,a){if(r(a)<=c)return bu(a);var\ne=0,i=1;if(c<1)var\nf=e;else{var\nd=i,g=e;for(;;){var\nj=r(a),h=[0,V(a,b(a7[5],j)),g],k=d+1|0;if(c!==d){var\nd=k,g=h;continue}var\nf=h;break}}return f}];function\naG(g){var\nd=c(aH[1],0,ch);function\ne(b){try{var\na=c(aH[6],d,b);return a}catch(a){a=b_(a);if(a===S[8]){var\nf=c(g,e,b);t(aH[5],d,b,f);return f}throw a}}return e}function\naI(d,c,a){return b(d,[0,c,a])}function\nbv(b,a){return c(b,a[1],a[2])}function\nP(a){var\nc=aG(function(c){var\nd=b(a,function(a,b){return aI(c,a,b)});return function(a){return bv(d,a)}});return function(a,b){return aI(c,a,b)}}function\naJ(a){return m[4]}function\ncJ(b,a){return 0===a?b:m[4]}function\nW(c,a){return 0===a?b(m[5],c):m[4]}function\nbw(c,a){return 0===a?m[4]:b(c,a-1|0)}function\nX(e,d,a){var\nf=b(d,a),g=b(e,a);return c(m[6],g,f)}function\nak(a,b){var\nc=a<=b?1:0,d=c?[0,a,ak(a+1|0,b)]:c;return d}function\naK(g,e,a){var\nd=ak(0,a);function\nh(d){var\nf=b(e,a-d|0),h=b(g,d);return c(m[8],h,f)}var\ni=c(f[19],h,d);return b(m[7],i)}function\nbx(f,e,d){if(0===(d%2|0)){var\ng=d/2|0,h=b(e,g),i=b(f,g);return c(m[8],i,h)}var\na=d/2|0,j=b(e,a),k=b(f,a+1|0),l=c(m[8],k,j),n=b(e,a+1|0),o=b(f,a),p=c(m[8],o,n);return c(m[6],p,l)}function\nby(e,d,a){var\nf=b(d,a);return c(m[9],e,f)}function\ncK(a){var\nb=c(f[19],W,a);return t(f[25],X,aJ,b)}var\ncL=1;function\ncM(a){return W(cL,a)}var\ncN=0;function\ncO(a){return W(cN,a)}function\ncP(a){return X(cO,cM,a)}function\ncQ(a){function\nb(a){return[0,a[1],a[2]]}return aG(function(c){function\nd(b){return aK(a,c,b)}function\ne(a){return by(b,d,a)}function\nf(a){return bw(e,a)}var\ng=0;function\nh(a){return W(g,a)}return function(a){return X(h,f,a)}})}var\ne=[0,aJ,aJ,cJ,W,bw,X,X,ak,aK,aK,bx,bx,by,cK,cP,cQ,function(e,d,a){var\ng=ak(0,d);function\nh(d){var\nf=b(a,d);return c(m[13],e,f)}var\ni=c(f[19],h,g);return b(f[14],i)}],aL=[cg,cR,b9(0)];function\nG(b,a){return[0,[0,[0,[0,b],0],a],0]}function\nal(a){throw[0,aL,[0,[2,a,0],0]]}function\ncS(a){function\nb(a){return al([0,[0,a],0])}return c(L[10],b,a)}function\nH(a){try{var\ne=c(o[80],0,a);return e}catch(a){a=b_(a);if(a[1]===aL)return a[2];if(a===aM[1])return[0,[2,cT,0],0];var\nd=[0,[2,b(am[6],0)],0];return[0,[2,[0,cU,[0,0,[0,[2,b(am[1],a)],d]]],0],0]}}function\nbz(a){if(typeof\na===\"number\"){if(0===a)return 0}else\nif(1===a[0])throw[0,bA,cV];return 1}function\naN(a){return c(f[32],bB,a)}function\nbB(a){switch(a[0]){case\n0:return aN(a[2]);case\n1:throw[0,bA,cW];default:return bz(a[2])}}function\nQ(a,d){if(aN(a)){var\ne=b(d,0);return c(S[37],a,e)}return a}function\nq(d,b,a){var\ne=c(o[100],d,b);return c(o[104],e,a)}function\ncX(a,e,d,b){return q(e,a,function(e){return H(function(f){if(1-c(b,e,d))al([0,[1,a],cY]);return[0,[2,[0,[1,a],cZ],c0],0]})})}function\nan(a){return[0,[2,[0,[1,a],c1],c2],0]}function\nbC(d,b,a){if(0===b[0]){if(0===a[0])return c(d,b[1],a[1])}else\nif(1===a[0])return aw(b[1],a[1]);return 0}function\nbD(c,a){return 0===a[0]?[0,c3,[0,[2,b(c,a[1])],0]]:[0,c4,[0,[2,b(am[1],a[1])],0]]}function\nbE(c,a){return 0===a[0]?[0,c5,[0,[2,b(c,a[1])],0]]:[0,c6,[0,[2,b(am[1],a[1])],0]]}function\nao(a){return[0,[1,a],c7]}function\nR(j,e,i,h,g,a,d){if(aw(a,[1,aM[1]]))throw aM[1];var\nf=1-bC(j,a,d);if(f){var\nk=bE(e,d),l=[0,0,bD(e,a)],m=[0,c8,[0,0,[0,[1,b(h,g)],l]]],n=c(S[37],m,k);return al(c(S[37],i,n))}return f}function\nc9(a,j,i,h,g,e,d){return q(j,a,function(j){return H(function(l){function\nk(c){function\nd(a){return b(j,c)}var\nf=b(o[82],d);function\nk(a){return b(i,c)}var\nl=b(o[82],k);function\nm(d){return p(a,[0,b(h,c),0])}var\nn=0;function\nq(a){return B(m,a)}return R(e,g,ao(a),q,n,f,l)}c(f[17],k,d);return an(a)})})}function\nc_(a,e,k,j,i,h,g,d){return q(e,a,function(l){return H(function(m){function\ne(f){var\nd=f[2],e=f[1];function\nm(a){return c(l,e,d)}var\nn=b(o[82],m);function\nq(a){return c(k,e,d)}var\nr=b(o[82],q);function\ns(f){var\nc=[0,b(i,d),0];return p(a,[0,b(j,e),c])}var\nt=0;function\nu(a){return B(s,a)}return R(g,h,ao(a),u,t,n,r)}c(f[17],e,d);return an(a)})})}function\nc$(a,e,l,k,j,i,h,g,d){return q(e,a,function(m){return H(function(n){function\ne(c){var\nd=c[3],e=c[2],f=c[1];function\nn(a){return t(m,f,e,d)}var\nq=b(o[82],n);function\nr(a){return t(l,f,e,d)}var\ns=b(o[82],r);function\nu(h){var\nc=[0,b(i,d),0],g=[0,b(j,e),c];return p(a,[0,b(k,f),g])}var\nv=0;function\nw(a){return B(u,a)}return R(g,h,ao(a),w,v,q,s)}c(f[17],e,d);return an(a)})})}function\nY(d,a){var\ne=c(f[19],d,a);return b(f[14],e)}function\naO(a,c,b){return a<c?[0,a,aO(a+1|0,c,b)]:b}function\nap(b,a){return aO(b,a,0)}function\nda(b,a){return Y(function(b){return Y(function(a){return[0,[0,b,a],0]},a)},b)}function\ndb(a,d){var\nb=ap(0,a+1|0);return Y(function(b){return c(d,b,a-b|0)},b)}function\ndc(b,a){return Y(b,ap(0,a+1|0))}function\nbG(a){var\nd=b(ae[14],a);return c(L[4],dd,d)}function\naP(a){return i(bG(a))}s(z[1],dg,df,de,aP);s(z[1],dj,di,dh,F);function\ndk(a){return c(L[4],dl,a)}function\ndm(a){var\nd=b(bH[2],a);return c(L[4],dn,d)}function\nbI(a){return a?dp:dq}function\naQ(a){return i(bI(a))}s(z[1],dt,ds,dr,aQ);function\naR(c,a){return a?bq(du,[0,b(c,a[1]),0]):i(dv)}s(z[1],dy,dx,dw,aR);function\naS(d,a){function\ne(a){var\nc=g(a_,u(1));return g(b(d,a),c)}var\nf=c(bJ[15],e,a);return v(bn(U(b(bJ[11],f))))}s(z[1],dB,dA,dz,aS);function\nZ(b,a){return bp(c(ax,b,a))}s(z[1],dE,dD,dC,Z);function\naq(a){return Z(F,a)}s(z[1],dH,dG,dF,aq);function\nbK(a){return B(aq,a)}function\nar(a){var\nb=a[2],d=a[1];return N(c(ad(dI),d,b))}s(z[1],dL,dK,dJ,ar);function\nas(a){return Z(ar,a)}s(z[1],dO,dN,dM,as);function\nbL(a){return B(as,a)}function\nbM(a){return[0,a]}function\nbN(a){return[1,a]}var\nbO=P(function(j,a){var\nd=b(e[14],dP),f=c(e[13],bN,d),g=ap(0,a),h=b(e[14],g),i=c(e[13],bM,h);return c(e[7],i,f)});function\nbP(a){return[2,a]}function\nbQ(a){return[3,0,a[1],a[2]]}function\nbR(a){return[0,a]}function\ndQ(a){return[1,a]}function\nbS(a){return[4,0,a[1],a[2]]}function\nat(a){return[5,a]}function\nbT(a){return[3,1,a[1],a[2]]}function\naT(a){return[4,1,a[1],a[2]]}function\n_(d,a){var\nf=b(d,a),g=b(d,a),h=c(e[10],g,f),i=c(e[13],bS,h),j=b(d,a),k=c(e[13],bR,j),l=b(d,a+1|0),m=b(d,a),n=c(e[10],m,l),o=c(e[13],bQ,n),p=c(e[7],o,k),q=c(e[7],p,i),r=b(e[5],q),s=b(e[4],0),t=b(bO,a),u=c(e[13],bP,t),v=c(e[7],u,s);return c(e[7],v,r)}var\ndR=P(function(b,a){return _(b,a)}),dS=P(function(d,a){var\nf=b(d,a),g=c(e[13],at,f),h=b(e[5],g),i=_(d,a);return c(e[7],i,h)}),dT=P(function(d,a){var\nf=b(d,a),g=b(d,a),h=c(e[10],g,f),i=c(e[13],aT,h),j=b(e[5],i),k=b(d,a),l=c(e[13],at,k),m=b(e[5],l),n=_(d,a),o=c(e[7],n,m);return c(e[7],o,j)}),$=[0,bM,bN,bO,bP,bQ,bR,dQ,bS,at,bT,aT,_,dR,dS,dT,P(function(d,a){var\nf=b(d,a),g=b(d,a),h=c(e[10],g,f),i=c(e[13],bT,h),j=b(e[5],i),k=b(d,a),l=b(d,a),m=c(e[10],l,k),n=c(e[13],aT,m),o=b(e[5],n),p=b(d,a),q=c(e[13],at,p),r=b(e[5],q),s=_(d,a),t=c(e[7],s,r),u=c(e[7],t,o);return c(e[7],u,j)})];function\nC(a){if(typeof\na!==\"number\")switch(a[0]){case\n0:return[0,C(a[1])];case\n1:throw[0,A,dU];case\n3:var\nb=C(a[3]),c=C(a[2]);return[3,a[1],c,b];case\n4:var\nd=C(a[3]),e=C(a[2]);return[4,a[1],e,d];case\n5:return[5,C(a[1])]}return[1,a]}function\naU(d,a){if(0<=a&&a<d){var\ne=(d-1|0)-a|0;if(26<=e)throw[0,A,dV];var\nf=b(bH[1],97+e|0);return c(ae[1],1,f)}throw[0,A,dW]}function\nbU(b,a){return i(aU(b,a))}function\naV(b,a){return 0===a[0]?bU(b,a[1]):F(a[1])}function\ndX(b,a){return aV(b,a)}function\naW(b,a){var\ne=0;if(typeof\na!==\"number\"&&3===a[0]){var\nf=a[1]?d5:d7,h=au(b+1|0,a[3]),i=g(u(1),h),j=aU(b+1|0,0),k=c(ad(d6),f,j),l=g(u(1),k),d=g(v(g(au(b,a[2]),l)),i);e=1}if(!e)var\nd=au(b,a);return v(d)}function\nau(b,a){if(typeof\na===\"number\")return I(b,a);else\nswitch(a[0]){case\n0:return p(dZ,[0,I(b,a[1]),0]);case\n1:return p(d0,[0,I(b,a[1]),0]);case\n2:return p(d1,[0,aV(b,a[1]),0]);case\n3:return N(aW(b,a));case\n4:var\nc=[0,I(b,a[3]),0],d=[0,I(b,a[2]),c],e=a[1]?d2:d3;return p(e,d);default:return p(d4,[0,I(b,a[1]),0])}}function\nI(b,a){return typeof\na===\"number\"?i(dY):N(aW(b,a))}function\naX(a){return I(0,a)}function\naY(a){return aE(d8,[0,a,0])}function\naZ(b,a){return aE(d9,[0,F(b),[0,a,0]])}function\na0(a){return p(d_,[0,a,0])}function\nbV(a){return p(ea,[0,i(d$),[0,a,0]])}function\nbW(b,a){return aY(aZ(b,a0(aX(a))))}function\neb(a){function\nb(b){return bW(a,b)}return function(a){return B(b,a)}}function\nbX(b,a){return aY(aZ(b,bV(a0(aX(a)))))}var\na1=[0,aU,bU,aV,dX,au,aW,aX,aY,aZ,a0,bV,bW,eb,bX,function(a){function\nb(b){return bX(a,b)}return function(a){return B(b,a)}}],D=[0,w[1],w[2],w[3],w[4],w[5],[0,w[6]],[0,w[7]],[0,w[8]]],a2=[0,D[1],D[2],D[3],D[4],D[6],D[7],D[8]];function\nav(a){if(a)return a[1];throw[0,A,ec]}function\nbY(b,a){return 0===a[0]?c(f[7],b,a[1]):a[1]}var\naa=[0,bY,function(f,a){var\ne=0;function\nd(e,a){if(typeof\na===\"number\")return f[3];else\nswitch(a[0]){case\n0:var\ng=a[1],h=function(a){return d(e,g)};return b(l[2],h);case\n1:var\ni=d(e,a[1]);return b(l[5],i);case\n2:var\nj=bY(e,a[1]);return b(f[1],j);case\n3:var\nk=a[3],m=a[1]?av(f[7]):f[2],n=function(a){return d([0,a,e],k)};return c(m,d(e,a[2]),n);case\n4:var\no=a[1]?av(f[6]):f[4],p=d(e,a[3]);return c(o,d(e,a[2]),p);default:var\nq=av(f[5]);return b(q,d(e,a[1]))}}return d(e,a)}],J=20;function\nbZ(a,e,d){function\ng(a){var\nf=c(aa[2],a2,a),g=b(w[5],f),h=c(l[1][7],J,g),i=[0,b(l[1][10],h)];function\nj(h){var\nf=b(d,c(aa[2],e,a)),g=c(l[1][7],J,f);return b(l[1][10],g)}var\nk=b(o[82],j);return R(aw,bK,bF,b(a1[13],J),a,k,i)}c(f[17],g,a);var\nh=b(f[1],a),i=c(L[4],ed,h);return[0,c(b0[8],1,i),0]}function\nb1(a,e,d){var\ng=c(f[19],C,a);function\nh(a){b(l[4],0);var\nf=c(aa[2],a2,a),g=b(w[5],f),h=c(l[1][4],l[6],g),i=c(l[1][7],J,h),j=[0,b(l[1][10],i)];function\nk(i){b(l[4],0);var\nf=b(d,c(aa[2],e,a)),g=c(l[1][4],l[6],f),h=c(l[1][7],J,g);return b(l[1][10],h)}var\nm=b(o[82],k);return R(aw,bL,ee,b(a1[15],J),a,m,j)}c(f[17],h,g);return[0,c(b0[8],1,ef),0]}function\nab(c,b,a){function\nd(d){return G(eg,H(function(d){return b1(c,b,a)}))}return Q(G(eh,H(function(d){return bZ(c,b,a)})),d)}function\na3(a){function\ne(e){function\nf(f){function\ng(g){function\nh(h){function\ni(b){return c(a,[0,e,f,g,h,0,0,0],b)}return q(b(E[2],[0,[1,0,[0,[3,[0,em,d[1][1]],[0,[0,[3,[0,el,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[3,[0,ek,d[1][1]],[0,[0,[3,[0,ej,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]),ei,i)}return q(b(E[2],[0,[1,0,[0,[3,[0,et,d[1][1]],[0,[0,[3,[0,es,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[1,0,[0,[3,[0,er,d[1][1]],[0,[0,[3,[0,eq,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[3,[0,ep,d[1][1]],[0,[0,[3,[0,eo,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]),en,h)}return q(b(E[2],[0,[3,[0,ew,d[1][1]],[0,[0,[3,[0,ev,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]),eu,g)}return q(b(E[2],[0,[1,0,[0,[3,[0,eE,d[1][1]],[0,[0,[3,[0,eD,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[1,0,[0,[1,0,[0,[3,[0,eC,d[1][1]],0],d[1][1],0,0],[0,[3,[0,eB,d[1][1]],[0,[0,[3,[0,eA,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0],[0,[3,[0,ez,d[1][1]],[0,[0,[3,[0,ey,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]),ex,f)}return q(b(E[2],[0,[1,0,[0,[3,[0,eI,d[1][1]],0],d[1][1],0,0],[0,[3,[0,eH,d[1][1]],[0,[0,[3,[0,eG,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]),eF,e)}function\nb2(a){return G(eJ,a3(function(c,a){var\nd=b($[13],0);return ab(t(e[17],a6,4,d),c,a)}))}function\na4(e){return a3(function(a,f){function\ng(b){return c(e,[0,a[1],a[2],a[3],a[4],[0,b],a[6],a[7]],f)}return q(b(E[2],[0,[1,0,[0,[3,[0,eO,d[1][1]],[0,[0,[3,[0,eN,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[3,[0,eM,d[1][1]],[0,[0,[3,[0,eL,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]),eK,g)})}function\nb3(a){return G(eP,a4(function(c,a){var\nd=b($[14],0);return ab(t(e[17],a6,4,d),c,a)}))}function\na5(e){return a4(function(a,f){function\ng(b){return c(e,[0,a[1],a[2],a[3],a[4],a[5],[0,b],a[7]],f)}return q(b(E[2],[0,[1,0,[0,[3,[0,eW,d[1][1]],[0,[0,[3,[0,eV,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[1,0,[0,[3,[0,eU,d[1][1]],[0,[0,[3,[0,eT,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[3,[0,eS,d[1][1]],[0,[0,[3,[0,eR,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]),eQ,g)})}function\nb4(a){return G(eX,a5(function(c,a){var\nd=b($[15],0);return ab(t(e[17],a6,4,d),c,a)}))}function\nb5(e){return a5(function(a,f){function\ng(b){return c(e,[0,a[1],a[2],a[3],a[4],a[5],a[6],[0,b]],f)}return q(b(E[2],[0,[1,0,[0,[3,[0,e5,d[1][1]],[0,[0,[3,[0,e4,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0],[0,[1,0,[0,[1,0,[0,[3,[0,e3,d[1][1]],0],d[1][1],0,0],[0,[3,[0,e2,d[1][1]],[0,[0,[3,[0,e1,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0],[0,[3,[0,e0,d[1][1]],[0,[0,[3,[0,eZ,d[1][1]],0],d[1][1],0,0],0]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]),eY,g)})}function\nb6(a){return G(e6,b5(function(c,a){var\nd=b($[16],0);return ab(t(e[17],3000,5,d),c,a)}))}function\nb7(b){function\na(a){return 0}return Q(Q(Q(Q(b2(0),b3),b4),b6),a)}var\ne7=t(o[26],0,o[109][2],b7);b(o[1],e7);n.caml_register_global(163,[0,cl,ax,K,ay,cm,T,ac,a8,az,a9,i,ad,aA,af,a_,a$,ba,bb,ag,bc,bd,u,g,be,v,bf,aB,aC,bh,aD,U,bi,bj,bk,bl,F,ah,N,bm,bn,bo,bp,bq,br,bs,p,cB,aE,B,m,aG,aI,bv,P,e,aL,G,al,cS,H,bz,bB,aN,Q,q,cX,an,bC,bD,bE,bF,ao,R,c9,c_,c$,Y,aO,ap,da,db,dc,bG,aP,aP,F,F,dk,dm,bI,aQ,aQ,aR,aR,aS,aS,Z,Z,aq,aq,bK,ar,ar,as,as,bL,$,C,a1,D,a2,av,aa,J,bZ,b1,ab,a3,b2,a4,b3,a5,b4,b5,b6,b7],x);return e9}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 8
  },
  null
]