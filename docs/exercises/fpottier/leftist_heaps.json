[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Leftist heaps",
    "stars": 3,
    "backward_exercises": [
      "fpottier/infinite_arrays"
    ]
  },
  {
    "id": "leftist_heaps",
    "prelude": "",
    "template": "let empty : heap =\n  E\n\n(* TO DO: Define the auxiliary function [rank]. *)\nlet rank (h : heap) : rank =\n  raise TODO\n\n(* TO DO: Define the auxiliary function [makeT]. *)\nlet makeT (x : element) (h1 : heap) (h2 : heap) : heap =\n  raise TODO\n\n(* TO DO: Define [singleton]. *)\nlet singleton (x : element) : heap =\n  raise TODO\n\n(* TO DO: Define [union]. *)\nlet union (h1 : heap) (h2 : heap) : heap =\n  raise TODO\n\n(* TO DO: Define [insert]. *)\nlet insert (x : element) (h : heap) : heap =\n  raise TODO\n\n(* TO DO: Define [extract]. *)\nlet extract (h : heap) : (element * heap) option =\n  raise TODO\n",
    "descr": [
      [
        "",
        "<h1 id=\"Leftist-heaps\">Leftist heaps</h1>\n\n<p>This problem is inspired by Chapter 3 of Chris Okasaki&#39;s book,\n<a href=\"https://www.cambridge.org/fr/academic/subjects/computer-science/programming-languages-and-applied-logic/purely-functional-data-structures?format=PB&amp;isbn=9780521663502\" target=\"_blank\" rel=\"noopener noreferrer\">Purely Functional Data Structures</a>.</p>\n<h2 id=\"Mission-statement\">Mission statement</h2>\n\n<p>We assume that there is a type <code>element</code> of elements\nand a function <code>priority</code> of type <code>element -&gt; int</code>\nwhose definitions are not revealed.</p>\n<pre><code>type element = ... (* abstract *)\ntype priority = int\nlet priority (x : element) : priority = ... (* abstract *)</code></pre>\n\n<p>Thus, each element carries an integer priority.\nBy convention, a smaller priority denotes a &quot;more urgent&quot; element.</p>\n<p>We wish to implement a <strong>priority queue</strong>, that is, a multiset (also known as\na bag) of elements which supports the following operations: <code>empty</code>,\n<code>singleton</code>, <code>insert</code>, <code>union</code>, and <code>extract</code>, which extracts\nan element whose priority is minimal. There might be several\nsuch elements; an arbitrary one is picked.</p>\n<h2 id=\"Data-structure\">Data structure</h2>\n\n<p>The data structure that we wish to use is known as <strong>leftist heaps</strong>.</p>\n<p>A heap <code>h</code> is an immutable binary tree. It is either an empty heap <code>E</code> or a\nnonempty heap <code>T (r, x, h1, h2)</code> where <code>r</code> is an integer rank, <code>x</code> is an\nelement, and <code>h1</code> and <code>h2</code> are subheaps.</p>\n<pre><code>type rank = int\ntype heap =\n  | E\n  | T of rank * element * heap * heap</code></pre>\n\n<p>Because this data structure is immutable,\nit is automatically persistent: the operations\nthat we are about to implement are nondestructive.</p>\n<p>A heap must satisfy the <strong>heap invariant</strong>: if an element <code>x</code> is an ancestor\nin the tree of an element <code>y</code>, then <code>x</code> is more urgent than <code>y</code>, that is,\n<code>priority x &lt;= priority y</code> holds. In particular, the element that is stored at\nthe root of the tree has minimal priority.</p>\n<p>By definition, the <strong>rank</strong> of a heap is the length of its right spine, that\nis, the length of its rightmost branch. Thus,\nthe rank of an empty heap is zero, while the rank of a nonempty heap is one\nmore than the rank of its right child. For efficiency, we require every heap\nto satisfy the <strong>rank invariant</strong>: the rank of a nonempty heap is stored at\nthe root of this heap.</p>\n<p><strong>Question 1.</strong> Define a function <code>rank : heap -&gt; rank</code> such that <code>rank h</code> is\nthe rank of the heap <code>h</code> and <code>rank</code> has constant time complexity.</p>\n<p>A heap must satisfy the <strong>leftist invariant</strong>: the rank of a left child is at\nleast as large as the rank of its right sibling. In other words, every\nnonempty subheap <code>T (r, x, h1, h2)</code> must satisfy <code>rank h1 &gt;= rank h2</code>.</p>\n<p>In order to guarantee that every newly-built heap <code>T (_, _, _, _)</code> satisfies\nthe rank invariant and the leftist invariant, we define a smart constructor\n<code>makeT</code>.</p>\n<p><strong>Question 2.</strong> Define a function <code>makeT : element -&gt; heap -&gt; heap -&gt; heap</code>\nsuch that the heap <code>makeT x h1 h2</code> has the element <code>x</code> at the root and has\n<code>h1</code> and <code>h2</code> as its children. It is permitted to assume that the priority of\n<code>x</code> is less than or equal to the priority of every element in <code>h1</code> and <code>h2</code>.\nThe heap <code>makeT x h1 h2</code> must satisfy all three invariants. Hint: you may\nchoose which of <code>h1</code> and <code>h2</code> should be the left child, and which should be\nthe right child.</p>\n<p>Once <code>makeT</code> is available, there is never a need to use <code>T</code> directly to\nconstruct a heap.</p>\n<p><strong>Remark.</strong> The leftist invariant implies that the length of a heap&#39;s right\nspine is logarithmic in the size of this heap. Indeed, one can prove by\ninduction that the size of every heap <code>h</code> must be at least <code>2^(rank h) - 1</code>.\nAs an exercise, do this proof on paper; it is easy!</p>\n<p><strong>Question 3.</strong> Define a function <code>singleton : element -&gt; heap</code> such that\n<code>singleton x</code> is a heap whose multiset of elements is the singleton <code>{x}</code>.</p>\n<h2 id=\"Merging-two-leftist-heaps\">Merging two leftist heaps</h2>\n\n<p>Let us climb the highest mountain first, namely <code>union</code>.\nOnce this operation is implemented, the rest is easy.</p>\n<p><strong>Question 4.</strong> Define a function <code>union : heap -&gt; heap -&gt; heap</code>\nsuch that <code>union h1 h2</code> is a heap whose multiset of elements is the\nunion of the multisets of elements of the heaps <code>h1</code> and <code>h2</code>.\nThe time complexity of <code>union</code> <strong>must be linear</strong> in <code>rank h1 + rank h2</code>.\nHint: the cases where <code>h1</code> or <code>h2</code> is empty are easy.\nHint: when <code>h1</code> and <code>h2</code> are both nonempty,\nfirst ask yourself which element should be the root of the new heap;\nthen ask yourself what the two subheaps should be.</p>\n<h2 id=\"Inserting-an-element\">Inserting an element</h2>\n\n<p><strong>Question 5.</strong> Define a function <code>insert : element -&gt; heap -&gt; heap</code> such that\nthe heap <code>insert x h</code> contains the element <code>x</code> and the elements of the heap\n<code>h</code>.</p>\n<h2 id=\"Extracting-a-most-urgent-element\">Extracting a most urgent element</h2>\n\n<p><strong>Question 6.</strong> Define a function <code>extract : heap -&gt; (element * heap) option</code>\nsuch that:</p>\n<ul><li><code>extract</code>, applied to an empty heap, returns <code>None</code>;</li><li><code>extract</code>, applied to a nonempty heap <code>h</code>, returns <code>Some (x, h&#39;)</code>, where\n <code>x</code> is an element of <code>h</code> of minimal priority and\n <code>h&#39;</code> is the heap <code>h</code> deprived of <code>x</code>.</li></ul>"
      ]
    ],
    "prepare": "auUX5uadJb3Hzlv+FnhAAGsLTUE1FBQUZBl1GBjlg1UjslppWGiWUygkxKGpcrhsnTzZ1zgagfbtUsQ1un++tldeDkoqHYtG6P/nhI9N+4cdQg6CmLg1tTFYGcVP9S7N+uHSccAuUavZ3yKHByhGv4D1mA4VClH6hUl4iZeKtXPqeQ+CxbEubdyO0uxcTnx5+zsyGE6JXB9gQ/6+QqCd9Try+mkVKZULWVLgc3jbhiKF3sca4/8vxr5R8TrIIgjbNXMCFnsI6/aBtXbgiVA6d8hI/QvNc6mg15FFkELC0YQUlgrwlBs3b2By0hYL2A+rdMmLAcILWb0pTQTIy1ql+4THVM4qamm6y2hbsHMH4jQ5FQI3Ho/rXG/2UFgVr+G1OatPPRQtyBxoKrm/aqryYZBk/CtfIvbrxQnWE4Z8luhRY/1VJkeSIYyl4fyLRT4nPpHBTgPzHeocVUSRE2x7np+0z0K3CUPqzXwdlpgaSLbdm19DmkdVarlZBIyDi0V9trlVoeiwIOPJkGmkMztvKzMRHpV3SkBNMBhRY/WguI1ecAgwVSj+FDZhgP7crvl56X0HKmEmv4+6ChBBgn3XaA2kQpQoVYZ4p0FaqsBVIL1aGucPp0M1aWVVQZERjSLQDgr4vgEDQajE1TrHBiRIr0a2n6LEWR8taApBjY4LwmiqwRWTeaduvIiS0+UaAHMvNA9IA6FOXDNwEBFTW43tnHvfEWd+Iw1+Py+swuTRnXS2ZNFaJ8fqebQR8RGaAZ3bH8ZpFCYf65qVcA+xnEpuwVsO/RPBkAPg3Rtdd9v0IqMFzgOm5osEfZko2Y2PS67xr14WDcVS+KyiA9mIzIf51urrGgK6aGe56tpbrDIP1nx5AAEAQ6/NVz/ZRRVRffi7OewB1BQ9y/FmDOX/eqr70I6epno8JvW7eBvYQq2gluhW492RMEXIXdCgOriHTnz7PQqNBwXvU4NfVWjNDN6sn8jVjq4ZZTmp/WAe5okhBf7giNkGyAsTaOxOGMCEpNhcreFUs+ut0vXXzne41lFjK6xEAQB3T69U2oAAPoCgsM61fARhGjDWQXNv6h0oqu156iXYMmANqri3DhsYeXy3f6tjHis7ENROmaRqofgMI+ZoHt1G8rEYfGVVTs64rnKEC2WZucAMVaC1ZlSHAEhYvLyHk5aVU5fDwEl1jhLBwyTqsFS4oYIfdZy3PuljAHxv4zsNTElZ4DNwEElVZLzy88qxAHM3YNF4N8Txh47ksnDONNpfI7LvvKEXyFDnAQ==",
    "test": "",
    "solution": "R4dbPtxNfUkbPPnPDm9uYzN1ZlpR4DMmJVVFFULhwxMet59cTjCTG8IxwKnybeF67ybUY9/nfra5CgwZxzOXfQs7Sys7ENxLePRndfhAZPJoTwV4feNRhDp6FsAQySLeTJr/d2ApHem2K6HTTmFIbqD+uzmNT9GwfQpHmLbOuDkBvjwjyUC9Mn1dvtxT4D58YkoNH/BXU696ATtVEP7z8DqxUmkIYI93PTOsgKaevzerNJQjJXKhtfFBoBHpOZ4vCyNM3jIQ65qccH3a/5BqdzBC/R4NtozsMFV3n9reIxQFkhzhb9dWqNBAOct2IE8odJzIRs9HF3GjQUmBjx43FlXaP8e1C423+iznpA/dYzw8WllJXVoUXC2EGBUKr+CN3rwBIHc5joInMb8Yq+P8ZY/9pCZ8Nf4ncQ0mE+I8y0hjP6N2Y97KCbmh4h7NAGeeWjTZCwWmAa/aVUOWCcgt6A7KjuXCTprWlDRj96snAPvhzY6GnR9VarlZBKPL8v5c0LZv2vVArUUy2OvPIyoyLE/BTUpRGR/RQoARSRDNfMBEs9F/RGm0HzJlu3ftdrd5tDS1AGcntuCsXg5Du7qVuEtjDlcIEIYL74RawMIANKAhA11G/3wRgCkVCtVCpXDNDdzTvY/PTveQYHOWARsIbqCI6E+BCk8xep5h7ZO4cHpYrzJupQyjVn2bchdP0zMYYlFNTBEZXFUfVTtVELyxnDrfQXAUKghu1nCauPmwhn7R3slpLXK7tfE2no7IA2qeF8ZLHmFVkFbJaC4sy5A6q8QDlAGVr/Gl2FUMjAuUYcRJzdDczAwXeNAwE2NPZA+mqd+ETsJCWbexCB8G6YftNAynQBTDB3lZYzSniQYaP8JuCUkWEVF1WD9ZEQdQt+jE4q1E1pF5lVdeP3mdsPrt1JBcjmF80dC7xRKYR3F8/aZCYUtFK8vGCcXlGrjJH9en1UfVTdH2HqJg4o0YHwFW6E89kqjIQo0lpT5ezklhSP4rxxRG5QtVv21CA1mL6vpoC3d92dAOrVEjPKf2T/Y=",
    "max-score": 10
  },
  null
]