[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Huffman Compression",
    "stars": 3,
    "backward_exercises": [
      "fpottier/generic_sorting"
    ]
  },
  {
    "id": "huffman",
    "prelude_ml": "(* We refer to the input data (which we wish to compress) as \"text\". *)\n\ntype text =\n  string\n\n(* A Huffman tree is a binary tree whose leaves carry a character. *)\n\ntype tree =\n| Leaf of char\n| Node of tree * tree\n\n(* As a simple-minded representation of binary data, we use strings\n   made up exclusively of the characters '0' and '1'. *)\n\ntype data =\n  string\n\n(* An alphabet maps characters to integer frequencies. *)\n\ntype alphabet =\n  (char, int) Hashtbl.t\n\n(* An encoding dictionary maps input characters to binary strings. *)\n\ntype encoding_dictionary =\n  (char, data) Hashtbl.t\n\n(* A decoding dictionary is a Huffman tree. *)\n\ntype decoding_dictionary =\n  tree\n\n(* Sorting. *)\n\nlet sort : char list -> char list =\n  List.sort compare\n\n(* The leaves of a tree. *)\n\nlet leaves tree =\n  let rec leaves tree accu =\n    match tree with\n    | Leaf c ->\n        c :: accu\n    | Node (tree0, tree1) ->\n        leaves tree0 (leaves tree1 accu)\n  in\n  leaves tree []\n\n(* [entries table] produces a list of the key-value pairs found in the hash\n   table [table]. The list is sorted by key using OCaml's generic comparison\n   function [compare]. *)\n\nlet entries table =\n  Hashtbl.fold (fun key value entries ->\n    (key, value) :: entries\n  ) table []\n  |> List.sort (fun (key1, _) (key2, _) -> compare key1 key2)\n\n(* [write_char b c] converts the character [c] to a sequence of 8 binary\n   characters (each of which is '0' or '1'). This sequence is written to\n   the buffer [b]. *)\n\nlet write_char (b : Buffer.t) (c : char) =\n  let c = ref (Char.code c) in\n  for i = 0 to 7 do\n    Buffer.add_char b (if !c land 0x80 = 0 then '0' else '1');\n    c := !c lsl 1\n  done\n\n(* Assuming that the function [next] is a source of characters (i.e., every\n   time it is called, it produces the next character, read from some source)\n   [read_char next] reads 8 binary characters (each of which is '0' or '1')\n   and combines them to produce a single character. It is the inverse of\n   [write_char] above. *)\n\nlet read_char (next : unit -> char) : char =\n  let c = ref 0 in\n  let mask = ref 0x80 in\n  for i = 0 to 7 do\n    if next() = '1' then c := !c lor !mask;\n    mask := !mask lsr 1\n  done;\n  Char.chr !c\n",
    "template": "(* -------------------------------------------------------------------------- *)\n\n(* Building an alphabet out of a piece of text. *)\n\nlet build_alphabet (text : text) : alphabet =\n  (* TO DO: Define this function. *)\n  raise TODO\n\n(* -------------------------------------------------------------------------- *)\n\n(* Building encoding and decoding dictionaries out of an alphabet. *)\n\n(* TO DO: Define a module [Q] that provides priority queues whose\n   elements are pairs of a tree and an integer frequency. Drawing\n   an element of the queue must yield an element whose frequency\n   is minimum. *)\n\nlet build_tree (alphabet : alphabet) : tree =\n  (* Assumption: the alphabet has at least two symbols. *)\n  assert (Hashtbl.length alphabet >= 2);\n  (* TO DO: Define this function. Use the module [Q] above. *)\n  raise TODO\n\nlet build_encoding_dictionary (tree : tree) : encoding_dictionary =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet build_dictionaries alphabet : encoding_dictionary * decoding_dictionary =\n  let tree = build_tree alphabet in\n  let encoding_dictionary = build_encoding_dictionary tree in\n  let decoding_dictionary = tree in\n  encoding_dictionary, decoding_dictionary\n\n(* -------------------------------------------------------------------------- *)\n\n(* Encoding input data. *)\n\nlet encode_char (dictionary : encoding_dictionary) (c : char) : data =\n  try\n    Hashtbl.find dictionary c\n  with Not_found ->\n    assert false (* unknown character *)\n\nlet encode (dictionary : encoding_dictionary) (text : text) : data =\n  let buffer = Buffer.create 1024 in\n  String.iter (fun c ->\n    Buffer.add_string buffer (encode_char dictionary c)\n  ) text;\n  Buffer.contents buffer\n\n(* -------------------------------------------------------------------------- *)\n\n(* Decoding compressed data. *)\n\nlet rec find (data : data) (i : int) (t : tree) : char * int =\n  assert (0 <= i && i <= String.length data);\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet decode (tree : tree) (data : data) (i : int) : text =\n  let buffer = Buffer.create 1024 in\n  let rec loop i =\n    if i = String.length data then\n      (* We have reached the end of the data. We are done. *)\n      Buffer.contents buffer\n    else begin\n      (* Decode one more character, and continue. *)\n      let c, i = find data i tree in\n      Buffer.add_char buffer c;\n      loop i\n    end\n  in\n  loop i\n\n(* -------------------------------------------------------------------------- *)\n\n(* Serializing a tree means encoding it as binary data.\n   Here, this means encoding it as a string of '0' and '1' characters. *)\n\nlet write (tree : tree) : data =\n  let b = Buffer.create 1024 in\n  let rec write (tree : tree) : unit =\n    (* TO DO: Define this auxiliary function. Hint: use [write_char]. *)\n    raise TODO\n  in\n  write tree;\n  Buffer.contents b\n\n(* Deserializing a tree means reading its representation as binary data\n   and transforming it back into a tree. *)\n\nlet read (s : data) : tree * int =\n  let i = ref 0 in\n  let next () : char =\n    assert (!i < String.length s);\n    let c = s.[!i] in\n    incr i;\n    c\n  in\n  let rec read () : tree =\n    (* TO DO: Define this auxiliary function. Hint: use [read_char]. *)\n    raise TODO\n  in\n  let tree = read() in\n  tree, !i\n\n(* -------------------------------------------------------------------------- *)\n\n(* Compressing and decompressing an input text. *)\n\nlet compress (text : text) : data =\n  (* TO DO: Define this function. *)\n  raise TODO\n\nlet decompress (data : data) : text =\n  (* TO DO: Define this function. *)\n  raise TODO\n",
    "descr": [
      [
        "",
        "<h1 id=\"Huffman-Coding\">Huffman Coding</h1>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Huffman_encoding\" target=\"_blank\" rel=\"noopener noreferrer\">Huffman coding</a>\nis a technique for encoding a sequence of characters (the\n<em>input data</em>) as a sequence of bits (the <em>encoded data</em>).</p>\n<p>We refer to the characters that appear in the input data as <em>input\ncharacters</em>. The set of all input characters is the <em>input alphabet</em>.</p>\n<p>Huffman coding is based on a <strong>fixed dictionary</strong>: that is, each character in\nthe input sequence is encoded as a fixed sequence of bits. This dictionary is\nconstructed in such a way as to minimize the length of the encoded data, in\nthe hope of achieving some compression.</p>\n<p>In order to permit unambiguous decoding, two distinct input characters must be\nencoded as two <strong>unrelated</strong> sequences of bits, where two sequences are\nunrelated if neither is a prefix of the other. Indeed, imagine what would\nhappen if, for instance, the character <code>&#39;a&#39;</code> was encoded as <code>&quot;0&quot;</code> and the\ncharacter <code>&#39;b&#39;</code> was encoded as <code>&quot;00&quot;</code>. Then, the encoded data <code>&quot;00&quot;</code> would be\nambiguous: it would represent both the character sequence <code>&quot;aa&quot;</code> and the\ncharacter sequence <code>&quot;b&quot;</code>. This problem arises because the bit sequences <code>&quot;0&quot;</code>\nand <code>&quot;00&quot;</code> are related: the former is a prefix of the latter.</p>\n<p>How can one guarantee, by construction, that the encodings of any two distinct\ninput characters are unrelated? The best answer to this question is to\nrepresent a dictionary as a <strong>tree</strong> where every leaf carries an input\ncharacter and every internal node carries two subtrees:</p>\n<pre><code>  type tree =\n  | Leaf of char\n  | Node of tree * tree</code></pre>\n\n<p>A path from the root to a leaf can be encoded as a bit string, where the bit\n<code>0</code> means &quot;go down towards the left child&quot; and the bit <code>1</code> means &quot;go down\ntowards the right child&quot;. Thus, for instance, in the tree <code>Node (Leaf &#39;a&#39;,\nNode (Leaf &#39;b&#39;, Leaf &#39;c&#39;))</code>, the leaf labeled <code>&#39;a&#39;</code> appears at the end of the\npath <code>&quot;0&quot;</code>, the leaf labeled <code>&#39;b&#39;</code> appears at the end of the path <code>&quot;10&quot;</code>, and\nthe leaf labeled <code>&#39;c&#39;</code> appears at the end of the path <code>&quot;11&quot;</code>. This represents\na dictionary where <code>&#39;a&#39;</code> is encoded as <code>&quot;0&quot;</code>, <code>&#39;b&#39;</code> is encoded as <code>&quot;10&quot;</code>, and\n<code>&#39;c&#39;</code> is encoded as <code>&quot;11&quot;</code>.</p>\n<p>The problematic dictionary where the character <code>&#39;a&#39;</code> is encoded as <code>&quot;0&quot;</code> and\nthe character <code>&#39;b&#39;</code> iss encoded as <code>&quot;00&quot;</code> cannot be represented by such a\ntree. (Think about it. The left child of the root node would have to be both a\nleaf and an internal node.)</p>\n<p>A valid tree is expected to satisfy the following properties:</p>\n<ul><li><p>Every character that appears at a leaf is indeed an input character.</p>\n</li><li><p>Every input character appears at some leaf.</p>\n</li><li><p>No two leaves carry the same character.</p>\n</li><li><p>This tree is optimal in the following sense:</p>\n</li></ul>\n\n<ul><li>Using this tree, the input data is encoded as\n a sequence of bits of length <code>k</code>;</li></ul>\n\n<ul><li>No other tree allows the input data to be encoded as\n a sequence of bits of length less than <code>k</code>.</li></ul>\n\n<p>Please pause for a moment and make sure that you understand why each of the\nfour above properties is desirable.</p>\n<p>In this exercise, we wish to perform the following tasks:</p>\n<ul><li><p>Out of a piece of input data,\n build a dictionary,\n that is,\n an optimal Huffman tree.</p>\n</li><li><p>Out of a dictionary\n and a piece of encoded data,\n recover\n the original input data.</p>\n</li><li><p>Find a way of encoding a dictionary itself\n as a sequence of bits,\n and a way of reading it back.</p>\n</li><li><p>Combine these pieces to define stand-alone\n compression and decompression\n functions.</p>\n</li></ul>\n\n<h2 id=\"Some-Definitions\">Some Definitions</h2>\n\n<p>We refer to the input data, which we wish to encode, as <em>text</em>.\nIt is a sequence of characters. We represent it in OCaml as a\nvalue of type <code>string</code>.</p>\n<pre><code>  type text =\n    string</code></pre>\n\n<p>We represent encoded data, or <em>data</em> for short, as a string where every\ncharacter is either the character <code>&#39;0&#39;</code> or the character <code>&#39;1&#39;</code>. (We choose\nthis representation for the sake of simplicity. Because each character in an\nOCaml string occupies 8 bits, this is a naïve representation, which occupies 8\ntimes more space than really necessary. In a real-world implementation, one\nwould arrange for binary data to be represented as a sequence of bits.)</p>\n<pre><code>  type data =\n    string</code></pre>\n\n<p>In order to build a Huffman tree that is optimal for a certain input text, one\nneeds to know how many times each input character occurs in the input text. In\nother words, we need a map of every input character to a (non-zero) integer\nfrequency. We refer to such a map as an <em>alphabet</em>.</p>\n<pre><code>  type alphabet =\n    (char, int) Hashtbl.t</code></pre>\n\n<p>Because the tree representation of the dictionary is perfectly suited while\ndecoding, we define a <em>decoding dictionary</em> to be a tree. While encoding, on\nthe other hand, it is more convenient to convert the dictionary to a more\nconvenient representation, namely a map of every input character to its\nencoding. We refer to such a map as an <em>encoding dictionary</em>.</p>\n<pre><code>  type decoding_dictionary =\n    tree\n\n  type encoding_dictionary =\n    (char, data) Hashtbl.t</code></pre>\n\n<p>The following functions can be useful to you while testing your code, and are\nalso used by the automated grading system, so their names can appear in some\nof the messages produced by the grading system. <code>sort</code> sorts a list of\ncharacters. <code>leaves</code> returns a list of all leaves of a tree, read from left to\nright. <code>entries</code> returns a view of a hash table as a list of key-value pairs.</p>\n<pre><code>  val sort : char list -&gt; char list\n  val leaves : tree -&gt; char list\n  val entries : (&#39;a, &#39;b) Hashtbl.t -&gt; (&#39;a * &#39;b) list</code></pre>\n\n<h2 id=\"Analyzing-the-Input-Alphabet\">Analyzing the Input Alphabet</h2>\n\n<p>Our first task, given an input text, is to compute its alphabet.</p>\n<p><strong>Question 1.</strong>\nWrite a function <code>build_alphabet</code>\nof type <code>text -&gt; alphabet</code>\nsuch that\n<code>build_alphabet text</code>\nreturns the alphabet of the input text <code>text</code>,\nthat is,\na map of every character that appears in <code>text</code> to\nthe number of times this character appears in <code>text</code>.</p>\n<p><em>Hint.</em> Use the standard library function <code>String.iter</code> to iterate over all\ncharacters in the input text. Use the functions provided by the standard\nlibrary module <code>Hashtbl</code> to create, read, and update a hash table.</p>\n<h2 id=\"Building-an-Optimal-Tree-Huffman-39-s-Algorithm\">Building an Optimal Tree: Huffman&#39;s Algorithm</h2>\n\n<p>Once we have an alphabet, a map of characters to frequencies,\nwe wish to compute a tree that is optimal with respect to this\nalphabet.</p>\n<p>Huffman&#39;s algorithm performs this task. This algorithm maintains\na set of pairs of a tree and an integer frequency.\nIt proceeds as follows:</p>\n<ul><li><p>For each character <code>&#39;c&#39;</code> with frequency <code>freq</code> in the alphabet,\n create a one-leaf tree <code>Leaf c</code> and pair it with the frequency <code>freq</code>.</p>\n</li><li><p>As long as possible,\n pick two pairs <code>(tree0, freq0)</code> and <code>(tree1, freq1)</code>\n of minimal frequencies <code>freq0</code> and <code>freq1</code> out of the set.\n Build the composite tree <code>Node (tree0, tree1)</code> out of them,\n and insert it back into the set with frequency <code>freq0 + freq1</code>.</p>\n</li></ul>\n\n<p>The algorithm stops where the set contains only a single pair <code>(tree, freq)</code>.\nThe tree <code>tree</code> is the desired tree. One can prove that it is optimal with\nrespect to the input alphabet.</p>\n<p>In order to implement this algorithm in an efficient manner,\na priority queue is required. The OCaml standard library does\nnot provide one, but we do. Its signature is as follows:</p>\n<pre><code>  module BinomialQueue (X : sig\n    type t\n    val compare: t -&gt; t -&gt; int\n  end) : sig\n    type element = X.t\n    type t\n    val empty: t\n    val is_empty: t -&gt; bool\n    val insert: element -&gt; t -&gt; t\n    val extract: t -&gt; element * t\n  end</code></pre>\n\n<p>The functor <code>BinomialQueue</code> expects to be applied to a module that defines a\ntype <code>t</code> of elements, equipped with a total order. The function call <code>compare\nx y</code> must return a negative result if <code>x</code> is less than <code>y</code>, zero if <code>x</code> and\n<code>y</code> are equal, and a positive result if <code>x</code> is greater than <code>y</code>.</p>\n<p>The functor <code>BinomialQueue</code> produces a module that defines a type <code>t</code> of\n(immutable) priority queues. Four operations are provided. <code>empty</code> is the\nempty queue. <code>is_empty</code> tests whether a queue is empty. <code>insert x q</code> is the\nqueue that contains the element <code>x</code> in the addition to the elements of the\nqueue <code>q</code>. <code>extract</code> must be applied to a nonempty queue <code>q</code>. It returns a\npair <code>(x, q&#39;)</code> where <code>x</code> is a <em>minimal</em> element of <code>q</code> (with respect to the\nuser-specified total order on elements) and <code>q&#39;</code> is the queue <code>q</code> deprived of\n<code>x</code>.</p>\n<p><strong>Question 2.</strong>\nDefine a module <code>Q</code> that provides priority queues whose\nelements are pairs of a tree and an integer frequency. Drawing\nan element of the queue must yield an element whose frequency\nis minimal.\nThen,\ndefine the function <code>build_tree</code>,\nwhose type is <code>alphabet -&gt; tree</code>,\nwhich implements Huffman&#39;s algorithm,\nas described above.</p>\n<h2 id=\"Building-an-Encoding-Dictionary\">Building an Encoding Dictionary</h2>\n\n<p>As explained at the beginning of this exercise,\na tree defines a correspondence between input characters\nand sequences of bits:\nindeed,\na path from the root to a leaf corresponds to a bit string, where the bit\n<code>0</code> means &quot;go down towards the left child&quot; and the bit <code>1</code> means &quot;go down\ntowards the right child&quot;.</p>\n<p>In order to encode data in an efficient manner,\nwe need a fast way of mapping each input character\nto its encoding, a bit string.\nIn other words, we need an encoding dictionary:\na map of every input character to its encoding.</p>\n<p>Such a map can be built in one traversal of the tree.</p>\n<p><strong>Question 3.</strong>\nDefine the function <code>build_encoding_dictionary</code>,\nwhose type is <code>tree -&gt; encoding_dictionary</code>.</p>\n<h2 id=\"Decoding-Data\">Decoding Data</h2>\n\n<p>In order to interpret a sequence of bits as a character,\nit suffices to view this sequence as a description of a\npath in the tree. By descending along this path, one reaches\na leaf, which carries a character.</p>\n<p><strong>Question 4.</strong> Write a function <code>find</code> of type\n<code>data -&gt; int -&gt; tree -&gt; char * int</code>\nsuch that <code>find data i t</code>\ndescends in the tree <code>t</code> along the path\nthat is encoded at index <code>i</code> in the binary data <code>data</code>,\nuntil a leaf is reached,\nand returns the character <code>c</code> carried by that leaf\nas well as an updated index into the binary data <code>data</code>. The index corresponds to the bit in <code>data</code> that follows the encoding of <code>c</code>.</p>\n<h2 id=\"Encoding-and-Decoding-the-Decoding-Dictionary-Itself\">Encoding and Decoding the Decoding Dictionary Itself</h2>\n\n<p>Naturally, encoded data can be successfully decoded only\nif the decoding dictionary is available. Thus, when one\nwishes to store encoded data on disk or to transmit onto\nthe network, one must store or transmit not only the\nencoded data, but also the decoding dictionary.</p>\n<p>Because the decoding dictionary is a tree, it must first\nbe <strong>serialized</strong>, that is, transformed into binary data.</p>\n<p>At the other end, whoever wishes to decode the data must\nfirst <strong>deserialize</strong> the decoding dictionary, that is,\nread its binary representation and convert it back to a\ntree.</p>\n<p><strong>Question 5.</strong>\nComplete the definitions of the functions <code>write</code>,\nwhose type is <code>tree -&gt; data</code>,\nand <code>read</code>,\nwhose type is <code>data -&gt; tree * int</code>.</p>\n<h2 id=\"Putting-Everything-Together\">Putting Everything Together</h2>\n\n<p>It is now time to put everything together\nand define easy-to-use encoding and decoding\nfunctions.</p>\n<p><strong>Question 6.</strong>\nDefine the functions <code>compress</code>,\nwhose type is <code>text -&gt; data</code>,\nand <code>decompress</code>,\nwhose type is <code>data -&gt; text</code>.\nThey should be inverses of one another: that is,\n<code>decompress (compress text)</code> should be <code>text</code>.\nCompression should produce binary data: that is,\nthe string <code>compress text</code> should contain no characters\nother than <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code>.\nFurthermore,\nfor sufficiently long and redundant input texts,\ncompression should save some space, that is,\nthe length of the string <code>compress text</code>\nshould be less than 8 times the length of <code>text</code>.</p>\n<p><em>Hint.</em> The data <code>compress text</code> must contain both the serialized decoding\ndictionary and the encoded data.</p>\n<p><em>Note.</em> The factor of 8 in the length is due to the fact that each OCaml\ncharacter in the input text takes up 8 bits, whereas each <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>\ncharacter in the encoded text represents one bit.</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "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",
      "prepare_cmi": "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",
      "solution_cmi": "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",
      "test_cmi": "",
      "exercise_lib": {
        "cma": "Q2FtbDE5OTlBMDI5AAAciFQAAAC4AAAAYwAAAGwAAACAAAAAaAAAAGwAAAAHAAAACQAAAAwAAAB9AAAAVQAAAB4AAABcAAAAYwAAAA8AAAAhAAAAbAAAADEAAAB5AAAAVgAAAAYAAAACAAAADgAAAHQAAAAUAAAAAwAAAGQAAAANAAAAdwAAABQAAAACAAAAAQAAAAkAAAB/AAAAAQAAABQAAAACAAAAAQAAAHoAAABVAAAA5P///2MAAAATAAAAAgAAAAEAAAA4AAAAAAAAAAAAAAAlAAAABAAAACkAAAAqAAAAAQAAAAEAAABoAAAAbAAAAAcAAAAJAAAADAAAAH0AAABVAAAAIwAAAFwAAABnAAAAgAAAAA0AAABzAAAAhAAAAAAAAAAFAAAAZwAAADAAAABUAAAAAwAAAGcAAAAxAAAADgAAADgAAAAAAAAACQAAACIAAABkAAAADQAAAHYAAAAUAAAAAgAAAAEAAAAJAAAAfwAAAAEAAAAUAAAAAgAAAAEAAAB6AAAAVQAAAN////9jAAAAKAAAAAUAAAApAAAAKgAAAAEAAAABAAAAQwAAAAsAAABDAAAAXgAAAAAAAAAoAAAAAgAAACkAAAAqAAAAAgAAAAIAAAAMAAAADAAAAEAAAAAAAAAAQAAAAAAAAAAoAAAAAwAAAGMAAAALAAAACQAAACsAAAAAAAAA8P///zgAAAAAAAAADQAAACMAAAAJAAAAKwAAAAAAAADd////OAAAAAAAAAA3AAAAJgAAAAMAAAApAAAAKgAAAAEAAAAAAAAAVwAAAAAAAgACAAAACQAAAAEAAAALAAAAQwAAAEAAAAAAAAAAKAAAAAIAAAABAAAACwAAAEQAAAAyAAAAIgAAAAsAAABDAAAAMgAAACYAAAAEAAAALAAAAAEAAAAAAAAA5f///2MAAAAMAAAADAAAACYAAAAEAAAAKQAAACoAAAABAAAAAQAAAAsAAABeAAAAAAAAACgAAAACAAAAKwAAAAAAAAD2////OAAAAAAAAAA3AAAAIQAAAAkAAAArAAAAAAAAAOT///8JAAAAKwAAAAAAAAC0////CQAAACsAAAAAAAAAaf///wkAAAArAAAAAAAAADP///8KAAAADAAAAA4AAAAQAAAAEgAAAAgAAAA+AAAABQAAAAAAAAATAAAABQAAADkAAAAAAAAAVAAAADoDAAApAAAAKgAAAAEAAAABAAAAVwAAAAAAAwADAAAACgAAABcAAAABAAAAQwAAAAsAAABAAAAAAQAAACgAAAACAAAAAQAAAEQAAAAMAAAAQwAAAAwAAAAbAAAAIgAAADIAAAAiAAAAPwAAAAAAAAAoAAAAAgAAAAEAAABDAAAACwAAABsAAAAiAAAAPwAAAAIAAAA/AAAAAAAAACgAAAACAAAAKQAAACoAAAABAAAAYwAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAAASAAAACAAAAFcAAAAAAAMAAwAAADQAAABwAAAACAAAAAgAAABDAAAAEgAAAAoAAABXAAAAAAADAAMAAAANAAAAHgAAAAgAAAAKAAAAQwAAAAsAAAAyAAAAIgAAAD8AAAAAAAAAKAAAAAsAAAAIAAAACgAAAEQAAAAUAAAAAQAAAAgAAAAKAAAAQwAAABQAAAACAAAAAAAAABQAAAADAAAAEwAAAAEAAABUAAAAfQAAAAgAAAAKAAAAQwAAABQAAAAEAAAAAAAAABQAAAAFAAAAEwAAAAQAAABUAAAAegAAAAgAAAAIAAAARAAAABIAAAAJAAAAQwAAABIAAAALAAAAVwAAAAAAAwADAAAAEgAAACMAAAABAAAAFAAAAAIAAAAAAAAAFAAAAAMAAAAIAAAACwAAAEMAAAAUAAAABAAAABMAAAACAAAAVAAAAFUAAAAIAAAACwAAAEQAAAAMAAAAEgAAAA0AAABDAAAADQAAAB4AAAAFAAAAIgAAADMAAAAjAAAAPwAAAAAAAAAoAAAADAAAAAgAAAALAAAAQwAAABQAAAAHAAAAAQAAABQAAAAIAAAAAAAAABQAAAAJAAAAEwAAAAcAAABUAAAARAAAAAgAAAAIAAAAQwAAABIAAAAKAAAAVwAAAAAAAwADAAAADwAAACAAAAAAAAAAFAAAAAQAAAAIAAAACgAAAEMAAAAUAAAABQAAABMAAAAEAAAAVAAAACgAAAAAAAAAFAAAAAYAAAAIAAAACgAAAEQAAAAUAAAABwAAAAgAAAAKAAAAQwAAABQAAAAIAAAAEwAAAAYAAABUAAAAHQAAAAgAAAAKAAAAQwAAAAsAAAAeAAAABQAAACIAAAA/AAAAAgAAAD8AAAAAAAAAKAAAAAsAAAAAAAAADQAAADIAAAAiAAAA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",
        "js": "function\ndynload(_){\"use strict\";var\n$={},i=\"./_learn-ocaml-build/exercises/fpottier/huffman/solution.ml\",H=256,q=1024,G=128,c=_.jsoo_runtime,m=c.caml_ml_string_length,o=c.caml_register_global,n=c.caml_string_get,d=c.caml_string_of_jsbytes,p=c.caml_wrap_exception;function\nb(a,b){return a.length==1?a(b):c.caml_call_gen(a,[b])}function\na(a,b,d){return a.length==2?a(b,d):c.caml_call_gen(a,[b,d])}function\nl(a,b,d,e){return a.length==3?a(b,d,e):c.caml_call_gen(a,[b,d,e])}var\nk=c.caml_get_global_data(),e=k.Stdlib__buffer,f=k.Stdlib__hashtbl,r=k.Stdlib__list,j=k.Stdlib,h=k.Assert_failure,w=k.Stdlib__string,L=k.Stdlib__char,M=d(\"Prepare.TODO\"),W=[0,d(i),104,2],V=[0,d(i),111,6],U=[0,d(i),113,6],Y=[0,d(i),175,8],X=[0,d(i),160,4],T=[0,d(i),90,4],Q=d(\"0\"),R=d(\"1\"),S=d(\"\"),O=[0,d(i),46,4],P=[0,d(i),36,2],I=b(r[56],c.caml_int_compare);function\nJ(a){function\nc(e,d){var\na=e,b=d;for(;;){if(0===a[0])return[0,a[1],b];var\nf=c(a[2],b),a=a[1],b=f;continue}}return c(a,0)}function\nK(b){var\nd=0;function\ne(c,b,a){return[0,[0,c,b],a]}var\ng=l(f[14],e,b,d);function\nh(b,a){return c.caml_compare(b[1],a[1])}return a(r[56],h,g)}function\ns(f,d){var\nc=0,b=d;for(;;){var\ng=0===(b&G)?48:49;a(e[10],f,g);var\nh=b<<1,i=c+1|0;if(7!==c){var\nc=i,b=h;continue}return 0}}function\nt(f){var\nd=0,c=G,a=0;for(;;){var\ne=49===b(f,0)?a|c:a,g=c>>>1|0,h=d+1|0;if(7!==d){var\nd=h,c=g,a=e;continue}return b(L[1],e)}}o(16,[0,I,J,K,s,t],\"Prelude\");var\nN=[248,M,c.caml_fresh_oo_id(0)];function\nu(f){var\nn=0;function\ne(a){return[0,[2,[0,a,0]]]}function\nb(e,d){var\ng=d[2],b=d[1],h=e[2],c=e[1];return 0<=a(f[1],c,b)?[0,b,[0,c,h,g]]:[0,c,[0,b,g,h]]}function\nd(c,a){switch(a[0]){case\n0:return[1,c,a[1]];case\n1:var\ne=a[2];return[0,d(b(c,a[1]),e)];default:return[0,[2,b(c,a[1])]]}}function\no(b,a){return a?[0,d([0,b,0],a[1])]:e(b)}function\nh(c,e,a){var\nf=0;switch(e[0]){case\n0:var\ni=e[1];switch(a[0]){case\n0:return[1,c,g(i,a[1])];case\n1:var\no=a[2],n=a[1],m=i;break;default:var\nq=a[1],p=i;f=1}break;case\n1:var\nj=e[2],k=e[1];switch(a[0]){case\n0:var\no=j,n=k,m=a[1];break;case\n1:var\nu=a[2];return[1,c,h(b(k,a[1]),j,u)];default:var\nt=a[1],s=j,r=k;f=2}break;default:var\nl=e[1];switch(a[0]){case\n0:var\nq=l,p=a[1];f=1;break;case\n1:var\nt=l,s=a[2],r=a[1];f=2;break;default:return[1,c,[2,b(l,a[1])]]}}switch(f){case\n0:return[0,h(b(c,n),m,o)];case\n1:return[0,d(b(c,q),p)];default:return[1,c,d(b(r,t),s)]}}function\ng(c,a){var\ne=0;switch(c[0]){case\n0:var\nf=c[1];switch(a[0]){case\n0:return[0,g(f,a[1])];case\n1:var\nn=a[2],m=a[1],l=f;break;default:var\np=a[1],o=f;e=1}break;case\n1:var\ni=c[2],j=c[1];switch(a[0]){case\n0:var\nn=i,m=j,l=a[1];break;case\n1:var\nt=a[2];return[0,h(b(j,a[1]),i,t)];default:var\ns=a[1],r=i,q=j;e=2}break;default:var\nk=c[1];switch(a[0]){case\n0:var\np=k,o=a[1];e=1;break;case\n1:var\ns=k,r=a[2],q=a[1];e=2;break;default:return[0,[2,b(k,a[1])]]}}switch(e){case\n0:return[1,m,g(l,n)];case\n1:return[1,p,o];default:return[0,d(b(q,s),r)]}}function\ni(b,a){return b?a?[0,g(b[1],a[1])]:b:a}function\nk(b,a){return a?[0,[1,b,a[1]]]:[0,[2,b]]}function\nc(b){switch(b[0]){case\n0:var\ng=c(b[1]),d=g[2],l=d?[0,[0,d[1]]]:d;return[0,g[1],l];case\n1:var\nh=b[2],e=b[1],i=c(h),j=i[1];return 0<=a(f[1],e[1],j[1])?[0,j,k(e,i[2])]:[0,e,[0,[0,h]]];default:return[0,b[1],0]}}function\nl(d){if(d){var\ne=c(d[1]),f=e[1],b=0,a=f[2],h=e[2];for(;;){if(a){var\ng=a[3],b=k([0,a[1],a[2]],b),a=g;continue}var\nl=i(b,h);return[0,f[1],l]}}throw j[8]}function\nq(a){return a?0:1}function\nm(b){try{var\na=l(b),c=m(a[2]),d=[0,a[1],c];return d}catch(a){a=p(a);if(a===j[8])return 0;throw a}}return[0,n,e,o,i,l,q,m]}o(18,[0,N,u],\"Prepare\");function\nv(c){var\nb=a(f[1],0,H);function\nd(c){try{var\ne=a(f[6],b,c),d=e}catch(a){a=p(a);if(a!==j[8])throw a;var\nd=0}return l(f[11],b,c,d+1|0)}a(w[19],d,c);return b}var\ng=u([0,function(b,a){return b[2]-a[2]|0}]);function\nx(d){if(2<=b(f[15],d)){var\no=g[1],p=function(d,c,b){return a(g[3],[0,[0,d],c],b)},c=l(f[14],p,d,o);for(;;){if(b(g[6],c))throw[0,h,O];var\ne=b(g[5],c),i=e[2],j=e[1],k=j[1];if(b(g[6],i))return k;var\nm=b(g[5],i),n=m[1],c=a(g[3],[0,[1,k,n[1]],j[2]+n[2]|0],m[2]);continue}}throw[0,h,P]}function\ny(b){var\nd=a(f[1],0,H);function\ne(h,g){var\nc=h,b=g;for(;;){if(0===b[0])return l(f[5],d,b[1],c);var\ni=b[1];e(a(j[28],c,Q),i);var\nk=b[2],c=a(j[28],c,R),b=k;continue}}e(S,b);return d}function\nz(b){var\na=x(b);return[0,y(a),a]}function\nA(c,b){try{var\nd=a(f[6],c,b);return d}catch(a){a=p(a);if(a===j[8])throw[0,h,T];throw a}}function\nB(f,d){var\nc=b(e[1],q);function\ng(b){var\nd=A(f,b);return a(e[14],c,d)}a(w[19],g,d);return b(e[2],c)}function\nC(b,e,d){var\na=e,c=d;for(;;){if(0<=a&&a<=m(b)){if(0===c[0])return[0,c[1],a];if(a<m(b)){if(48!==n(b,a)&&49!==n(b,a))throw[0,h,U];var\nf=48===n(b,a)?c[1]:c[2],a=a+1|0,c=f;continue}throw[0,h,V]}throw[0,h,W]}}function\nD(i,d,h){var\nf=b(e[1],q),c=h;for(;;){if(c===m(d))return b(e[2],f);var\ng=C(d,c,i);a(e[10],f,g[1]);var\nc=g[2];continue}}function\nE(f){var\nc=b(e[1],q);function\nd(f){var\nb=f;for(;;){if(0===b[0]){a(e[10],c,48);return s(c,b[1])}a(e[10],c,49);d(b[1]);var\nb=b[2];continue}}d(f);return b(e[2],c)}function\nF(c){var\na=[0,0];function\nd(d){if(a[1]<m(c)){var\nb=n(c,a[1]);a[1]++;return b}throw[0,h,X]}function\nb(e){var\na=d(0);if(48===a)return[0,t(d)];if(49===a){var\nc=b(0);return[1,c,b(0)]}throw[0,h,Y]}var\ne=b(0);return[0,e,a[1]]}function\nZ(b){var\nc=z(v(b)),d=B(c[1],b),e=E(c[2]);return a(j[28],e,d)}o(21,[0,v,g,x,y,z,A,B,C,D,E,F,Z,function(a){var\nb=F(a);return D(b[1],a,b[2])}],\"Solution\");return $}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(gd){\"use strict\";var\nge={},bi=\"alphabet\",cz=\"i\",aJ=\"build_tree\",ap=\"compress\",ct=\"is incorrect.\",K=\"data\",ao=\"The following expression:\",cx=\"%d\",S=\"write\",ab=\"tree\",aK=\"text\",k=\"Test\",cv=\"entries\",bj=\"\",cu=\"char\",cw=\"garbage\",aN=\"read\",bh=\"cookie\",cy=128,aM=\"int\",bl=\"decompress\",bk=248,aL=\"build_alphabet\",L=\"./_learn-ocaml-build/exercises/fpottier/huffman/test.ml\",o=gd.jsoo_runtime,R=o.caml_equal,bf=o.caml_fresh_oo_id,Q=o.caml_ml_string_length,cs=o.caml_string_equal,cr=o.caml_string_get,a=o.caml_string_of_jsbytes,bg=o.caml_wrap_exception;function\nb(a,b){return a.length==1?a(b):o.caml_call_gen(a,[b])}function\nc(a,b,c){return a.length==2?a(b,c):o.caml_call_gen(a,[b,c])}function\nA(a,b,c,d){return a.length==3?a(b,c,d):o.caml_call_gen(a,[b,c,d])}function\ni(a,b,c,d,e){return a.length==4?a(b,c,d,e):o.caml_call_gen(a,[b,c,d,e])}function\ngc(a,b,c,d,e,f){return a.length==5?a(b,c,d,e,f):o.caml_call_gen(a,[b,c,d,e,f])}var\nj=o.caml_get_global_data(),bd=a(aJ),al=[0,[0,a(\"Something is wrong.\")],0],cg=a(\"It is amazing that such a seemingly short sentence can be successfully compressed.\"),E=j.Stdlib__buffer,U=j.Assert_failure,bS=j.Match_failure,e=j.Stdlib__list,g=j.Stdlib,M=j.Stdlib__printf,m=j.Test_lib,d=j.Ast_helper,D=j.Ty,V=j.Stdlib__string,aj=j.Prepare,t=j.Solution,C=j.Prelude,a_=j.Stdlib__char,b0=j.Stdlib__array,ax=j.Stdlib__printexc,a2=j.Stdlib__hashtbl,bm=j.Stdlib__random,n=j.Learnocaml_internal,aO=e[19],cA=e[17];b(bm[1],0);var\ncE=[0,a(L),247,6],dd=[0,a(L),707,26],d6=a(\"1\"),d7=a(\"0\"),ee=a(\"Leaf\"),ef=a(\"Node\"),f2=[0,[11,a(\"produces a sequence of \"),[4,0,0,0,[11,a(\" bits, whereas the original sentence occupies \"),[4,0,0,0,[11,a(\" bits when represented as an ASCII string. No compression has been achieved! Perhaps your binary encoding of the dictionary is not compact enough?\"),0]]]]],a(\"produces a sequence of %d bits, whereas the original sentence occupies %d bits when represented as an ASCII string. No compression has been achieved! Perhaps your binary encoding of the dictionary is not compact enough?\")],f3=[0,a(ao)],f1=a(ap),f4=a(bl),f5=a(ap),f6=a(bl),f7=[0,a(aK)],f8=[0,a(K)],f9=a(ap),f_=[0,a(K)],f$=[0,a(aK)],ga=a(\"Question 6\"),fX=a(bl),fT=a(ap),fy=a(cz),fz=a(K),fA=a(\"String.sub\"),fB=a(K),fC=a(aN),fD=a(\"snd\"),fE=a(cz),fF=a(bh),fG=a(S),fH=a(\"^\"),fI=a(K),fw=a(bh),fx=[0,a(bh)],ft=a(S),fu=a(aN),fv=a(\"fst\"),fs=a(S),fJ=a(aN),fK=a(S),fL=a(aN),fM=[0,a(aM)],fN=[0,a(ab)],fO=[0,a(K)],fP=a(S),fQ=[0,a(K)],fR=[0,a(ab)],fS=a(\"Question 5\"),fo=a(S),fl=[0,0,[0,[0,a(\"This is not binary data. No characters other than '0' and '1' must be used.\")],0]],fm=[0,a(ao)],fn=[0,a(ao)],fe=[0,a(aM)],ff=[0,a(cu)],fg=[0,a(ab)],fh=[0,a(aM)],fi=[0,a(K)],fj=a(\"find\"),fk=a(\"Question 4\"),fc=a(cw),fd=a(cw),e_=[0,a(\"encoding_dictionary\")],e$=[0,a(ab)],fa=a(\"build_encoding_dictionary\"),fb=a(\"Question 3\"),eX=a(aL),eY=a(aJ),e2=[0,a(L),1336,8],eZ=[0,[11,a('According to this tree, the input text \"'),[2,0,[11,a('\" is encoded as the binary string '),[2,0,[11,a(\", whose length is \"),[4,0,0,0,[11,a(\" bits, whereas, by using another tree, this input text can be encoded as a binary string of only \"),[4,0,0,0,[11,a(\" bits.\"),0]]]]]]]]],a('According to this tree, the input text \"%s\" is encoded as the binary string %s, whose length is %d bits, whereas, by using another tree, this input text can be encoded as a binary string of only %d bits.')],e0=[0,a(\"yields the following tree, which is suboptimal:\")],e1=[0,a(ao)],eT=a(aL),eU=a(aJ),eV=a(\"leaves\"),eW=a(\"sort\"),e3=a(aJ),e4=[0,a(ab)],e5=[0,a(bi)],e6=a(aL),e7=[0,a(bi)],e8=[0,a(aK)],e9=a(\"Question 2\"),eO=[0,a(bi)],eP=[0,a(aK)],eQ=a(aL),eR=a(\"Question 1\"),eK=a(cv),eB=a(\"Break\"),ed=a(bj),d9=[0,122],d8=a(bj),dR=a(\"Some\"),dS=a(\"None\"),dM=a(\"true\"),dN=a(\"false\"),dI=[0,[12,39,[2,0,[12,39,0]]],a(\"'%s'\")],dH=[0,[4,0,0,0,0],a(cx)],dz=[0,[12,34,[2,0,[12,34,0]]],a('\"%s\"')],du=[0,a(ao)],dt=[0,[0,a(ct)],[0,0,0]],dr=[0,a(\"This is invalid. Producing the following result is valid:\")],ds=[0,a(\"This is invalid. Raising the following exception is valid:\")],dp=[0,a(\"produces the following result:\")],dq=[0,a(\"raises the following exception:\")],dl=[0,[0,a(\"seem correct.\")],0],dm=[0,a(\"and\")],dn=[0,1],dj=[0,[0,a(\"seems correct.\")],0],dk=[0,1],dg=[0,[0,a(ct)],0],dh=[0,[0,a(\"is correct.\")],0],di=[0,1],dc=[0,a(L),698,24],da=[0,[0,a(\"Not yet implemented.\")],0],db=[0,a(\"The following exception is raised and never caught:\")],c0=a(\"Can't sample over more than 2^30 elements.\"),cW=[0,a(L),411,4],cS=a(\"in\"),cT=[0,[11,a(\"let \"),[2,0,[11,a(\" =\"),0]]],a(\"let %s =\")],cR=[0,a(L),348,2],cQ=a(\"|>\"),cO=a(\"|]\"),cP=a(\"[| \"),cM=a(\"]\"),cN=a(\"[\"),cK=a(\")\"),cL=a(\"(\"),cJ=[0,[4,0,0,0,0],a(cx)],cD=[0,a(L),178,2],cC=[0,a(L),123,2],cG=a(\",\"),cI=a(\";\"),cU=a(\"Test.SymSeq.OutOfBounds\"),c_=a(\"Test.Fail\"),dA=a(\"string\"),dB=a(\"learnocaml_autoregister_string_D2D111\"),dC=a(k),dD=a(aM),dE=a(\"learnocaml_autoregister_int_C61E7B\"),dF=a(k),dJ=a(cu),dK=a(\"learnocaml_autoregister_char_E7966F\"),dL=a(k),dO=a(\"bool\"),dP=a(\"learnocaml_autoregister_bool_6D07AE\"),dQ=a(k),dT=a(\"option\"),dU=a(\"learnocaml_autoregister_option_D2C37B\"),dV=a(k),dW=a(\"array\"),dX=a(\"learnocaml_autoregister_array_1872EC\"),dY=a(k),dZ=a(\"list\"),d0=a(\"learnocaml_autoregister_list_05296D\"),d1=a(k),d2=a(\"list_int\"),d3=a(\"learnocaml_autoregister_list_int_FFB3FD\"),d4=a(k),d$=[0,a(\"a\"),[0,a(\"b\"),[0,a(\"c\"),[0,a(\"d\"),0]]]],ea=a(bj),eg=a(ab),eh=a(\"learnocaml_autoregister_tree_58C514\"),ei=a(k),ej=a(\"pair\"),ek=a(\"learnocaml_autoregister_pair_5F1023\"),el=a(k),em=a(\"char_list\"),en=a(\"learnocaml_autoregister_char_list_7AFD23\"),eo=a(k),eq=a(\"char_string_list\"),er=a(\"learnocaml_autoregister_char_string_list_9B8556\"),es=a(k),eu=a(\"char_freq_list\"),ev=a(\"learnocaml_autoregister_char_freq_list_42BB52\"),ew=a(k),ex=a(\"char_int\"),ey=a(\"learnocaml_autoregister_char_int_CCABEA\"),ez=a(k),eE=[0,a(\"I am obviously right.\"),[0,a(\"The quick brown fox jumps over the lazy dog.\"),[0,a(\"alpha bravo alpha bravo bravo alpha bravo alpha alpha\"),[0,a(\"\\xc3\\x87a doit marcher avec des accents fran\\xc3\\xa7ais aussi, eh oui, c'est \\xc3\\xa9nervant\"),0]]]],eL=a(cv),eM=a(\"learnocaml_autoregister_entries_DD682E\"),eN=a(k),fp=a(S),fq=a(\"learnocaml_autoregister_write_4BCC67\"),fr=a(k),fU=a(ap),fV=a(\"learnocaml_autoregister_compress_4438D8\"),fW=a(k),fY=a(\"decompress_compress\"),fZ=a(\"learnocaml_autoregister_decompress_compress_5A61C5\"),f0=a(k);function\naP(a){var\nb=a[1];a[1]=b+1|0;return b}var\nT=g[19];function\naQ(b,a){if(b!==T&&a!==T)return b+a|0;return T}function\ncB(b,a){return b<=a?1:0}function\nac(c){var\na=c;for(;;){if(typeof\na===\"number\")return 0===a?0:T;else\nswitch(a[0]){case\n0:var\nb=a[4];break;case\n1:var\nb=a[1];break;case\n2:var\na=a[1];continue;default:return a[1]}return b}}var\naq=0;function\nbn(d,c,a,b){return 0===a?aq:[0,d,c,a,b]}function\naR(a,b){return bn(a,0,Q(a),b)}function\nbo(d){var\nb=0,a=0;for(;;){if(Q(d)<=a)return b;var\nc=o.caml_string_unsafe_get(d,a),e=cy<=c?224<=c?240<=c?4:3:2:1,b=b+1|0,a=a+e|0;continue}}function\nh(a){return aR(a,bo(a))}function\naS(a){return c(M[10],h,a)}function\naT(a){if(10===a)throw[0,U,cC];return aR(c(V[1],1,a),1)}var\nad=aT(32),bp=aT(59),bq=1;function\nbr(a){return 0===a?aq:1===a?ad:[1,a]}function\nbs(a,d){var\nc=0;if(typeof\na!==\"number\"&&2===a[0]){var\nb=a[1];c=1}if(!c)var\nb=a;return[2,b,d]}function\nar(a){return bs(br(a),bq)}var\nbt=ar(0),bu=ar(1);function\nu(a){return 0===a?bt:1===a?bu:ar(a)}function\nf(b,a){if(typeof\nb===\"number\"&&!b)return a;if(typeof\na===\"number\"&&!a)return b;var\nc=ac(a);return[3,aQ(ac(b),c),b,a]}function\nbv(b,a){if(0<=b)return[4,ac(a),b,a];throw[0,U,cD]}function\nq(a){var\nb=ac(a);return b===T?a:[5,b,a]}var\naU=c(V[1],80,32),bw=80;function\naV(b,c){var\na=c;for(;;){if(0<a){if(a<=80)return i(E[16],b,aU,0,a);i(E[16],b,aU,0,bw);var\na=a-80|0;continue}return 0}}function\nbx(b,k,j,h){var\ne=k,d=j,a=h;for(;;)if(typeof\na===\"number\"){if(0===a)return 0;if(d)throw[0,U,cE];c(E[10],b[3],10);aV(b[3],e);b[2]=e;return 0}else\nswitch(a[0]){case\n0:i(E[16],b[3],a[1],a[2],a[3]);b[2]=b[2]+a[4]|0;return 0;case\n1:var\nf=a[1];aV(b[3],f);b[2]=b[2]+f|0;return 0;case\n2:var\nl=d?a[1]:a[2],a=l;continue;case\n3:bx(b,e,d,a[2]);var\na=a[3];continue;case\n4:var\ne=e+a[2]|0,a=a[3];continue;default:if(d)var\ng=d;else\nvar\nm=b[1],g=aQ(b[2],a[1])<=m?1:0;var\nd=g,a=a[2];continue}}function\nby(d,c){var\na=b(E[1],512);bx([0,d,0,a],0,0,c);return b(E[2],a)}function\naW(f,a){if(a)var\ng=a[2],h=function(a){return[0,f,[0,a,0]]},i=c(e[19],h,g),j=b(e[14],i),d=[0,a[1],j];else\nvar\nd=a;return d}function\nae(a){return A(e[26],f,a,aq)}var\ncF=u(1),bz=f(h(cG),cF);function\nbA(a){return ae(aW(bz,a))}var\ncH=u(1),bB=f(h(cI),cH);function\nbC(a){return ae(aW(bB,a))}function\nB(a){return b(aS(cJ),a)}function\naf(a,b){var\nc=u(a);return f(bv(2,f(u(a),b)),c)}function\nW(a){var\nb=h(cK),c=f(af(0,a),b);return f(h(cL),c)}function\nbD(a){var\nb=h(cM),c=f(af(0,a),b);return f(h(cN),c)}function\nbE(a){var\nb=h(cO),c=f(af(0,a),b);return f(h(cP),c)}function\naX(a){return q(W(bA(a)))}function\nbF(a){return q(bD(bC(a)))}function\naY(b,a){if(a){var\nc=f(ad,aX(a));return f(h(b),c)}return h(b)}function\nbG(a){if(a)var\nd=a[2],e=c(aO,function(a){return f(q(u(1)),a)},d),b=[0,a[1],e];else\nvar\nb=a;return b}function\nbH(a){return q(ae(bG(a)))}function\nv(b,a){return bH([0,h(b),a])}function\nbI(b,a){return W(v(b,a))}function\nr(d,a){if(0<b(e[1],a)){var\nc=b(e[9],a),g=b(e[6],c),i=b(e[9],g),j=b(e[5],c),k=f(ad,v(d,i)),l=f(h(cQ),k);return q(f(j,f(u(1),l)))}throw[0,U,cR]}function\nbJ(c,b,a){var\nd=f(u(1),a),e=h(c);return q(f(q(f(b,f(u(1),e))),d))}function\naZ(d,c,a){var\ne=f(u(1),a),g=h(cS),i=f(af(1,c),g);return q(f(q(f(b(aS(cT),d),i)),e))}function\nl(c,a){return by(70,q(b(c,a)))}var\na0=[bk,cU,bf(0)];function\ns(a){return typeof\na===\"number\"?0:0===a[0]?1:a[1]}function\nX(a){return 0===s(a)?1:0}var\nas=0;function\ncV(a){return[0,a]}function\na1(a){if(0<=a)return a;throw[0,U,cW]}function\nbK(b,a){if(X(b))return a;if(X(a))return b;var\nc=s(a);return[1,a1(s(b)+c|0),b,a]}function\ncX(a){return A(e[25],bK,as,a)}function\ncY(b,a){if(!X(b)&&!X(a)){var\nc=s(a);return[2,a1(o.caml_mul(s(b),c)),b,a]}return as}function\ncZ(b,a){return X(a)?as:[3,s(a),b,a]}function\nag(h,g){var\na=h,c=g;for(;;)if(typeof\na===\"number\")throw a0;else\nswitch(a[0]){case\n0:if(0===c)return a[1];throw a0;case\n1:var\ne=a[2],f=s(e);if(c<f){var\na=e;continue}var\na=a[3],c=c-f|0;continue;case\n2:var\nd=a[3],i=o.caml_mod(c,s(d)),j=o.caml_div(c,s(d)),k=ag(d,i);return[0,ag(a[2],j),k];default:var\nl=ag(a[3],c);return b(a[2],l)}}function\nat(e,d){var\na=e,c=d;for(;;)if(typeof\na===\"number\")return 0;else\nswitch(a[0]){case\n0:return b(c,a[1]);case\n1:at(a[2],c);var\na=a[3];continue;case\n2:var\nf=a[3],g=function(d,c){return function(a){return at(c,function(c){return b(d,[0,a,c])})}}(c,f),a=a[2],c=g;continue;default:var\nh=a[2],i=function(c,d){return function(a){return b(c,b(d,a))}}(c,h),a=a[3],c=i;continue}}function\nbL(c){var\na=[0,0];at(c,function(b){a[1]=[0,b,a[1]];return 0});return b(e[9],a[1])}function\nbM(a){return a<1073741824?b(bm[5],a):b(g[2],c0)}var\np=[0,a0,s,X,as,cV,a1,bK,cX,cY,cZ,ag,at,bL,bM,function(b,a){if(s(a)<=b)return bL(a);var\nd=0,h=1;if(b<1)var\ne=d;else{var\nc=h,f=d;for(;;){var\ng=[0,ag(a,bM(s(a))),f],i=c+1|0;if(b!==c){var\nc=i,f=g;continue}var\ne=g;break}}return e}];function\nau(h){var\nd=c(a2[1],0,cy);function\ne(b){try{var\na=c(a2[6],d,b);return a}catch(a){a=bg(a);if(a===g[8]){var\nf=c(h,e,b);A(a2[5],d,b,f);return f}throw a}}return e}function\na3(d,c,a){return b(d,[0,c,a])}function\nbN(b,a){return c(b,a[1],a[2])}function\nc1(a){var\nc=au(function(c){var\nd=b(a,function(a,b){return a3(c,a,b)});return function(a){return bN(d,a)}});return function(a,b){return a3(c,a,b)}}function\na4(a){return p[4]}function\nc2(b,a){return 0===a?b:p[4]}function\nah(c,a){return 0===a?b(p[5],c):p[4]}function\nbO(c,a){return 0===a?p[4]:b(c,a-1|0)}function\nai(e,d,a){var\nf=b(d,a),g=b(e,a);return c(p[7],g,f)}function\nav(a,b){var\nc=a<=b?1:0,d=c?[0,a,av(a+1|0,b)]:c;return d}function\naw(g,f,a){var\nd=av(0,a);function\nh(d){var\ne=b(f,a-d|0),h=b(g,d);return c(p[9],h,e)}var\ni=c(e[19],h,d);return b(p[8],i)}function\nbP(f,e,d){if(0===(d%2|0)){var\ng=d/2|0,h=b(e,g),i=b(f,g);return c(p[9],i,h)}var\na=d/2|0,j=b(e,a),k=b(f,a+1|0),l=c(p[9],k,j),m=b(e,a+1|0),n=b(f,a),o=c(p[9],n,m);return c(p[7],o,l)}function\na5(e,d,a){var\nf=b(d,a);return c(p[10],e,f)}function\nc3(a){var\nb=c(e[19],ah,a);return A(e[25],ai,a4,b)}var\nc4=1;function\nc5(a){return ah(c4,a)}var\nc6=0;function\nc7(a){return ah(c6,a)}function\nc8(a){return ai(c7,c5,a)}function\nbQ(a){function\nb(a){return[0,a[1],a[2]]}return au(function(c){function\nd(b){return aw(a,c,b)}function\ne(a){return a5(b,d,a)}function\nf(a){return bO(e,a)}var\ng=0;function\nh(a){return ah(g,a)}return function(a){return ai(h,f,a)}})}function\nc9(a){function\nb(a){return[0,a[1],a[2]]}var\nc=bQ(a);function\nd(b){return aw(a,c,b)}return function(a){return a5(b,d,a)}}var\ny=[0,a4,a4,c2,ah,bO,ai,ai,av,aw,aw,bP,bP,a5,c3,c8,bQ,c9,function(f,d,a){var\ng=av(0,d);function\nh(d){var\ne=b(a,d);return c(p[15],f,e)}var\ni=c(e[19],h,g);return b(e[14],i)}],a6=[bk,c_,bf(0)];function\nN(b,a){return[0,[0,[0,[0,b],0],a],0]}function\nF(a){throw[0,a6,[0,[2,a,0],0]]}function\nc$(a){function\nb(a){return F([0,[0,a],0])}return c(M[10],b,a)}function\nG(a){try{var\ne=c(m[80],0,a);return e}catch(a){a=bg(a);if(a[1]===a6)return a[2];if(a===aj[1])return[0,[2,da,0],0];var\nd=[0,[2,b(ax[6],0)],0];return[0,[2,[0,db,[0,0,[0,[2,b(ax[1],a)],d]]],0],0]}}function\nbR(a){if(typeof\na===\"number\"){if(0===a)return 0}else\nif(1===a[0])throw[0,bS,dc];return 1}function\na7(a){return c(e[32],bT,a)}function\nbT(a){switch(a[0]){case\n0:return a7(a[2]);case\n1:throw[0,bS,dd];default:return bR(a[2])}}function\nde(a,d){if(a7(a)){var\ne=b(d,0);return c(g[37],a,e)}return a}function\nw(d,b,a){var\ne=c(m[100],d,b);return c(m[104],e,a)}function\ndf(a,e,d,b){return w(e,a,function(e){return G(function(f){if(1-c(b,e,d))F([0,[1,a],dg]);return[0,[2,[0,[1,a],dh],di],0]})})}function\nak(a){return[0,[2,[0,[1,a],dj],dk],0]}function\na8(b,a){return[0,[2,[0,[1,b],[0,dm,[0,[1,a],dl]]],dn],0]}function\nbU(d,b,a){if(0===b[0]){if(0===a[0])return c(d,b[1],a[1])}else\nif(1===a[0])return R(b[1],a[1]);return 0}function\nay(c,a){return 0===a[0]?[0,dp,[0,[2,b(c,a[1])],0]]:[0,dq,[0,[2,b(ax[1],a[1])],0]]}function\nbV(c,a){return 0===a[0]?[0,dr,[0,[2,b(c,a[1])],0]]:[0,ds,[0,[2,b(ax[1],a[1])],0]]}function\nH(a){return[0,[1,a],dt]}function\nI(k,e,j,i,h,a,d){if(R(a,[1,aj[1]]))throw aj[1];var\nf=1-bU(k,a,d);if(f){var\nl=bV(e,d),m=[0,0,ay(e,a)],n=[0,du,[0,0,[0,[1,b(i,h)],m]]],o=c(g[37],n,l);return F(c(g[37],j,o))}return f}function\naz(a,o,n,f,k,d,j,i,h,g){return w(o,a,function(o){return G(function(q){function\np(c){function\ne(a){return b(d,b(o,b(f,c)))}var\ng=b(m[82],e);function\np(a){return b(d,b(n,b(f,c)))}var\nq=b(m[82],p);function\nr(d){return b(j,v(a,[0,b(k,c),0]))}var\ns=0;function\nt(a){return l(r,a)}return I(i,h,H(a),t,s,g,q)}c(e[17],p,g);return ak(a)})})}function\nY(a){return a}function\ndv(g,f,e,d,c,b,a){return az(g,f,e,Y,d,Y,Y,c,b,a)}function\ndw(a,f,k,j,i,h,g,d){return w(f,a,function(n){return G(function(o){function\nf(f){var\nd=f[2],e=f[1];function\no(a){return c(n,e,d)}var\np=b(m[82],o);function\nq(a){return c(k,e,d)}var\nr=b(m[82],q);function\ns(f){var\nc=[0,b(i,d),0];return v(a,[0,b(j,e),c])}var\nt=0;function\nu(a){return l(s,a)}return I(g,h,H(a),u,t,p,r)}c(e[17],f,d);return ak(a)})})}function\nbW(a,f,n,k,j,i,h,g,d){return w(f,a,function(o){return G(function(p){function\nf(c){var\nd=c[3],e=c[2],f=c[1];function\np(a){return A(o,f,e,d)}var\nq=b(m[82],p);function\nr(a){return A(n,f,e,d)}var\ns=b(m[82],r);function\nt(h){var\nc=[0,b(i,d),0],g=[0,b(j,e),c];return v(a,[0,b(k,f),g])}var\nu=0;function\nw(a){return l(t,a)}return I(g,h,H(a),w,u,q,s)}c(e[17],f,d);return ak(a)})})}function\nO(d,a){var\nf=c(e[19],d,a);return b(e[14],f)}function\na9(a,c,b){return a<c?[0,a,a9(a+1|0,c,b)]:b}function\naA(b,a){return a9(b,a,0)}function\ndx(b,a){return O(function(b){return O(function(a){return[0,[0,b,a],0]},a)},b)}function\ndy(a,d){var\nb=aA(0,a+1|0);return O(function(b){return c(d,b,a-b|0)},b)}function\nbX(b,a){return O(b,aA(0,a+1|0))}function\nZ(a){var\nd=b(V[14],a);return c(M[4],dz,d)}function\nz(a){return h(Z(a))}i(n[1],dC,dB,dA,z);i(n[1],dF,dE,dD,B);function\ndG(a){return c(M[4],dH,a)}function\nbY(a){var\nd=b(a_[2],a);return c(M[4],dI,d)}function\nJ(a){return h(bY(a))}i(n[1],dL,dK,dJ,J);function\nbZ(a){return a?dM:dN}function\na$(a){return h(bZ(a))}i(n[1],dQ,dP,dO,a$);function\nba(c,a){return a?aY(dR,[0,b(c,a[1]),0]):h(dS)}i(n[1],dV,dU,dT,ba);function\nbb(d,a){function\ne(a){var\nc=f(bp,u(1));return f(b(d,a),c)}var\ng=c(b0[15],e,a);return q(bE(ae(b(b0[11],g))))}i(n[1],dY,dX,dW,bb);function\nP(b,a){return bF(c(aO,b,a))}i(n[1],d1,d0,dZ,P);function\naB(a){return P(B,a)}i(n[1],d4,d3,d2,aB);function\nd5(a){return l(aB,a)}function\nb1(h,f,e){var\nb=h,a=f,d=e;for(;;){if(0===a[0])return[0,b,d];var\ni=a[2],j=b1(c(g[28],b,d6),i,d),k=a[1],b=c(g[28],b,d7),a=k,d=j;continue}}function\nb2(a){return b1(d8,a,0)}function\nb3(a){return[1,a[1],a[2]]}var\nb4=au(function(a){var\nd=c(y[10],a,a),e=c(y[13],b3,d),f=b(y[5],e),g=b(y[4],d9);return c(y[7],g,f)});function\nb5(c){var\nd=[0,0];function\na(c){if(0===c[0]){var\ne=aP(d)+97|0;return[0,b(a_[1],e)]}var\nf=a(c[2]);return[1,a(c[1]),f]}return a(c)}function\nd_(a){var\nd=b(b4,a),f=b(p[13],d);return c(e[19],b5,f)}var\nb6=b(y[14],d$),b7=b(V[3],ea),eb=b(y[16],b6),ec=c(y[13],b7,eb);function\nb8(a){return b(a_[1],a+1|0)}function\nb9(b,a){if(0===a)return ed;var\nd=b9(b8(b),a-1|0),e=c(V[1],a,b);return c(g[28],e,d)}var\naC=[0,b3,b4,b5,d_,b6,b7,ec,b8,b9];function\nx(a){if(0===a[0]){var\nb=f(ad,J(a[1]));return f(h(ee),b)}var\nc=[0,x(a[2]),0];return aY(ef,[0,x(a[1]),c])}i(n[1],ei,eh,eg,x);function\nbc(a){return l(x,a)}function\n_(d,c,a){var\ne=[0,b(c,a[2]),0];return aX([0,b(d,a[1]),e])}i(n[1],el,ek,ej,_);function\naD(a){return P(J,a)}i(n[1],eo,en,em,aD);function\nb_(a){return l(aD,a)}function\nep(a){return _(J,z,a)}function\naE(a){return P(ep,a)}i(n[1],es,er,eq,aE);function\nb$(a){return l(aE,a)}function\net(a){return _(J,B,a)}function\naF(a){return P(et,a)}i(n[1],ew,ev,eu,aF);function\nca(a){return l(aF,a)}function\naG(a){return _(J,B,a)}i(n[1],ez,ey,ex,aG);function\ncb(a){return l(aG,a)}function\neA(g,f){var\na=f;for(;;){if(a){var\nb=a[2];if(b){var\nd=b[1],e=a[1];if(0<c(g,e,d))return[0,[0,e,d]];var\na=b;continue}}return 0}}function\ncc(f,c){var\nd=[bk,eB,bf(0)];try{var\ne=Q(c)-1|0,g=0;if(!(e<0)){var\na=g;for(;;){if(1-b(f,cr(c,a)))throw d;var\ni=a+1|0;if(e!==a){var\na=i;continue}break}}var\nh=1;return h}catch(a){a=bg(a);if(a===d)return 0;throw a}}function\ncd(a){return 1<a-48>>>0?0:1}function\nce(a){return cc(cd,a)}function\neC(d){var\na=b(E[1],8);c(C[4],a,d);return b(E[2],a)}function\ncf(a){var\nb=[0,0];return function(c){return cr(a,aP(b))}}function\neD(a){var\nc=cf(a);return b(C[5],c)}var\neF=aA(2,10),eG=b(aC[9],97),eH=c(e[19],eG,eF),eI=c(g[37],eH,eE),eJ=A(y[18],20,4,aC[7]),ch=c(g[37],eJ,eI);function\nam(a){return v(eK,[0,W(a),0])}i(n[1],eN,eM,eL,am);function\nci(e){var\na=C[3],c=t[1];return N(eR,az(eQ,b(D[2],[0,[1,0,[0,[3,[0,eP,d[1][1]],0],d[1][1],0,0],[0,[3,[0,eO,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),c,Y,z,a,am,R,ca,ch))}function\neS(a){var\nc=b(t[1],a),d=b(C[3],c);return 2<=b(e[1],d)?1:0}var\nan=c(e[41],eS,ch);function\ncj(f){function\na(f){function\na(h){return G(function(i){function\na(a){function\nc(e){var\nc=b(h,b(f,a)),d=b(C[2],c);return b(C[1],d)}var\nd=b(m[82],c);function\ne(f){var\nc=b(t[1],a),d=b(t[3],c),e=b(C[2],d);return b(C[1],e)}var\ng=b(m[82],e);function\ni(b){return r(eW,[0,r(eV,[0,r(eU,[0,r(eT,[0,z(a),0]),0]),0]),0])}var\nj=0;function\nk(a){return l(i,a)}return I(R,b_,H(bd),k,j,d,g)}c(e[17],a,an);function\nd(a){var\ni=b(h,b(f,a)),m=b(t[4],i),j=c(t[7],m,a),d=Q(j),n=b(t[1],a),o=b(t[3],n),p=b(t[4],o),e=Q(c(t[7],p,a));if(e<=d){var\nk=e<d?1:0;if(k){var\nq=function(a){return r(eY,[0,r(eX,[0,z(a),0]),0])},s=[0,0,[0,[0,gc(M[4],eZ,a,j,d,e)],0]],u=[0,0,[0,e0,[0,0,[0,[1,bc(i)],s]]]],v=[0,e1,[0,0,[0,[1,l(q,a)],u]]],w=H(bd);return F(c(g[37],w,v))}return k}throw[0,U,e2]}c(e[17],d,an);return ak(bd)})}return w(b(D[2],[0,[1,0,[0,[3,[0,e5,d[1][1]],0],d[1][1],0,0],[0,[3,[0,e4,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),e3,a)}return N(e9,w(b(D[2],[0,[1,0,[0,[3,[0,e8,d[1][1]],0],d[1][1],0,0],[0,[3,[0,e7,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),e6,a))}var\n$=bX(aC[4],5);function\nck(e){var\na=C[3],c=t[4];return N(fb,az(fa,b(D[2],[0,[1,0,[0,[3,[0,e$,d[1][1]],0],d[1][1],0,0],[0,[3,[0,e_,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),c,Y,x,a,am,R,b$,$))}var\ncl=O(function(a){var\nb=b2(a);return O(function(b){var\nd=[0,[0,c(g[28],fc,b),7,a],0];return[0,[0,b,0,a],[0,[0,c(g[28],b,fd),0,a],d]]},b)},$);function\ncm(c){var\na=t[8];return N(fk,bW(fj,b(D[2],[0,[1,0,[0,[3,[0,fi,d[1][1]],0],d[1][1],0,0],[0,[1,0,[0,[3,[0,fh,d[1][1]],0],d[1][1],0,0],[0,[1,0,[0,[3,[0,fg,d[1][1]],0],d[1][1],0,0],[0,[2,[0,[0,[3,[0,ff,d[1][1]],0],d[1][1],0,0],[0,[0,[3,[0,fe,d[1][1]],0],d[1][1],0,0],0]]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]],d[1][1],0,0]),a,z,B,x,cb,R,cl))}function\nbe(f,i,d,e){function\nj(a){return b(i,d)}var\na=b(m[82],j);if(0===a[0]){var\nh=1-ce(a[1]);if(h){var\nk=[0,0,ay(Z,a)],l=[0,fm,[0,0,[0,[1,b(e,d)],k]]],n=c(g[37],l,fl);return F(c(g[37],f,n))}return h}if(a[1]===aj[1])throw aj[1];var\no=[0,0,ay(Z,a)],p=[0,fn,[0,0,[0,[1,b(e,d)],o]]];return F(c(g[37],f,p))}function\naH(a){return v(fo,[0,W(x(a)),0])}i(n[1],fr,fq,fp,aH);function\ncn(a){return l(aH,a)}function\nco(f){function\na(a){function\nf(d){return G(function(k){function\nf(b){return be(H(fs),a,b,cn)}c(e[17],f,$);function\ni(c){function\ne(e){return b(d,b(a,c))[1]}var\nf=b(m[82],e),g=[0,c];function\nh(a){return r(fv,[0,r(fu,[0,r(ft,[0,x(c),0]),0]),0])}var\ni=0;return I(R,bc,al,function(a){return l(h,a)},i,f,g)}c(e[17],i,$);function\nj(e){function\nf(j){var\nh=b(a,e),f=c(g[28],h,fw),i=b(d,f)[2];return A(V[9],f,i,6)}var\ni=b(m[82],f);function\nj(g){var\na=[0,B(6),0],b=[0,h(fy),a],c=v(fA,[0,h(fz),b]),d=aZ(fE,v(fD,[0,bI(fC,[0,h(fB),0]),0]),c),f=z(fF);return aZ(fI,bJ(fH,v(fG,[0,W(x(e)),0]),f),d)}var\nk=0;return I(cs,Z,al,function(a){return l(j,a)},k,i,fx)}c(e[17],j,$);return a8(fK,fJ)})}return w(b(D[2],[0,[1,0,[0,[3,[0,fO,d[1][1]],0],d[1][1],0,0],[0,[2,[0,[0,[3,[0,fN,d[1][1]],0],d[1][1],0,0],[0,[0,[3,[0,fM,d[1][1]],0],d[1][1],0,0],0]]],d[1][1],0,0]],d[1][1],0,0]),fL,f)}return N(fS,w(b(D[2],[0,[1,0,[0,[3,[0,fR,d[1][1]],0],d[1][1],0,0],[0,[3,[0,fQ,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),fP,a))}function\naa(a){return r(fT,[0,z(a),0])}i(n[1],fW,fV,fU,aa);function\naI(a){return r(fX,[0,aa(a),0])}i(n[1],f0,fZ,fY,aI);function\ncp(f){function\na(a){function\nf(d){return G(function(k){function\nf(b){function\nc(a){return l(aa,a)}return be(H(f1),a,b,c)}c(e[17],f,an);function\nh(c){function\ne(e){return b(d,b(a,c))}var\nf=b(m[82],e),g=[0,c];return I(cs,Z,al,function(a){return l(aI,a)},c,f,g)}c(e[17],h,an);var\ni=[0,cg,0];function\nj(d){var\ne=8*Q(d)|0,f=Q(b(a,d)),h=1-(f<e?1:0);if(h){var\ni=[0,0,[0,[0,A(M[4],f2,f,e)],0]],j=[0,f3,[0,0,[0,[1,l(aa,d)],i]]];return F(c(g[37],al,j))}return h}c(e[17],j,i);return a8(f5,f4)})}return w(b(D[2],[0,[1,0,[0,[3,[0,f8,d[1][1]],0],d[1][1],0,0],[0,[3,[0,f7,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),f6,f)}return N(ga,w(b(D[2],[0,[1,0,[0,[3,[0,f$,d[1][1]],0],d[1][1],0,0],[0,[3,[0,f_,d[1][1]],0],d[1][1],0,0]],d[1][1],0,0]),f9,a))}function\ncq(n){var\na=cp(0),b=c(g[37],a,0),d=co(0),e=c(g[37],d,b),f=cm(0),h=c(g[37],f,e),i=ck(0),j=c(g[37],i,h),k=cj(0),l=c(g[37],k,j),m=ci(0);return c(g[37],m,l)}var\ngb=A(m[26],0,m[109][2],cq);b(m[1],gb);o.caml_register_global(212,[0,cA,aO,aP,T,aQ,cB,ac,aq,bn,aR,bo,h,aS,aT,ad,bp,bq,br,bs,ar,bt,bu,u,f,bv,q,bw,aU,aV,by,aW,ae,bz,bA,bB,bC,B,af,W,bD,bE,aX,bF,aY,bG,bH,v,bI,r,bJ,aZ,l,p,au,a3,bN,c1,y,a6,N,F,c$,G,bR,bT,a7,de,w,df,ak,a8,bU,ay,bV,al,H,I,az,Y,dv,dw,bW,O,a9,aA,dx,dy,bX,Z,z,z,B,B,dG,bY,J,J,bZ,a$,a$,ba,ba,bb,bb,P,P,aB,aB,d5,b2,aC,x,x,bc,_,_,aD,aD,b_,aE,aE,b$,aF,aF,ca,aG,aG,cb,eA,cc,cd,ce,eC,cf,eD,cg,am,am,ci,an,cj,$,ck,cl,cm,be,aH,aH,cn,co,aa,aa,aI,aI,cp,cq],k);return ge}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 6
  },
  null
]