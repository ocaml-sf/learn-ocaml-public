[
  {
    "learnocaml_version": "2",
    "kind": "exercise",
    "title": "Counting trees",
    "stars": 3,
    "backward_exercises": [
      "fpottier/breaking_sort"
    ]
  },
  {
    "id": "counting_trees",
    "prelude_ml": "type tree =\n  | Leaf\n  | Node of tree * tree\n",
    "template": "(* TO DO: Define [weight] and [height]. *)\n\n(* TO DO: Define [naive_trees_of_weight]. *)\n\n(* TO DO: Define [trees_of_weights]. *)\n\n(* The function call [fix ff] creates and returns a new memoizing function [f]\n   of type [a -> b]. Its argument [ff] is itself a function, whose type is\n   [(a -> b) -> (a -> b)], and which expects to receive [f] as an argument. *)\n\n(* For example, a memoizing factorial can be defined using [fix] as\n   follows:\n\n    let fact =\n      fix (fun self ->\n        fun n ->\n          if n = 0 then 1 else n * self(n-1)\n      )\n\n   Note that the definition of [fact] does not involve [let rec]. Instead,\n   when we wish to perform a recursive call, we invoke [self], the memoizing\n   function which [fix] has constructed for us. *)\n\n(* We assume that it is permitted to use values of type [a] as keys in a hash\n   table. That is, we assume that OCaml's generic equality and hash functions\n   behave in a sensible way when applied to values of type [a]. Thus, we can\n   use the functions [create], [add], [find] provided by the module [Hashtbl]\n   in OCaml's standard library. *)\n\n(* It is now up to you to implement [fix], based on the following skeleton. *)\n\nlet fix : type a b . ((a -> b) -> (a -> b)) -> (a -> b) =\n  fun ff ->\n    let table = Hashtbl.create 128 in\n    let rec f (x : a) : b =\n      (* TO DO: complete this code. *)\n      raise TODO\n    in\n    f\n\n(* TO DO: Define [sigma]. *)\n\n(* TO DO: Define [split_weight]. *)\n\n(* TO DO: Define [trees_of_weight]. *)\n\n(* TO DO: Define [trees_of_weight_0_19]. *)\n\n(* TO DO: Define [split_wb_weight]. *)\n\n(* TO DO: Define [wb_trees_of_weight]. *)\n\n(* TO DO: Define [wb_trees_of_weight_0_19]. *)\n",
    "descr": [
      [
        "",
        "<h1 id=\"Counting-trees\">Counting trees</h1>\n\n<p>In this exercise, we write code that counts binary trees.\nThis allows us to answer questions such as:</p>\n<ul><li>How many binary trees have <strong>weight</strong> <code>w</code>?</li><li>How many binary trees have <strong>height</strong> <code>h</code>?</li><li>How many <strong>weight-balanced</strong> binary trees have weight <code>w</code>?</li><li>How many <strong>height-balanced</strong> binary trees have height <code>h</code>?</li></ul>\n\n<p>This is an opportunity to think about\n<strong>counting</strong> the inhabitants of a type,\na process that is related to\n<strong>enumerating</strong> the inhabitants of a type,\nalbeit counting is slightly simpler than enumerating.</p>\n<p>This is also an opportunity to use <strong>dynamic programming</strong>\nor <strong>memoization</strong> in order to share repeated subcomputations\nand avoid exponential time complexity.</p>\n<p>In this exercise, we focus on questions that involve weight,\nbut analogous questions involving height could be treated in\nthe same way.</p>\n<p>For simplicity, we use OCaml&#39;s built-in limited-precision integers.\nAs we compute fast-growing sequences, we are quickly in danger\nof computing incorrect results due to overflow.\nTo escape this limitation, we would have to\nuse a library such as <a href=\"https://gmplib.org/\" target=\"_blank\" rel=\"noopener noreferrer\">GNU MP</a> or <a href=\"https://opam.ocaml.org/packages/bignum/\" target=\"_blank\" rel=\"noopener noreferrer\">BigNum</a>.</p>\n<h2 id=\"Trees\">Trees</h2>\n\n<p>A binary tree is either a leaf,\nwhich carries no children,\nor a binary node,\nwhich carries two children:</p>\n<pre><code>type tree =\n  | Leaf\n  | Node of tree * tree</code></pre>\n\n<p>Here, a tree carries no data; we are interested purely in its <strong>shape</strong>,\nnot in the data that it might carry.</p>\n<h2 id=\"Weight-and-height\">Weight and height</h2>\n\n<p>The <strong>weight</strong> of a tree is the total number of its binary nodes.</p>\n<p>The <strong>height</strong> of a tree is the maximum number of binary nodes\nthat appear along a branch (that is, a path from the root to a leaf).</p>\n<p><strong>Question 1.</strong> Define a function <code>weight</code> of type <code>tree -&gt; int</code>\nwhich computes the weight of a tree.</p>\n<p><strong>Question 2.</strong> Define a function <code>height</code> of type <code>tree -&gt; int</code>\nwhich computes the height of a tree.</p>\n<h2 id=\"Counting-trees-via-a-direct-recursive-approach\">Counting trees via a direct, recursive approach</h2>\n\n<p>How many (distinct) trees of 5 nodes are there? The answer is 42.\nMore generally, if <code>w</code> is an arbitrary nonnegative integer,\nhow many trees of weight <code>w</code> are there?</p>\n<p><strong>Question 3.</strong> Define a recursive function <code>naive_trees_of_weight</code> of type\n<code>int -&gt; int</code> such that <code>naive_trees_of_weight w</code> is the number of\ntrees of weight <code>w</code>. If needed, read the hints that follow.</p>\n<p><em>Hint</em>. If a tree has positive weight <code>w</code>, then it must be of the form <code>Node\n(t1, t2)</code>, and the sizes <code>w1</code> and <code>w2</code> of its subtrees <code>t1</code> and <code>t2</code> must\nsatisfy <code>w1 + w2 + 1 = w</code>.</p>\n<p><em>Hint</em>. If there are <code>n1</code> possibles shapes for the left subtree <code>t1</code> and <code>n2</code>\npossible shapes for the right subtree <code>t2</code>, then there are <code>n1 * n2</code> possible\nshapes for the tree <code>Node (t1, t2)</code>.</p>\n<p>One problem with this recursive formulation is that it is very slow. Because\nsome subcomputations are repeated over and over again, it has exponential time\ncomplexity.</p>\n<h2 id=\"Counting-trees-by-dynamic-programming\">Counting trees by dynamic programming</h2>\n\n<p>In order to avoid repeated subcomputations,\na classic technique is <strong>dynamic programming</strong>.</p>\n<p>The idea is to decide in advance which computations will take place\nand in what order they will take place.</p>\n<p>Here, we wish to compute\nthe number of trees of weight 0,\nthe number of trees of weight 1,\nand so on,\nin this order,\nuntil we obtain the number of trees of weight <code>w</code>,\nfor some <code>w</code> of interest.\nWhile computing the number of trees of weight <code>j</code>,\nwe may need the number of trees of weight <code>i</code>,\nwhere <code>i &lt; j</code> holds. All we have to do,\nin that case, is look up this information in a table,\nsince it has been computed already.</p>\n<p><strong>Question 4.</strong> Define a nonrecursive function <code>trees_of_weights</code> of type\n<code>int -&gt; int array</code> such that <code>trees_of_weights w</code> is an array of size <code>w+1</code>\nwhose entry at index <code>w</code> is the number of trees of weight <code>w</code>.</p>\n<p>Dynamic programming is an interesting misnomer: it could instead be called\n<strong>static scheduling</strong>, since the order in which subcomputations take place is\ndecided ahead of time.</p>\n<p>It is a powerful technique, but is slightly inconvenient, as one must\nexplicitly decide the order in which computations take place and encode it\nusing one or more loops.</p>\n<p>Furthermore, in some cases, dynamic programming can perform useless work.\nIndeed, every computation in the schedule is performed exactly once. However,\nsome computations that appear in the schedule may turn out to not influence\nthe computation of the final result.</p>\n<h2 id=\"Memoization\">Memoization</h2>\n\n<p>To address the above issues, one can exploit <strong>memoization</strong>. In this\napproach, we write a recursive function, as in our initial naive approach, but\nwe arrange for the results of every call (including intermediate recursive\ncalls) to be recorded in a table. Thus, if a call is repeated, then its result\nis immediately found in the table.</p>\n<p>In this approach, each computation is performed at most once, possibly never.\nThe order in which computations take place remains implicit.</p>\n<p>Memoization can be implemented once and for all as a function <code>fix</code>. The idea\nis, instead of defining an ordinary recursive function by <code>let rec f x = e</code>,\na user can define a memoizing recursive function by <code>let f = fix (fun f x -&gt;\ne)</code>. The expression <code>e</code> is unchanged; a recursive call to <code>f</code> inside <code>e</code> is\nre-interpreted as a call to the parameter <code>f</code> of the function <code>fun f x -&gt; e</code>.</p>\n<p><strong>Question 5.</strong> Complete the definition of the function <code>fix</code>, whose skeleton\nis given to you.</p>\n<h2 id=\"Counting-trees-using-a-memoizing-recursive-function\">Counting trees using a memoizing recursive function</h2>\n\n<p>We now come back to our initial motivation, which is to answer the question:\nif <code>w</code> is an arbitrary nonnegative integer, how many trees of weight <code>w</code> are\nthere?</p>\n<p>In order to express the answer to this question in an elegant manner, let us\nfirst write two auxiliary functions, <code>sigma</code> and <code>split_weight</code>.</p>\n<p><strong>Question 6.</strong> Define a function <code>sigma</code> of type <code>int -&gt; int -&gt; (int -&gt; int)\n  -&gt; int</code> such that <code>sigma i j f</code> is the sum <code>f i + f (i+1) + ... + f j</code>. The\nsum is zero if <code>j</code> is strictly less than <code>i</code>.</p>\n<p><strong>Question 7.</strong> Define a function <code>split_weight</code> of type <code>int -&gt; (int -&gt; int\n-&gt; int) -&gt; int</code> such that <code>split_weight w f</code> is the sum of all terms of the\nform <code>f w1 w2</code>, where the weights <code>w1</code> and <code>w2</code> must obey the constraint <code>w1 + w2 = w</code>.</p>\n<p><strong>Question 8.</strong> Define a memoizing function <code>trees_of_weight</code> of type\n<code>int -&gt; int</code> such that <code>trees_of_weight w</code> is the number of\ntrees of weight <code>w</code>.</p>\n<p><strong>Question 9.</strong> Construct a list <code>trees_of_weight_0_19</code> of the values of\n<code>trees_of_weight w</code>, where <code>w</code> ranges from 0 to 19 (included).</p>\n<p><strong>Hint.</strong> First define a recursive function <code>tabulate</code> of type <code>(int -&gt; &#39;a) -&gt;\nint -&gt; int -&gt; &#39;a list</code> such that <code>tabulate f i j</code> is a list of the values <code>f\nx</code>, where <code>x</code> ranges from <code>i</code> to <code>j</code> (included).</p>\n<p>The numbers in this sequence are known as the\n<a href=\"https://oeis.org/A000108\" target=\"_blank\" rel=\"noopener noreferrer\">Catalan numbers</a>.</p>\n<h2 id=\"Counting-weight-balanced-trees\">Counting weight-balanced trees</h2>\n\n<p>The property of being <strong>weight-balanced</strong> is inductively defined as follows.\nAn empty tree <code>Leaf</code> is weight-balanced.\nA nonempty tree <code>Node(t1, t2)</code> is weight-balanced if\nits children <code>t1</code> and <code>t2</code> are weight-balanced and\ntheir weights differ by at most one.</p>\n<p><strong>Question 10.</strong> Define a function <code>split_wb_weight</code> of type <code>int -&gt; (int -&gt;\nint -&gt; int) -&gt; int</code> such that <code>split_wb_weight w f</code> is the sum of all terms of\nthe form <code>f w1 w2</code>, where <code>w1</code> and <code>w2</code> must obey the constraint <code>w1 + w2 = w</code>\nand must differ by at most one.</p>\n<p><strong>Question 11.</strong> Define a memoizing function <code>wb_trees_of_weight</code> of type <code>int\n-&gt; int</code> such that <code>wb_trees_of_weight w</code> is the number of weight-balanced\ntrees of weight <code>w</code>.</p>\n<p><strong>Question 12.</strong> Construct a list <code>wb_trees_of_weight_0_19</code> of the values of\n<code>wb_trees_of_weight w</code>, where <code>w</code> ranges from 0 to 19 (included).</p>\n<p>This is quite <a href=\"https://oeis.org/A110316\" target=\"_blank\" rel=\"noopener noreferrer\">an amazing sequence</a>, isn&#39;t it?</p>\n"
      ]
    ],
    "compiled": {
      "prelude_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAANoAAAAoAAAAqgAAAJ6gJ1ByZWx1ZGWgwaAkdHJlZQBUCAAAOABAQJGg4KAkTGVhZgBSkEBAsMAJQS4vX2xlYXJuLW9jYW1sLWJ1aWxkL2V4ZXJjaXNlcy9mcG90dGllci9jb3VudGluZ190cmVlcy9wcmVsdWRlLm1sQkxOwAQCQkxUQEChBBFBoOCgJE5vZGUAU5CgwLOQBBdAkEACBfXhAEAA/qDAswQFQJBAAgX14QBAAP1AQLDABBNDVVfABBRDVWxAQKEEI0JAQUBAQEBAsMAEF0FAQAQEQEBAoEBAoQQnQEFAQISVpr4AAAC6AAAAGQAAAGIAAABOoKAnUHJlbHVkZZAwcXajry+AA1WmBs934bde7aCgJlN0ZGxpYpAwSwS07aGapyLfNlFBiV+zR6CgOExlYXJub2NhbWxfaW50ZXJuYWxfaW50ZpAw+3WBgduUsgywuZFokdSmi6CgM0xlYXJub2NhbWxfY2FsbGJhY2uQMNSliLdPF5OaPQloTd04iiGgoDhDYW1saW50ZXJuYWxGb3JtYXRCYXNpY3OQMLbGaUlV4QABrtJnVxEEqWFAhJWmvgAAAAQAAAACAAAABQAAAAWgkEBA",
      "prepare_cmi": "Q2FtbDE5OTlJMDI5hJWmvgAAADwAAAAPAAAANQAAADKgJ1ByZXBhcmWgwqAkVE9ETwBTCAAAIACQoyNleG5HQJBAQEGwwCZfbm9uZV9AQAD/BAJBQKEEDkBCQECElaa+AAAA1gAAAB4AAABzAAAAXKCgJ1ByZXBhcmWQMBFwj9eIKxOeuzDw3l+vJ7agoCZTdGRsaWKQMEsEtO2hmqci3zZRQYlfs0egoCdQcmVsdWRlkDBxdqOvL4ADVaYGz3fht17toKA4TGVhcm5vY2FtbF9pbnRlcm5hbF9pbnRmkDD7dYGB25SyDLC5kWiR1KaLoKAzTGVhcm5vY2FtbF9jYWxsYmFja5Aw1KWIt08Xk5o9CWhN3TiKIaCgOENhbWxpbnRlcm5hbEZvcm1hdEJhc2ljc5AwtsZpSVXhAAGu0mdXEQSpYUCElaa+AAAABAAAAAIAAAAFAAAABaCQQEA=",
      "solution_cmi": "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",
      "test_cmi": "",
      "exercise_lib": {
        "cma": "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",
        "js": "function\ndynload(x){\"use strict\";var\ny={},a=x.jsoo_runtime,f=a.caml_check_bound,e=a.caml_mul,l=a.caml_register_global,w=a.caml_wrap_exception;function\nc(b,c){return b.length==1?b(c):a.caml_call_gen(b,[c])}function\nb(b,c,d){return b.length==2?b(c,d):a.caml_call_gen(b,[c,d])}function\nv(b,c,d,e){return b.length==3?b(c,d,e):a.caml_call_gen(b,[c,d,e])}var\ns=a.caml_get_global_data(),m=s.Stdlib,k=s.Stdlib__hashtbl;l(1,[0],\"Prelude\");l(2,[0,[248,a.caml_string_of_jsbytes(\"Prepare.TODO\"),a.caml_fresh_oo_id(0)]],\"Prepare\");function\ng(a){if(a)var\nc=g(a[2]),b=(g(a[1])+c|0)+1|0;else\nvar\nb=a;return b}function\nh(a){if(a)var\nd=h(a[2]),e=h(a[1]),c=b(m[17],e,d)+1|0;else\nvar\nc=a;return c}function\ni(c){if(0===c)return 1;var\nb=c-1|0,d=0,j=0;if(b<0)var\nf=d;else{var\na=j,g=d;for(;;){var\nk=i(b-a|0),h=g+e(i(a),k)|0,l=a+1|0;if(b!==a){var\na=l,g=h;continue}var\nf=h;break}}return f}function\nt(g){var\nc=a.caml_make_vect(g+1|0,0);f(c,0)[1]=1;var\nj=1;if(!(g<1)){var\nb=j;for(;;){var\nh=b-1|0,k=0;if(!(h<0)){var\nd=k;for(;;){var\ni=(b-1|0)-d|0,m=f(c,i)[1+i],n=e(f(c,d)[1+d],m);c[1+b]=f(c,b)[1+b]+n|0;var\no=d+1|0;if(h!==d){var\nd=o;continue}break}}var\nl=b+1|0;if(g!==b){var\nb=l;continue}break}}return c}function\nj(g){var\nd=b(k[1],0,128);function\ne(c){try{var\na=b(k[6],d,c);return a}catch(a){a=w(a);if(a===m[8]){var\nf=b(g,e,c);v(k[5],d,c,f);return f}throw a}}return e}function\nn(d,b,i){var\ne=0;if(b<d)var\nf=e;else{var\na=d,g=e;for(;;){var\nh=g+c(i,a)|0,j=a+1|0;if(b!==a){var\na=j,g=h;continue}var\nf=h;break}}return f}function\no(a,d){return n(0,a,function(c){return b(d,c,a-c|0)})}var\np=j(function(b,a){return 0===a?1:o(a-1|0,function(d,a){var\nf=c(b,a);return e(c(b,d),f)})});function\nd(e,a,b){var\nf=a<=b?1:0;if(f)var\nh=d(e,a+1|0,b),g=[0,c(e,a),h];else\nvar\ng=f;return g}var\nu=d(p,0,19);function\nq(d,c){if(0===(d%2|0)){var\ne=d/2|0;return b(c,e,e)}var\na=d/2|0,f=b(c,a,a+1|0);return b(c,a+1|0,a)+f|0}var\nr=j(function(b,a){return 0===a?1:q(a-1|0,function(d,a){var\nf=c(b,a);return e(c(b,d),f)})});l(5,[0,g,h,i,t,j,n,o,p,d,u,q,r,d(r,0,19)],\"Solution\");return y}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      },
      "test_lib": {
        "cma": "",
        "js": "function\ndynload(dp){\"use strict\";var\ndq={},bf=\"%s, %d\",bb=\"is incorrect.\",ba=\"%d\",ap=\"tree\",a$=\"array\",ao=\"a\",be=\"list\",D=104,bd=\"(fun w1 w2 -> 1 + w1 * w2)\",S=\"Test\",an=\"b\",e=\"int\",M=\"./_learn-ocaml-build/exercises/fpottier/counting_trees/test.ml\",bc=\", \",C=100,m=dp.jsoo_runtime,R=m.caml_equal,a_=m.caml_ml_string_length,am=m.caml_mul,a=m.caml_string_of_jsbytes,dn=m.caml_wrap_exception;function\nd(a,b){return a.length==1?a(b):m.caml_call_gen(a,[b])}function\nc(a,b,c){return a.length==2?a(b,c):m.caml_call_gen(a,[b,c])}function\nw(a,b,c,d){return a.length==3?a(b,c,d):m.caml_call_gen(a,[b,c,d])}function\nB(a,b,c,d,e){return a.length==4?a(b,c,d,e):m.caml_call_gen(a,[b,c,d,e])}var\ni=m.caml_get_global_data(),Q=a(\"fix\"),y=i.Stdlib__buffer,W=i.Assert_failure,aN=i.Match_failure,p=i.Stdlib__list,f=i.Stdlib,l=i.Solution,b=i.Ast_helper,n=i.Ty,q=i.Stdlib__printf,h=i.Test_lib,aS=i.Stdlib__array,X=i.Stdlib__string,aL=i.Stdlib__printexc,aj=i.Learnocaml_internal,E=p[17],N=p[19],x=f[19],bj=[0,a(M),236,6],bx=[0,a(M),379,26],b6=a(\"Node\"),b7=a(\"Leaf\"),di=[0,a(e)],dj=[0,a(be)],dk=a(\"wb_trees_of_weight_0_19\"),dl=a(\"Question 12\"),de=[0,a(e)],df=[0,a(e)],dg=a(\"wb_trees_of_weight\"),dh=a(\"Question 11\"),c8=a(bd),c9=[0,a(e)],c_=[0,a(e)],c$=[0,a(e)],da=[0,a(e)],db=[0,a(e)],dc=a(\"split_wb_weight\"),dd=a(\"Question 10\"),c4=[0,a(e)],c5=[0,a(be)],c6=a(\"trees_of_weight_0_19\"),c7=a(\"Question 9\"),c0=[0,a(e)],c1=[0,a(e)],c2=a(\"trees_of_weight\"),c3=a(\"Question 8\"),cS=a(bd),cT=[0,a(e)],cU=[0,a(e)],cV=[0,a(e)],cW=[0,a(e)],cX=[0,a(e)],cY=a(\"split_weight\"),cZ=a(\"Question 7\"),cK=a(\"(fun i -> i)\"),cL=[0,a(e)],cM=[0,a(e)],cN=[0,a(e)],cO=[0,a(e)],cP=[0,a(e)],cQ=a(\"sigma\"),cR=a(\"Question 6\"),cI=[0,[2,0,[11,a(bc),[4,0,0,0,0]]],a(bf)],cH=[0,[2,0,[11,a(bc),[4,0,0,0,0]]],a(bf)],cB=[0,a(an)],cC=[0,a(ao)],cD=[0,a(an)],cE=[0,a(ao)],cF=[0,a(an)],cG=[0,a(ao)],cJ=a(\"Question 5\"),cs=[0,[4,0,0,0,[11,a(\" calls are performed, whereas \"),[4,0,0,0,[11,a(\" should suffice.\"),0]]]],a(\"%d calls are performed, whereas %d should suffice.\")],ct=[0,a(\"When applied to the following argument:\")],cu=[0,a(\"has incorrect complexity.\")],cm=[0,0,[0,1,[0,2,[0,5,[0,10,[0,15,[0,20,0]]]]]]],cn=[0,a(e)],co=[0,a(a$)],cp=[0,a(e)],cq=a(\"trees_of_weights\"),cr=a(\"Question 4\"),ci=[0,a(e)],cj=[0,a(e)],ck=a(\"naive_trees_of_weight\"),cl=a(\"Question 3\"),ce=[0,a(e)],cf=[0,a(ap)],cg=a(\"height\"),ch=a(\"Question 2\"),ca=[0,a(e)],cb=[0,a(ap)],cc=a(\"weight\"),cd=a(\"Question 1\"),b5=[0,0,0],bW=a(\"Some\"),bX=a(\"None\"),bU=a(\"true\"),bV=a(\"false\"),bS=[0,[12,39,[2,0,[12,39,0]]],a(\"'%s'\")],bP=[0,[4,0,0,0,0],a(ba)],bO=[0,[12,34,[2,0,[12,34,0]]],a('\"%s\"')],bL=[0,0,0],bF=a(\"s\"),bK=a(\"\"),bG=[0,a(\"A valid result is:\")],bH=[0,a(\"it produces the following invalid result:\")],bI=[0,[11,a(\"When applied to the following argument\"),[2,0,[12,58,0]]],a(\"When applied to the following argument%s:\")],bJ=[0,a(bb)],bD=[0,[0,a(\"seems correct.\")],0],bE=[0,1],bA=[0,[0,a(bb)],0],bB=[0,[0,a(\"is correct.\")],0],bC=[0,1],bw=[0,a(M),370,24],bu=[0,[0,a(\"Not yet implemented.\")],0],bv=[0,a(\"The following exception is raised and never caught:\")],bp=a(\"|]\"),bq=a(\"[| \"),bn=a(\")\"),bo=a(\"(\"),bm=[0,[4,0,0,0,0],a(ba)],bi=[0,a(M),167,2],bh=[0,a(M),112,2],bl=a(\",\"),br=a(\"Test.Fail\"),bY=a(\"option\"),bZ=a(\"learnocaml_autoregister_option_4BCC67\"),b0=a(S),b1=a(a$),b2=a(\"learnocaml_autoregister_array_4438D8\"),b3=a(S),b8=a(ap),b9=a(\"learnocaml_autoregister_tree_5A61C5\"),b_=a(S),cw=[0,10,0],cx=a(\"(fun fib n -> if n <= 1 then 1 else fib(n-2) + fib(n-1))\"),cz=[0,10,0],cA=a(\"(fun fact n -> if n = 0 then 1 else n * fact(n-1))\"),bR=i.Stdlib__char,bt=i.Prepare;function\nT(b,a){if(b!==x&&a!==x)return b+a|0;return x}function\nbg(b,a){return b<=a?1:0}function\nF(c){var\na=c;for(;;){if(typeof\na===\"number\")return 0===a?0:x;else\nswitch(a[0]){case\n0:var\nb=a[4];break;case\n1:var\nb=a[1];break;case\n2:var\na=a[1];continue;default:return a[1]}return b}}var\nG=0;function\naq(d,c,a,b){return 0===a?G:[0,d,c,a,b]}function\nU(a,b){return aq(a,0,a_(a),b)}function\nar(d){var\nb=0,a=0;for(;;){if(a_(d)<=a)return b;var\nc=m.caml_string_unsafe_get(d,a),e=128<=c?224<=c?240<=c?4:3:2:1,b=b+1|0,a=a+e|0;continue}}function\no(a){return U(a,ar(a))}function\nas(a){return c(q[10],o,a)}function\nV(a){if(10===a)throw[0,W,bh];return U(c(X[1],1,a),1)}var\nY=V(32),at=V(59),au=1;function\nav(a){return 0===a?G:1===a?Y:[1,a]}function\naw(a,d){var\nc=0;if(typeof\na!==\"number\"&&2===a[0]){var\nb=a[1];c=1}if(!c)var\nb=a;return[2,b,d]}function\nO(a){return aw(av(a),au)}var\nax=O(0),ay=O(1);function\nH(a){return 0===a?ax:1===a?ay:O(a)}function\nj(b,a){if(typeof\nb===\"number\"&&!b)return a;if(typeof\na===\"number\"&&!a)return b;var\nc=F(a);return[3,T(F(b),c),b,a]}function\naz(b,a){if(0<=b)return[4,F(a),b,a];throw[0,W,bi]}function\nI(a){var\nb=F(a);return b===x?a:[5,b,a]}var\nZ=c(X[1],80,32),aA=80;function\n_(b,c){var\na=c;for(;;){if(0<a){if(a<=80)return B(y[16],b,Z,0,a);B(y[16],b,Z,0,aA);var\na=a-80|0;continue}return 0}}function\naB(b,j,i,h){var\ne=j,d=i,a=h;for(;;)if(typeof\na===\"number\"){if(0===a)return 0;if(d)throw[0,W,bj];c(y[10],b[3],10);_(b[3],e);b[2]=e;return 0}else\nswitch(a[0]){case\n0:B(y[16],b[3],a[1],a[2],a[3]);b[2]=b[2]+a[4]|0;return 0;case\n1:var\nf=a[1];_(b[3],f);b[2]=b[2]+f|0;return 0;case\n2:var\nk=d?a[1]:a[2],a=k;continue;case\n3:aB(b,e,d,a[2]);var\na=a[3];continue;case\n4:var\ne=e+a[2]|0,a=a[3];continue;default:if(d)var\ng=d;else\nvar\nl=b[1],g=T(b[2],a[1])<=l?1:0;var\nd=g,a=a[2];continue}}function\naC(c,b){var\na=d(y[1],512);aB([0,c,0,a],0,0,b);return d(y[2],a)}function\n$(a){return w(p[26],j,a,G)}var\nbk=H(1),aD=j(o(bl),bk);function\naE(a){return j(aD,a)}function\naF(a){return $(c(N,aE,a))}function\naG(a){if(a){var\nb=aF(a[2]);return j(a[1],b)}return G}function\naH(a){return d(as(bm),a)}function\naa(a){var\nb=H(0);return j(az(2,j(H(0),a)),b)}function\naI(a){var\nb=o(bn),c=j(aa(a),b);return j(o(bo),c)}function\naJ(a){var\nb=o(bp),c=j(aa(a),b);return j(o(bq),c)}function\naK(a){return I(aI(aG(a)))}function\nab(b,a){var\nc=j(Y,aK(a));return j(o(b),c)}function\nac(b,a){return aC(70,I(d(b,a)))}var\nad=[248,br,m.caml_fresh_oo_id(0)];function\nk(b,a){return[0,[0,[0,[0,b],0],a],0]}function\nJ(a){throw[0,ad,[0,[2,a,0],0]]}function\nbs(a){function\nb(a){return J([0,[0,a],0])}return c(q[10],b,a)}function\nz(a){try{var\ne=c(h[80],0,a);return e}catch(a){a=dn(a);if(a[1]===ad)return a[2];if(a===bt[1])return[0,[2,bu,0],0];var\nb=[0,[2,d(aL[6],0)],0];return[0,[2,[0,bv,[0,0,[0,[2,d(aL[1],a)],b]]],0],0]}}function\naM(a){if(typeof\na===\"number\"){if(0===a)return 0}else\nif(1===a[0])throw[0,aN,bw];return 1}function\nae(a){return c(p[32],aO,a)}function\naO(a){switch(a[0]){case\n0:return ae(a[2]);case\n1:throw[0,aN,bx];default:return aM(a[2])}}function\nby(a,b){if(ae(a)){var\ne=d(b,0);return c(f[37],a,e)}return a}function\nbz(d,b,a){var\ne=c(h[C],d,b);return c(h[D],e,a)}function\naf(a,e,d,b){function\nf(e){return z(function(f){if(1-c(b,e,d))J([0,[1,a],bA]);return[0,[2,[0,[1,a],bB],bC],0]})}var\ng=c(h[C],e,a);return c(h[D],g,f)}function\nK(a){return[0,[2,[0,[1,a],bD],bE],0]}function\nL(j,i,h,g,e,b,a){var\nk=1<e?bF:bK,l=[0,bG,[0,0,[0,[2,d(a,g)],0]]],m=[0,bH,[0,0,[0,[2,d(a,h)],l]]],n=[0,0,d(b,i)],o=[0,[0,c(q[4],bI,k)],n];return J([0,[1,j],[0,bJ,[0,0,c(f[37],o,m)]]])}function\nr(b,a){return[0,[1,d(b,a)],bL]}function\nt(a,e,l,k,j,i,b){function\nf(h){return z(function(f){function\ne(b){var\ne=d(h,b),f=d(l,b),g=1-c(i,e,f);return g?L(a,b,e,f,1,function(a){return r(k,a)},j):g}c(p[17],e,b);return K(a)})}var\ng=c(h[C],e,a);return c(h[D],g,f)}function\nag(a,d,n,m,l,k,j,b){function\ne(o){return z(function(e){function\nd(b){var\nd=b[2],e=b[1],g=c(o,e,d),h=c(n,e,d),i=1-c(j,g,h);return i?L(a,b,g,h,2,function(a){var\nb=r(l,a[2]),d=r(m,a[1]);return c(f[37],d,b)},k):i}c(p[17],d,b);return K(a)})}var\ng=c(h[C],d,a);return c(h[D],g,e)}function\naP(b,d,q,o,n,m,l,k,a){function\ne(s){return z(function(e){function\nd(a){var\nd=a[3],e=a[2],g=a[1],h=w(s,g,e,d),i=w(q,g,e,d),j=1-c(k,h,i);return j?L(b,a,h,i,3,function(a){var\nb=r(m,a[3]),d=r(n,a[2]),e=c(f[37],d,b),g=r(o,a[1]);return c(f[37],g,e)},l):j}c(p[17],d,a);return K(b)})}var\ng=c(h[C],d,b);return c(h[D],g,e)}function\nu(b,a){var\ne=c(p[19],b,a);return d(p[14],e)}function\nah(a,c,b){return a<c?[0,a,ah(a+1|0,c,b)]:b}function\ns(b,a){return ah(b,a,0)}function\nbM(b,a){return u(function(b){return u(function(a){return[0,[0,b,a],0]},a)},b)}function\naQ(a,d){var\nb=s(0,a+1|0);return u(function(b){return c(d,b,a-b|0)},b)}function\naR(b,a){return u(b,s(0,a+1|0))}function\nbN(a){var\nb=d(X[14],a);return c(q[4],bO,b)}function\ng(a){return c(q[4],bP,a)}function\nbQ(a){var\nb=d(bR[2],a);return c(q[4],bS,b)}function\nbT(a){return a?bU:bV}function\nai(b,a){return a?ab(bW,[0,d(b,a[1]),0]):o(bX)}B(aj[1],b0,bZ,bY,ai);function\nP(b,a){function\ne(a){var\nc=j(at,H(1));return j(d(b,a),c)}var\nf=c(aS[15],e,a);return I(aJ($(d(aS[11],f))))}B(aj[1],b3,b2,b1,P);function\nb4(b,a){return 0===a?b5:aQ(a-1|0,function(c,a){var\ne=d(b,c);return u(function(c){var\ne=d(b,a);return u(function(a){return[0,[0,c,a],0]},e)},e)})}var\naT=d(l[5],b4);function\nA(a){if(a)var\nc=[0,A(a[2]),0],b=ab(b6,[0,A(a[1]),c]);else\nvar\nb=o(b7);return I(b)}B(aj[1],b_,b9,b8,A);function\nak(a){return ac(A,a)}function\nb$(a){return P(aH,a)}function\naU(a){return ac(b$,a)}var\naV=aR(aT,10);function\naW(e){function\na(b,a){return b===a?1:0}var\nc=l[1];return k(cd,t(cc,d(n[2],[0,[1,0,[0,[3,[0,cb,b[1][1]],0],b[1][1],0,0],[0,[3,[0,ca,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),c,ak,g,a,aV))}function\naX(e){function\na(b,a){return b===a?1:0}var\nc=l[2];return k(ch,t(cg,d(n[2],[0,[1,0,[0,[3,[0,cf,b[1][1]],0],b[1][1],0,0],[0,[3,[0,ce,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),c,ak,g,a,aV))}function\naY(f){var\na=s(0,10);function\nc(b,a){return b===a?1:0}var\ne=l[8];return k(cl,t(ck,d(n[2],[0,[1,0,[0,[3,[0,cj,b[1][1]],0],b[1][1],0,0],[0,[3,[0,ci,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),e,g,g,c,a))}function\naZ(c){var\na=l[4];return k(cr,t(cq,d(n[2],[0,[1,0,[0,[3,[0,cp,b[1][1]],0],b[1][1],0,0],[0,[3,[0,co,b[1][1]],[0,[0,[3,[0,cn,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0]],b[1][1],0,0]),a,g,aU,R,cm))}var\nv=[0,0];function\na0(h,g,e,b,a){var\ni=[0,[0,w(q[4],cs,e,b)],0],j=[0,[1,h],[0,cu,[0,0,[0,ct,[0,0,d(a,g)]]]]];return J(c(f[37],j,i))}var\ncv=0,cy=[0,[0,function(b,a){v[1]++;if(1<a){var\nc=d(b,a-1|0);return d(b,a-2|0)+c|0}return 1},cx,cw],cv],al=[0,[0,function(b,a){v[1]++;return 0===a?1:am(a,d(b,a-1|0))},cA,cz],cy];function\na1(j){var\na=d(n[2],[0,[1,0,[0,[1,0,[0,[1,0,[0,cG,b[1][1],0,0],[0,cF,b[1][1],0,0]],b[1][1],0,0],[0,[1,0,[0,cE,b[1][1],0,0],[0,cD,b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0],[0,[1,0,[0,cC,b[1][1],0,0],[0,cB,b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),e=l[5];function\nf(b){return z(function(a){c(E,function(a){var\nf=a[1],h=a[2],i=d(b,f),j=d(e,f),k=a[3];return c(E,function(a){var\nb=d(i,a),c=d(j,a),e=1-R(b,c);if(e){var\nf=function(a){return w(q[4],cH,h,a)};return L(Q,a,b,c,1,function(a){return r(f,a)},g)}return e},k)},al);c(E,function(a){var\nf=a[1],g=a[2],h=d(b,f),i=d(e,f),j=a[3];return c(E,function(a){var\nf=v[1];d(h,a);var\nb=v[1]-f|0,j=v[1];d(i,a);var\nc=v[1]-j|0,e=c<b?1:0;if(e){var\nk=function(a){return w(q[4],cI,g,a)};return a0(Q,a,b,c,function(a){return r(k,a)})}return e},j)},al);return K(Q)})}var\ni=c(h[C],a,Q);return k(cJ,c(h[D],i,f))}function\na2(i){function\na(a){return a}function\nc(a){return cK}var\ne=[0,[0,0,10,a],[0,[0,1,10,a],[0,[0,-5,5,a],[0,[0,1,1,a],[0,[0,1,0,a],0]]]]];function\nf(b,a){return b===a?1:0}var\nh=l[6];return k(cR,aP(cQ,d(n[2],[0,[1,0,[0,[3,[0,cP,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,cO,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[1,0,[0,[3,[0,cN,b[1][1]],0],b[1][1],0,0],[0,[3,[0,cM,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0],[0,[3,[0,cL,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),h,g,g,c,g,f,e))}function\na3(m){function\na(b,a){return 1+am(b,a)|0}function\ne(a){return cS}var\nf=s(0,10),h=c(N,function(b){return[0,b,a]},f);function\ni(b,a){return b===a?1:0}var\nj=l[7];return k(cZ,ag(cY,d(n[2],[0,[1,0,[0,[3,[0,cX,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[1,0,[0,[3,[0,cW,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,cV,b[1][1]],0],b[1][1],0,0],[0,[3,[0,cU,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0],[0,[3,[0,cT,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),j,g,e,g,i,h))}function\na4(f){var\na=s(0,20);function\nc(b,a){return b===a?1:0}var\ne=l[8];return k(c3,t(c2,d(n[2],[0,[1,0,[0,[3,[0,c1,b[1][1]],0],b[1][1],0,0],[0,[3,[0,c0,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),e,g,g,c,a))}function\na5(c){var\na=l[10];return k(c7,af(c6,d(n[2],[0,[3,[0,c5,b[1][1]],[0,[0,[3,[0,c4,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0]),a,R))}function\na6(m){function\na(b,a){return 1+am(b,a)|0}function\ne(a){return c8}var\nf=s(0,10),h=c(N,function(b){return[0,b,a]},f);function\ni(b,a){return b===a?1:0}var\nj=l[11];return k(dd,ag(dc,d(n[2],[0,[1,0,[0,[3,[0,db,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[1,0,[0,[3,[0,da,b[1][1]],0],b[1][1],0,0],[0,[1,0,[0,[3,[0,c$,b[1][1]],0],b[1][1],0,0],[0,[3,[0,c_,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0],[0,[3,[0,c9,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]],b[1][1],0,0]),j,g,e,g,i,h))}function\na7(f){var\na=s(0,20);function\nc(b,a){return b===a?1:0}var\ne=l[12];return k(dh,t(dg,d(n[2],[0,[1,0,[0,[3,[0,df,b[1][1]],0],b[1][1],0,0],[0,[3,[0,de,b[1][1]],0],b[1][1],0,0]],b[1][1],0,0]),e,g,g,c,a))}function\na8(c){var\na=l[13];return k(dl,af(dk,d(n[2],[0,[3,[0,dj,b[1][1]],[0,[0,[3,[0,di,b[1][1]],0],b[1][1],0,0],0]],b[1][1],0,0]),a,R))}function\na9(z){var\na=a8(0),b=c(f[37],a,0),d=a7(0),e=c(f[37],d,b),g=a6(0),h=c(f[37],g,e),i=a5(0),j=c(f[37],i,h),k=a4(0),l=c(f[37],k,j),m=a3(0),n=c(f[37],m,l),o=a2(0),p=c(f[37],o,n),q=a1(0),r=c(f[37],q,p),s=aZ(0),t=c(f[37],s,r),u=aY(0),v=c(f[37],u,t),w=aX(0),x=c(f[37],w,v),y=aW(0);return c(f[37],y,x)}var\ndm=w(h[26],0,h[109][2],a9);d(h[1],dm);m.caml_register_global(136,[0,E,N,x,T,bg,F,G,aq,U,ar,o,as,V,Y,at,au,av,aw,O,ax,ay,H,j,az,I,aA,Z,_,aC,$,aD,aE,aF,aG,aH,aa,aI,aJ,aK,ab,ac,ad,k,J,bs,z,aM,aO,ae,by,bz,af,K,L,r,t,ag,aP,u,ah,s,bM,aQ,aR,bN,g,bQ,bT,ai,ai,P,P,aT,A,A,ak,aU,aW,aX,aY,aZ,v,a0,al,a1,a2,a3,a4,a5,a6,a7,a8,a9],S);return dq}if(typeof\nmodule===\"object\"&&module.exports)module[\"exports\"]=dynload;\n"
      }
    },
    "max-score": 12
  },
  null
]