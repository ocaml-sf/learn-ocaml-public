Question 1
  Found [size] with compatible type.
  Success 1: [size] seems correct.
Question 2
  Found [height] with compatible type.
  Success 1: [height] seems correct.
Question 3
  Found [eval] with compatible type.
  Failure: [eval] is incorrect.
    The following expression:
    
     | eval Even (nonleaf [leaf (-1); leaf 0])
    produces the following result: [0] This is invalid. Producing the
    following result is valid: [1]
  Found [eval] with compatible type.
  Success 1: [eval] appears to be symmetric.
Question 4
  Found [nval] with compatible type.
  Success 1: [nval] seems correct.
  Found [eval] with compatible type.
  Found [nval] with compatible type.
  Failure: [nval] does not respect its specification. This expression:
    
     | let sense = Even in
     | let t = nonleaf [leaf (-1); leaf 0] in
     | interpret sense (nval t)
    should be equivalent to the following expression:
    
     | let sense = Even in
     | let t = nonleaf [leaf (-1); leaf 0] in
     | eval sense t
    Yet, the former expression produces the following result: [1] whereas the
    latter expression produces the following result: [0]
Question 5
  Failure: Cannot find  [ntval]
Question 6
  Failure: Cannot find  [bval]
  Failure: Cannot find  [bval]
Question 7
  Failure: Cannot find  [assured_win]
Question 8
  Failure: Cannot find  [bmove]
